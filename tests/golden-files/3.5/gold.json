[{"data": {"loop_iterations": {"343": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}, {"index": 2, "loops": {}}, {"index": 3, "loops": {}}], "46": [{"index": 0, "loops": {}}, {"index": 1, "loops": {"128": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}]}}, {"index": 2, "loops": {"128": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}, {"index": 2, "loops": {}}, {"index": 3, "loops": {}}]}}, {"index": 97, "loops": {"128": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}, {"index": 2, "loops": {}}, {"index": 191, "loops": {}}, {"index": 192, "loops": {}}, {"index": 193, "loops": {}}]}}, {"index": 98, "loops": {"128": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}, {"index": 2, "loops": {}}, {"index": 193, "loops": {}}, {"index": 194, "loops": {}}, {"index": 195, "loops": {}}]}}, {"index": 99, "loops": {"128": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}, {"index": 2, "loops": {}}, {"index": 195, "loops": {}}, {"index": 196, "loops": {}}, {"index": 197, "loops": {}}]}}], "347": [{"index": 0, "loops": {}}], "240": [{"index": 0, "loops": {"335": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}, {"index": 2, "loops": {}}, {"index": 97, "loops": {}}, {"index": 98, "loops": {}}, {"index": 99, "loops": {}}]}}, {"index": 1, "loops": {"335": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}, {"index": 2, "loops": {}}, {"index": 97, "loops": {}}, {"index": 98, "loops": {}}, {"index": 99, "loops": {}}]}}, {"index": 2, "loops": {"335": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}, {"index": 2, "loops": {}}, {"index": 97, "loops": {}}, {"index": 98, "loops": {}}, {"index": 99, "loops": {}}]}}, {"index": 97, "loops": {"335": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}, {"index": 2, "loops": {}}, {"index": 97, "loops": {}}, {"index": 98, "loops": {}}, {"index": 99, "loops": {}}]}}, {"index": 98, "loops": {"335": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}, {"index": 2, "loops": {}}, {"index": 97, "loops": {}}, {"index": 98, "loops": {}}, {"index": 99, "loops": {}}]}}, {"index": 99, "loops": {"335": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}, {"index": 2, "loops": {}}, {"index": 97, "loops": {}}, {"index": 98, "loops": {}}, {"index": 99, "loops": {}}]}}], "47": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}, {"index": 2, "loops": {}}, {"index": 3, "loops": {}}], "66": [{"index": 0, "loops": {}}]}, "num_special_types": 11, "node_values": {"46": ["", -2, {}], "137": ["None", "NoneType", {}], "249": ["<test_scripts.gold.SlotClass object at 0xABC>", "SlotClass", {"inner_calls": ["test_id_8"]}, ["slot1", ["3", "int", {}]]], "44": ["", -2, {}], "435": ["range(0, 4)", "range", {"len": 4}], "67": ["", -2, {}], "58": ["", -2, {}], "327": {"2": ["", -2, {}], "0": ["", -2, {}]}, "246": ["{0: 0}", "dict", {"len": 1}, ["0", ["0", "int", {}]]], "350": ["<test_scripts.gold.MyClass object at 0xABC>", "MyClass", {}, ["list", ["[[0, 1, 2, ..., 97, 98, 99], [1, 2, 3, ..., 98, 99, 100], [2, 3, 4, ..., 99, 100, 101], ..., [97, 98, 99, ..., 194, 195, 196], [98, 99, 100, ..., 195, 196, 197], [99, 100, 101, ..., 196, 197, 198]]", "list", {"len": 100}, ["0", ["[0, 1, 2, ..., 97, 98, 99]", "list", {"len": 100}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["97", ["97", "int", {}]], ["98", ["98", "int", {}]], ["99", ["99", "int", {}]]]], ["1", ["[1, 2, 3, ..., 98, 99, 100]", "list", {"len": 100}, ["0", ["1", "int", {}]], ["1", ["2", "int", {}]], ["2", ["3", "int", {}]], ["97", ["98", "int", {}]], ["98", ["99", "int", {}]], ["99", ["100", "int", {}]]]], ["2", ["[2, 3, 4, ..., 99, 100, 101]", "list", {"len": 100}, ["0", ["2", "int", {}]], ["1", ["3", "int", {}]], ["2", ["4", "int", {}]], ["97", ["99", "int", {}]], ["98", ["100", "int", {}]], ["99", ["101", "int", {}]]]], ["97", ["[97, 98, 99, ..., 194, 195, 196]", "list", {"len": 100}, ["0", ["97", "int", {}]], ["1", ["98", "int", {}]], ["2", ["99", "int", {}]], ["97", ["194", "int", {}]], ["98", ["195", "int", {}]], ["99", ["196", "int", {}]]]], ["98", ["[98, 99, 100, ..., 195, 196, 197]", "list", {"len": 100}, ["0", ["98", "int", {}]], ["1", ["99", "int", {}]], ["2", ["100", "int", {}]], ["97", ["195", "int", {}]], ["98", ["196", "int", {}]], ["99", ["197", "int", {}]]]], ["99", ["[99, 100, 101, ..., 196, 197, 198]", "list", {"len": 100}, ["0", ["99", "int", {}]], ["1", ["100", "int", {}]], ["2", ["101", "int", {}]], ["97", ["196", "int", {}]], ["98", ["197", "int", {}]], ["99", ["198", "int", {}]]]]]]], "269": ["2", "int", {}], "432": ["range(0, 4)", "range", {"len": 4}], "239": {"1": ["[1, 2, 3, ..., 98, 99, 100]", "list", {"len": 100}, ["0", ["1", "int", {}]], ["1", ["2", "int", {}]], ["2", ["3", "int", {}]], ["97", ["98", "int", {}]], ["98", ["99", "int", {}]], ["99", ["100", "int", {}]]], "5": ["[99, 100, 101, ..., 196, 197, 198]", "list", {"len": 100}, ["0", ["99", "int", {}]], ["1", ["100", "int", {}]], ["2", ["101", "int", {}]], ["97", ["196", "int", {}]], ["98", ["197", "int", {}]], ["99", ["198", "int", {}]]], "4": ["[98, 99, 100, ..., 195, 196, 197]", "list", {"len": 100}, ["0", ["98", "int", {}]], ["1", ["99", "int", {}]], ["2", ["100", "int", {}]], ["97", ["195", "int", {}]], ["98", ["196", "int", {}]], ["99", ["197", "int", {}]]], "3": ["[97, 98, 99, ..., 194, 195, 196]", "list", {"len": 100}, ["0", ["97", "int", {}]], ["1", ["98", "int", {}]], ["2", ["99", "int", {}]], ["97", ["194", "int", {}]], ["98", ["195", "int", {}]], ["99", ["196", "int", {}]]], "2": ["[2, 3, 4, ..., 99, 100, 101]", "list", {"len": 100}, ["0", ["2", "int", {}]], ["1", ["3", "int", {}]], ["2", ["4", "int", {}]], ["97", ["99", "int", {}]], ["98", ["100", "int", {}]], ["99", ["101", "int", {}]]], "0": ["[0, 1, 2, ..., 97, 98, 99]", "list", {"len": 100}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["3", ["3", "int", {}]], ["4", ["4", "int", {}]], ["95", ["95", "int", {}]], ["96", ["96", "int", {}]], ["97", ["97", "int", {}]], ["98", ["98", "int", {}]], ["99", ["99", "int", {}]]]}, "127": {"1": ["", -2, {}], "5": ["", -2, {}], "4": ["", -2, {}], "3": ["", -2, {}], "2": ["", -2, {}], "0": ["", -2, {}]}, "60": ["", -2, {}], "151": ["True", "bool", {}], "256": ["3", "int", {}], "160": ["", -2, {}], "126": ["range(0, 100)", "range", {"len": 100}], "444": ["range(0, 1000)", "range", {"len": 1000}], "122": ["True", "bool", {}], "240": ["", -2, {}], "253": ["[1, 2, {'k': 23}]", "list", {"inner_calls": ["test_id_10"], "len": 3}, ["0", ["1", "int", {}]], ["1", ["2", "int", {}]], ["2", ["{'k': 23}", "dict", {"len": 1}, ["'k'", ["23", "int", {}]]]]], "482": {"4": {"1": ["1", "int", {}], "5": ["195", "int", {}], "4": ["194", "int", {}], "3": ["193", "int", {}], "2": ["2", "int", {}], "0": ["0", "int", {}]}, "3": {"1": ["1", "int", {}], "5": ["193", "int", {}], "4": ["192", "int", {}], "3": ["191", "int", {}], "2": ["2", "int", {}], "0": ["0", "int", {}]}, "1": {"1": ["1", "int", {}], "0": ["0", "int", {}]}, "5": {"1": ["1", "int", {}], "5": ["197", "int", {}], "4": ["196", "int", {}], "3": ["195", "int", {}], "2": ["2", "int", {}], "0": ["0", "int", {}]}, "2": {"0": ["0", "int", {}], "1": ["1", "int", {}], "2": ["2", "int", {}], "3": ["3", "int", {}]}}, "170": ["None", "NoneType", {"inner_calls": ["test_id_13"]}], "417": {"1": ["11.0", "float", {}], "3": ["11.0", "float", {}]}, "50": ["", -2, {}], "441": ["<class 'test_scripts.gold.SlotClass'>", "type", {}, ["__doc__", ["None", "NoneType", {}]], ["__init__", ["<function SlotClass.__init__ at 0xABC>", "function", {}]], ["__module__", ["'test_scripts.gold'", "str", {"len": 17}]], ["__slots__", ["('slot1',)", "tuple", {"len": 1}, ["0", ["'slot1'", "str", {"len": 5}]]]], ["slot1", ["<member 'slot1' of 'SlotClass' objects>", "member_descriptor", {}]]], "168": ["<generator object gen at 0xABC>", "generator", {}], "153": ["None", "NoneType", {}], "56": ["", -2, {}], "162": {"0": ["", -2, {}]}, "229": {"0": ["", -2, {}], "1": ["", -2, {}], "2": ["", -2, {}], "3": ["", -2, {}]}, "323": {"4": {"1": ["None", "NoneType", {}], "5": ["None", "NoneType", {}], "4": ["None", "NoneType", {}], "3": ["None", "NoneType", {}], "2": ["None", "NoneType", {}], "0": ["None", "NoneType", {}]}, "3": {"1": ["None", "NoneType", {}], "5": ["None", "NoneType", {}], "4": ["None", "NoneType", {}], "3": ["None", "NoneType", {}], "2": ["None", "NoneType", {}], "0": ["None", "NoneType", {}]}, "1": {"1": ["None", "NoneType", {}], "0": ["None", "NoneType", {}]}, "5": {"1": ["None", "NoneType", {}], "5": ["None", "NoneType", {}], "4": ["None", "NoneType", {}], "3": ["None", "NoneType", {}], "2": ["None", "NoneType", {}], "0": ["None", "NoneType", {}]}, "2": {"0": ["None", "NoneType", {}], "1": ["None", "NoneType", {}], "2": ["None", "NoneType", {}], "3": ["None", "NoneType", {}]}}, "252": ["[[0, 1, 2, ..., 997, 998, 999], 'hello', {'kwarg1': {'key': 'value'}}]", "list", {"len": 3}, ["0", ["[0, 1, 2, ..., 997, 998, 999]", "list", {"len": 1000}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["997", ["997", "int", {}]], ["998", ["998", "int", {}]], ["999", ["999", "int", {}]]]], ["1", ["'hello'", "str", {"len": 5}]], ["2", ["{'kwarg1': {'key': 'value'}}", "dict", {"len": 1}, ["'kwarg1'", ["{'key': 'value'}", "dict", {"len": 1}, ["'key'", ["'value'", "str", {"len": 5}]]]]]]], "486": {"0": ["ZeroDivisionError: division by zero", -1, {}], "1": ["1.0", "float", {}], "2": ["ZeroDivisionError: division by zero", -1, {}], "3": ["1.0", "float", {}]}, "325": {"1": ["None", "NoneType", {}], "3": ["None", "NoneType", {}]}, "317": {"1": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "5": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "4": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "3": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "2": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "0": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}]}, "61": ["", -2, {}], "546": {"0": ["0", "int", {}], "1": ["1", "int", {}], "2": ["2", "int", {}], "3": ["3", "int", {}]}, "414": {"4": {"1": ["<function dummy at 0xABC>", "function", {}], "5": ["<function dummy at 0xABC>", "function", {}], "4": ["<function dummy at 0xABC>", "function", {}], "3": ["<function dummy at 0xABC>", "function", {}], "2": ["<function dummy at 0xABC>", "function", {}], "0": ["<function dummy at 0xABC>", "function", {}]}, "3": {"1": ["<function dummy at 0xABC>", "function", {}], "5": ["<function dummy at 0xABC>", "function", {}], "4": ["<function dummy at 0xABC>", "function", {}], "3": ["<function dummy at 0xABC>", "function", {}], "2": ["<function dummy at 0xABC>", "function", {}], "0": ["<function dummy at 0xABC>", "function", {}]}, "1": {"1": ["<function dummy at 0xABC>", "function", {}], "0": ["<function dummy at 0xABC>", "function", {}]}, "5": {"1": ["<function dummy at 0xABC>", "function", {}], "5": ["<function dummy at 0xABC>", "function", {}], "4": ["<function dummy at 0xABC>", "function", {}], "3": ["<function dummy at 0xABC>", "function", {}], "2": ["<function dummy at 0xABC>", "function", {}], "0": ["<function dummy at 0xABC>", "function", {}]}, "2": {"0": ["<function dummy at 0xABC>", "function", {}], "1": ["<function dummy at 0xABC>", "function", {}], "2": ["<function dummy at 0xABC>", "function", {}], "3": ["<function dummy at 0xABC>", "function", {}]}}, "59": ["", -2, {}], "130": ["range(0, 6)", "range", {"len": 6}], "63": ["", -2, {}], "335": {"1": ["", -2, {}], "5": ["", -2, {}], "4": ["", -2, {}], "3": ["", -2, {}], "2": ["", -2, {}], "0": ["", -2, {}]}, "62": ["", -2, {}], "422": {"1": {"1": ["1", "int", {}], "5": ["99", "int", {}], "4": ["98", "int", {}], "3": ["97", "int", {}], "2": ["2", "int", {}], "0": ["0", "int", {}]}, "5": {"1": ["1", "int", {}], "5": ["99", "int", {}], "4": ["98", "int", {}], "3": ["97", "int", {}], "2": ["2", "int", {}], "0": ["0", "int", {}]}, "4": {"1": ["1", "int", {}], "5": ["99", "int", {}], "4": ["98", "int", {}], "3": ["97", "int", {}], "2": ["2", "int", {}], "0": ["0", "int", {}]}, "3": {"1": ["1", "int", {}], "5": ["99", "int", {}], "4": ["98", "int", {}], "3": ["97", "int", {}], "2": ["2", "int", {}], "0": ["0", "int", {}]}, "2": {"1": ["1", "int", {}], "5": ["99", "int", {}], "4": ["98", "int", {}], "3": ["97", "int", {}], "2": ["2", "int", {}], "0": ["0", "int", {}]}, "0": {"1": ["1", "int", {}], "5": ["99", "int", {}], "4": ["98", "int", {}], "3": ["97", "int", {}], "2": ["2", "int", {}], "0": ["0", "int", {}]}}, "223": {"1": ["range(0, 2)", "range", {"len": 2}], "5": ["range(0, 198)", "range", {"len": 198}], "4": ["range(0, 196)", "range", {"len": 196}], "3": ["range(0, 194)", "range", {"len": 194}], "2": ["range(0, 4)", "range", {"len": 4}], "0": ["range(0, 0)", "range", {"len": 0}]}, "362": ["<function complex_args at 0xABC>", "function", {}, ["__wrapped__", ["<function complex_args at 0xABC>", "function", {}]]], "54": ["", -2, {}], "286": ["4", "int", {}], "155": ["True", "bool", {}], "346": {"0": ["0", "int", {}]}, "478": {"4": {"1": ["[98]", "list", {"len": 1}, ["0", ["98", "int", {}]]], "5": ["[98, 99, 100, ..., 290, 291, 292]", "list", {"len": 195}, ["0", ["98", "int", {}]], ["1", ["99", "int", {}]], ["2", ["100", "int", {}]], ["192", ["290", "int", {}]], ["193", ["291", "int", {}]], ["194", ["292", "int", {}]]], "4": ["[98, 99, 100, ..., 289, 290, 291]", "list", {"len": 194}, ["0", ["98", "int", {}]], ["1", ["99", "int", {}]], ["2", ["100", "int", {}]], ["191", ["289", "int", {}]], ["192", ["290", "int", {}]], ["193", ["291", "int", {}]]], "3": ["[98, 99, 100, ..., 288, 289, 290]", "list", {"len": 193}, ["0", ["98", "int", {}]], ["1", ["99", "int", {}]], ["2", ["100", "int", {}]], ["190", ["288", "int", {}]], ["191", ["289", "int", {}]], ["192", ["290", "int", {}]]], "2": ["[98, 99]", "list", {"len": 2}, ["0", ["98", "int", {}]], ["1", ["99", "int", {}]]], "0": ["[]", "list", {"len": 0}]}, "3": {"1": ["[97]", "list", {"len": 1}, ["0", ["97", "int", {}]]], "5": ["[97, 98, 99, ..., 287, 288, 289]", "list", {"len": 193}, ["0", ["97", "int", {}]], ["1", ["98", "int", {}]], ["2", ["99", "int", {}]], ["190", ["287", "int", {}]], ["191", ["288", "int", {}]], ["192", ["289", "int", {}]]], "4": ["[97, 98, 99, ..., 286, 287, 288]", "list", {"len": 192}, ["0", ["97", "int", {}]], ["1", ["98", "int", {}]], ["2", ["99", "int", {}]], ["189", ["286", "int", {}]], ["190", ["287", "int", {}]], ["191", ["288", "int", {}]]], "3": ["[97, 98, 99, ..., 285, 286, 287]", "list", {"len": 191}, ["0", ["97", "int", {}]], ["1", ["98", "int", {}]], ["2", ["99", "int", {}]], ["188", ["285", "int", {}]], ["189", ["286", "int", {}]], ["190", ["287", "int", {}]]], "2": ["[97, 98]", "list", {"len": 2}, ["0", ["97", "int", {}]], ["1", ["98", "int", {}]]], "0": ["[]", "list", {"len": 0}]}, "1": {"1": ["[1]", "list", {"len": 1}, ["0", ["1", "int", {}]]], "0": ["[]", "list", {"len": 0}]}, "5": {"1": ["[99]", "list", {"len": 1}, ["0", ["99", "int", {}]]], "5": ["[99, 100, 101, ..., 293, 294, 295]", "list", {"len": 197}, ["0", ["99", "int", {}]], ["1", ["100", "int", {}]], ["2", ["101", "int", {}]], ["194", ["293", "int", {}]], ["195", ["294", "int", {}]], ["196", ["295", "int", {}]]], "4": ["[99, 100, 101, ..., 292, 293, 294]", "list", {"len": 196}, ["0", ["99", "int", {}]], ["1", ["100", "int", {}]], ["2", ["101", "int", {}]], ["193", ["292", "int", {}]], ["194", ["293", "int", {}]], ["195", ["294", "int", {}]]], "3": ["[99, 100, 101, ..., 291, 292, 293]", "list", {"len": 195}, ["0", ["99", "int", {}]], ["1", ["100", "int", {}]], ["2", ["101", "int", {}]], ["192", ["291", "int", {}]], ["193", ["292", "int", {}]], ["194", ["293", "int", {}]]], "2": ["[99, 100]", "list", {"len": 2}, ["0", ["99", "int", {}]], ["1", ["100", "int", {}]]], "0": ["[]", "list", {"len": 0}]}, "2": {"0": ["[]", "list", {"len": 0}], "1": ["[2]", "list", {"len": 1}, ["0", ["2", "int", {}]]], "2": ["[2, 3]", "list", {"len": 2}, ["0", ["2", "int", {}]], ["1", ["3", "int", {}]]], "3": ["[2, 3, 4]", "list", {"len": 3}, ["0", ["2", "int", {}]], ["1", ["3", "int", {}]], ["2", ["4", "int", {}]]]}}, "358": ["[0, 1, 2, ..., 997, 998, 999]", "list", {"len": 1000}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["3", ["3", "int", {}]], ["4", ["4", "int", {}]], ["995", ["995", "int", {}]], ["996", ["996", "int", {}]], ["997", ["997", "int", {}]], ["998", ["998", "int", {}]], ["999", ["999", "int", {}]]], "413": {"4": {"1": ["99", "int", {}], "5": ["293", "int", {}], "4": ["292", "int", {}], "3": ["291", "int", {}], "2": ["100", "int", {}], "0": ["98", "int", {}]}, "3": {"1": ["98", "int", {}], "5": ["290", "int", {}], "4": ["289", "int", {}], "3": ["288", "int", {}], "2": ["99", "int", {}], "0": ["97", "int", {}]}, "1": {"1": ["2", "int", {}], "0": ["1", "int", {}]}, "5": {"1": ["100", "int", {}], "5": ["296", "int", {}], "4": ["295", "int", {}], "3": ["294", "int", {}], "2": ["101", "int", {}], "0": ["99", "int", {}]}, "2": {"0": ["2", "int", {}], "1": ["3", "int", {}], "2": ["4", "int", {}], "3": ["5", "int", {}]}}, "128": {"1": ["", -2, {}], "5": ["", -2, {}], "4": ["", -2, {}], "3": ["", -2, {}], "2": ["", -2, {}], "0": ["", -2, {}]}, "52": ["", -2, {}], "64": ["", -2, {}], "272": ["(1, 2)", "tuple", {"len": 2}, ["0", ["1", "int", {}]], ["1", ["2", "int", {}]]], "163": ["True", "bool", {}], "242": ["<generator object main.<locals>.<genexpr> at 0xABC>", "generator", {}], "370": ["'1 + 2'", "str", {"len": 5}], "166": ["True", "bool", {}], "232": {"3": ["", -2, {}]}, "293": ["<function use_gen_2 at 0xABC>", "function", {}, ["__wrapped__", ["<function use_gen_2 at 0xABC>", "function", {}]]], "68": ["", -2, {}], "292": ["<generator object gen at 0xABC>", "generator", {}], "345": {"0": ["0", "int", {}]}, "342": {"0": ["0", "int", {}], "1": ["1", "int", {}], "2": ["2", "int", {}], "3": ["3", "int", {}]}, "47": ["", -2, {}], "248": ["<function dummy at 0xABC>", "function", {}], "225": {"4": {"1": ["", -2, {}], "5": ["", -2, {}], "4": ["", -2, {}], "3": ["", -2, {}], "2": ["", -2, {}], "0": ["", -2, {}]}, "3": {"1": ["", -2, {}], "5": ["", -2, {}], "4": ["", -2, {}], "3": ["", -2, {}], "2": ["", -2, {}], "0": ["", -2, {}]}, "1": {"1": ["", -2, {}], "0": ["", -2, {}]}, "5": {"1": ["", -2, {}], "5": ["", -2, {}], "4": ["", -2, {}], "3": ["", -2, {}], "2": ["", -2, {}], "0": ["", -2, {}]}, "2": {"0": ["", -2, {}], "1": ["", -2, {}], "2": ["", -2, {}], "3": ["", -2, {}]}}, "321": {"1": ["2", "int", {}], "5": ["198", "int", {}], "4": ["196", "int", {}], "3": ["194", "int", {}], "2": ["4", "int", {}], "0": ["0", "int", {}]}, "57": ["", -2, {}], "72": ["", -2, {}], "213": ["6", "int", {"inner_calls": ["test_id_2"]}], "314": ["<function factorial at 0xABC>", "function", {}, ["__wrapped__", ["<function factorial at 0xABC>", "function", {}]]], "139": ["None", "NoneType", {}], "360": ["{'kwarg1': {'key': 'value'}}", "dict", {"len": 1}, ["'kwarg1'", ["{'key': 'value'}", "dict", {"len": 1}, ["'key'", ["'value'", "str", {"len": 5}]]]]], "343": ["", -2, {}], "331": ["<class 'test_scripts.gold.MyClass'>", "type", {}, ["__add__", ["<function MyClass.__add__ at 0xABC>", "function", {}, ["__wrapped__", ["<function MyClass.__add__ at 0xABC>", "function", {}]]]], ["__dict__", ["<attribute '__dict__' of 'MyClass' objects>", "getset_descriptor", {}]], ["__doc__", ["None", "NoneType", {}]], ["__enter__", ["<function MyClass.__enter__ at 0xABC>", "function", {}, ["__wrapped__", ["<function MyClass.__enter__ at 0xABC>", "function", {}]]]], ["__exit__", ["<function MyClass.__exit__ at 0xABC>", "function", {}, ["__wrapped__", ["<function MyClass.__exit__ at 0xABC>", "function", {}]]]], ["__module__", ["'test_scripts.gold'", "str", {"len": 17}]], ["__weakref__", ["<attribute '__weakref__' of 'MyClass' objects>", "getset_descriptor", {}]]], "224": {"4": {"1": ["", -2, {}], "5": ["", -2, {}], "4": ["", -2, {}], "3": ["", -2, {}], "2": ["", -2, {}], "0": ["", -2, {}]}, "3": {"1": ["", -2, {}], "5": ["", -2, {}], "4": ["", -2, {}], "3": ["", -2, {}], "2": ["", -2, {}], "0": ["", -2, {}]}, "1": {"1": ["", -2, {}], "0": ["", -2, {}]}, "5": {"1": ["", -2, {}], "5": ["", -2, {}], "4": ["", -2, {}], "3": ["", -2, {}], "2": ["", -2, {}], "0": ["", -2, {}]}, "2": {"0": ["", -2, {}], "1": ["", -2, {}], "2": ["", -2, {}], "3": ["", -2, {}]}}, "385": ["<function dummy at 0xABC>", "function", {}], "245": ["<function dummy at 0xABC>", "function", {}], "154": ["True", "bool", {}], "73": ["", -2, {}], "527": {"4": {"1": ["[[], [1, 2], [2, 3, 4, 5], ..., [96, 97, 98, ..., 285, 286, 287], [97, 98, 99, ..., 288, 289, 290], [98]]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["96", ["[96, 97, 98, ..., 285, 286, 287]", "list", {"len": 192}]], ["97", ["[97, 98, 99, ..., 288, 289, 290]", "list", {"len": 194}]], ["98", ["[98]", "list", {"len": 1}]]], "5": ["[[], [1, 2], [2, 3, 4, 5], ..., [96, 97, 98, ..., 285, 286, 287], [97, 98, 99, ..., 288, 289, 290], [98, 99, 100, ..., 290, 291, 292]]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["96", ["[96, 97, 98, ..., 285, 286, 287]", "list", {"len": 192}]], ["97", ["[97, 98, 99, ..., 288, 289, 290]", "list", {"len": 194}]], ["98", ["[98, 99, 100, ..., 290, 291, 292]", "list", {"len": 195}]]], "4": ["[[], [1, 2], [2, 3, 4, 5], ..., [96, 97, 98, ..., 285, 286, 287], [97, 98, 99, ..., 288, 289, 290], [98, 99, 100, ..., 289, 290, 291]]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["96", ["[96, 97, 98, ..., 285, 286, 287]", "list", {"len": 192}]], ["97", ["[97, 98, 99, ..., 288, 289, 290]", "list", {"len": 194}]], ["98", ["[98, 99, 100, ..., 289, 290, 291]", "list", {"len": 194}]]], "3": ["[[], [1, 2], [2, 3, 4, 5], ..., [96, 97, 98, ..., 285, 286, 287], [97, 98, 99, ..., 288, 289, 290], [98, 99, 100, ..., 288, 289, 290]]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["96", ["[96, 97, 98, ..., 285, 286, 287]", "list", {"len": 192}]], ["97", ["[97, 98, 99, ..., 288, 289, 290]", "list", {"len": 194}]], ["98", ["[98, 99, 100, ..., 288, 289, 290]", "list", {"len": 193}]]], "2": ["[[], [1, 2], [2, 3, 4, 5], ..., [96, 97, 98, ..., 285, 286, 287], [97, 98, 99, ..., 288, 289, 290], [98, 99]]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["96", ["[96, 97, 98, ..., 285, 286, 287]", "list", {"len": 192}]], ["97", ["[97, 98, 99, ..., 288, 289, 290]", "list", {"len": 194}]], ["98", ["[98, 99]", "list", {"len": 2}]]], "0": ["[[], [1, 2], [2, 3, 4, 5], ..., [96, 97, 98, ..., 285, 286, 287], [97, 98, 99, ..., 288, 289, 290], []]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["96", ["[96, 97, 98, ..., 285, 286, 287]", "list", {"len": 192}]], ["97", ["[97, 98, 99, ..., 288, 289, 290]", "list", {"len": 194}]], ["98", ["[]", "list", {"len": 0}]]]}, "3": {"1": ["[[], [1, 2], [2, 3, 4, 5], ..., [95, 96, 97, ..., 282, 283, 284], [96, 97, 98, ..., 285, 286, 287], [97]]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["95", ["[95, 96, 97, ..., 282, 283, 284]", "list", {"len": 190}]], ["96", ["[96, 97, 98, ..., 285, 286, 287]", "list", {"len": 192}]], ["97", ["[97]", "list", {"len": 1}]]], "5": ["[[], [1, 2], [2, 3, 4, 5], ..., [95, 96, 97, ..., 282, 283, 284], [96, 97, 98, ..., 285, 286, 287], [97, 98, 99, ..., 287, 288, 289]]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["95", ["[95, 96, 97, ..., 282, 283, 284]", "list", {"len": 190}]], ["96", ["[96, 97, 98, ..., 285, 286, 287]", "list", {"len": 192}]], ["97", ["[97, 98, 99, ..., 287, 288, 289]", "list", {"len": 193}]]], "4": ["[[], [1, 2], [2, 3, 4, 5], ..., [95, 96, 97, ..., 282, 283, 284], [96, 97, 98, ..., 285, 286, 287], [97, 98, 99, ..., 286, 287, 288]]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["95", ["[95, 96, 97, ..., 282, 283, 284]", "list", {"len": 190}]], ["96", ["[96, 97, 98, ..., 285, 286, 287]", "list", {"len": 192}]], ["97", ["[97, 98, 99, ..., 286, 287, 288]", "list", {"len": 192}]]], "3": ["[[], [1, 2], [2, 3, 4, 5], ..., [95, 96, 97, ..., 282, 283, 284], [96, 97, 98, ..., 285, 286, 287], [97, 98, 99, ..., 285, 286, 287]]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["95", ["[95, 96, 97, ..., 282, 283, 284]", "list", {"len": 190}]], ["96", ["[96, 97, 98, ..., 285, 286, 287]", "list", {"len": 192}]], ["97", ["[97, 98, 99, ..., 285, 286, 287]", "list", {"len": 191}]]], "2": ["[[], [1, 2], [2, 3, 4, 5], ..., [95, 96, 97, ..., 282, 283, 284], [96, 97, 98, ..., 285, 286, 287], [97, 98]]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["95", ["[95, 96, 97, ..., 282, 283, 284]", "list", {"len": 190}]], ["96", ["[96, 97, 98, ..., 285, 286, 287]", "list", {"len": 192}]], ["97", ["[97, 98]", "list", {"len": 2}]]], "0": ["[[], [1, 2], [2, 3, 4, 5], ..., [95, 96, 97, ..., 282, 283, 284], [96, 97, 98, ..., 285, 286, 287], []]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["95", ["[95, 96, 97, ..., 282, 283, 284]", "list", {"len": 190}]], ["96", ["[96, 97, 98, ..., 285, 286, 287]", "list", {"len": 192}]], ["97", ["[]", "list", {"len": 0}]]]}, "1": {"1": ["[[], [1]]", "list", {"len": 2}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1]", "list", {"len": 1}]]], "0": ["[[], []]", "list", {"len": 2}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[]", "list", {"len": 0}]]]}, "5": {"1": ["[[], [1, 2], [2, 3, 4, 5], ..., [97, 98, 99, ..., 288, 289, 290], [98, 99, 100, ..., 291, 292, 293], [99]]", "list", {"len": 100}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["97", ["[97, 98, 99, ..., 288, 289, 290]", "list", {"len": 194}]], ["98", ["[98, 99, 100, ..., 291, 292, 293]", "list", {"len": 196}]], ["99", ["[99]", "list", {"len": 1}]]], "5": ["[[], [1, 2], [2, 3, 4, 5], ..., [97, 98, 99, ..., 288, 289, 290], [98, 99, 100, ..., 291, 292, 293], [99, 100, 101, ..., 293, 294, 295]]", "list", {"len": 100}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["97", ["[97, 98, 99, ..., 288, 289, 290]", "list", {"len": 194}]], ["98", ["[98, 99, 100, ..., 291, 292, 293]", "list", {"len": 196}]], ["99", ["[99, 100, 101, ..., 293, 294, 295]", "list", {"len": 197}]]], "4": ["[[], [1, 2], [2, 3, 4, 5], ..., [97, 98, 99, ..., 288, 289, 290], [98, 99, 100, ..., 291, 292, 293], [99, 100, 101, ..., 292, 293, 294]]", "list", {"len": 100}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["97", ["[97, 98, 99, ..., 288, 289, 290]", "list", {"len": 194}]], ["98", ["[98, 99, 100, ..., 291, 292, 293]", "list", {"len": 196}]], ["99", ["[99, 100, 101, ..., 292, 293, 294]", "list", {"len": 196}]]], "3": ["[[], [1, 2], [2, 3, 4, 5], ..., [97, 98, 99, ..., 288, 289, 290], [98, 99, 100, ..., 291, 292, 293], [99, 100, 101, ..., 291, 292, 293]]", "list", {"len": 100}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["97", ["[97, 98, 99, ..., 288, 289, 290]", "list", {"len": 194}]], ["98", ["[98, 99, 100, ..., 291, 292, 293]", "list", {"len": 196}]], ["99", ["[99, 100, 101, ..., 291, 292, 293]", "list", {"len": 195}]]], "2": ["[[], [1, 2], [2, 3, 4, 5], ..., [97, 98, 99, ..., 288, 289, 290], [98, 99, 100, ..., 291, 292, 293], [99, 100]]", "list", {"len": 100}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["97", ["[97, 98, 99, ..., 288, 289, 290]", "list", {"len": 194}]], ["98", ["[98, 99, 100, ..., 291, 292, 293]", "list", {"len": 196}]], ["99", ["[99, 100]", "list", {"len": 2}]]], "0": ["[[], [1, 2], [2, 3, 4, 5], ..., [97, 98, 99, ..., 288, 289, 290], [98, 99, 100, ..., 291, 292, 293], []]", "list", {"len": 100}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["97", ["[97, 98, 99, ..., 288, 289, 290]", "list", {"len": 194}]], ["98", ["[98, 99, 100, ..., 291, 292, 293]", "list", {"len": 196}]], ["99", ["[]", "list", {"len": 0}]]]}, "2": {"0": ["[[], [1, 2], []]", "list", {"len": 3}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[]", "list", {"len": 0}]]], "1": ["[[], [1, 2], [2]]", "list", {"len": 3}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2]", "list", {"len": 1}]]], "2": ["[[], [1, 2], [2, 3]]", "list", {"len": 3}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3]", "list", {"len": 2}]]], "3": ["[[], [1, 2], [2, 3, 4]]", "list", {"len": 3}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4]", "list", {"len": 3}]]]}}, "412": {"4": {"1": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "5": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "4": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "3": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "2": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "0": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}]}, "3": {"1": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "5": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "4": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "3": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "2": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "0": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}]}, "1": {"1": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "0": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}]}, "5": {"1": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "5": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "4": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "3": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "2": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "0": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}]}, "2": {"0": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "1": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "2": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "3": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}]}}, "439": ["range(0, 1)", "range", {"len": 1}], "145": ["True", "bool", {}], "328": {"1": ["1", "int", {}], "3": ["3", "int", {}]}, "69": ["", -2, {}], "131": {"0": ["", -2, {}], "1": ["", -2, {}], "2": ["", -2, {}], "3": ["", -2, {}]}, "141": ["", -2, {}], "275": ["ValueError()", "ValueError", {}], "250": ["[[0, 1, 2, ..., 997, 998, 999], 'hello', {'kwarg1': {'key': 'value'}}]", "list", {"inner_calls": ["test_id_9"], "len": 3}, ["0", ["[0, 1, 2, ..., 997, 998, 999]", "list", {"len": 1000}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["997", ["997", "int", {}]], ["998", ["998", "int", {}]], ["999", ["999", "int", {}]]]], ["1", ["'hello'", "str", {"len": 5}]], ["2", ["{'kwarg1': {'key': 'value'}}", "dict", {"len": 1}, ["'kwarg1'", ["{'key': 'value'}", "dict", {"len": 1}, ["'key'", ["'value'", "str", {"len": 5}]]]]]]], "66": ["", -2, {}], "261": ["6", "int", {}], "143": ["True", "bool", {}], "142": ["None", "NoneType", {}], "426": {"1": ["range(0, 100)", "range", {"len": 100}], "5": ["range(0, 100)", "range", {"len": 100}], "4": ["range(0, 100)", "range", {"len": 100}], "3": ["range(0, 100)", "range", {"len": 100}], "2": ["range(0, 100)", "range", {"len": 100}], "0": ["range(0, 100)", "range", {"len": 100}]}, "291": ["<function use_gen_1 at 0xABC>", "function", {}, ["__wrapped__", ["<function use_gen_1 at 0xABC>", "function", {}]]], "156": ["ValueError", -1, {}], "281": ["None", "NoneType", {}], "169": ["None", "NoneType", {"inner_calls": ["test_id_11"]}], "386": ["<function main.<locals>.<lambda> at 0xABC>", "function", {}], "144": ["True", "bool", {}], "138": ["None", "NoneType", {}], "411": {"1": ["1", "int", {}], "5": ["99", "int", {}], "4": ["98", "int", {}], "3": ["97", "int", {}], "2": ["2", "int", {}], "0": ["0", "int", {}]}, "265": ["<function dummy at 0xABC>", "function", {}], "231": {"1": ["False", "bool", {}], "3": ["True", "bool", {}]}, "134": ["<test_scripts.gold.MyClass object at 0xABC>", "MyClass", {"inner_calls": ["test_id_5"]}], "236": ["<test_scripts.gold.MyClass object at 0xABC>", "MyClass", {}], "424": {"1": {"1": ["1", "int", {}], "5": ["1", "int", {}], "4": ["1", "int", {}], "3": ["1", "int", {}], "2": ["1", "int", {}], "0": ["1", "int", {}]}, "5": {"1": ["99", "int", {}], "5": ["99", "int", {}], "4": ["99", "int", {}], "3": ["99", "int", {}], "2": ["99", "int", {}], "0": ["99", "int", {}]}, "4": {"1": ["98", "int", {}], "5": ["98", "int", {}], "4": ["98", "int", {}], "3": ["98", "int", {}], "2": ["98", "int", {}], "0": ["98", "int", {}]}, "3": {"1": ["97", "int", {}], "5": ["97", "int", {}], "4": ["97", "int", {}], "3": ["97", "int", {}], "2": ["97", "int", {}], "0": ["97", "int", {}]}, "2": {"1": ["2", "int", {}], "5": ["2", "int", {}], "4": ["2", "int", {}], "3": ["2", "int", {}], "2": ["2", "int", {}], "0": ["2", "int", {}]}, "0": {"1": ["0", "int", {}], "5": ["0", "int", {}], "4": ["0", "int", {}], "3": ["0", "int", {}], "2": ["0", "int", {}], "0": ["0", "int", {}]}}, "480": {"4": {"1": ["98", "int", {}], "5": ["98", "int", {}], "4": ["98", "int", {}], "3": ["98", "int", {}], "2": ["98", "int", {}], "0": ["98", "int", {}]}, "3": {"1": ["97", "int", {}], "5": ["97", "int", {}], "4": ["97", "int", {}], "3": ["97", "int", {}], "2": ["97", "int", {}], "0": ["97", "int", {}]}, "1": {"1": ["1", "int", {}], "0": ["1", "int", {}]}, "5": {"1": ["99", "int", {}], "5": ["99", "int", {}], "4": ["99", "int", {}], "3": ["99", "int", {}], "2": ["99", "int", {}], "0": ["99", "int", {}]}, "2": {"0": ["2", "int", {}], "1": ["2", "int", {}], "2": ["2", "int", {}], "3": ["2", "int", {}]}}, "53": ["", -2, {"inner_calls": ["test_id_6", "test_id_7"]}], "244": ["{0, 1, 2, 3}", "set", {"len": 4}, ["<0>", ["0", "int", {}]], ["<1>", ["1", "int", {}]], ["<2>", ["2", "int", {}]], ["<3>", ["3", "int", {}]]], "405": {"1": ["[[]]", "list", {"len": 1}, ["0", ["[]", "list", {"len": 0}]]], "5": ["[[], [1, 2], [2, 3, 4, 5], ..., [96, 97, 98, ..., 285, 286, 287], [97, 98, 99, ..., 288, 289, 290], [98, 99, 100, ..., 291, 292, 293]]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}, ["0", ["1", "int", {}]], ["1", ["2", "int", {}]]]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}, ["0", ["2", "int", {}]], ["1", ["3", "int", {}]], ["2", ["4", "int", {}]], ["3", ["5", "int", {}]]]], ["96", ["[96, 97, 98, ..., 285, 286, 287]", "list", {"len": 192}, ["0", ["96", "int", {}]], ["1", ["97", "int", {}]], ["2", ["98", "int", {}]], ["189", ["285", "int", {}]], ["190", ["286", "int", {}]], ["191", ["287", "int", {}]]]], ["97", ["[97, 98, 99, ..., 288, 289, 290]", "list", {"len": 194}, ["0", ["97", "int", {}]], ["1", ["98", "int", {}]], ["2", ["99", "int", {}]], ["191", ["288", "int", {}]], ["192", ["289", "int", {}]], ["193", ["290", "int", {}]]]], ["98", ["[98, 99, 100, ..., 291, 292, 293]", "list", {"len": 196}, ["0", ["98", "int", {}]], ["1", ["99", "int", {}]], ["2", ["100", "int", {}]], ["193", ["291", "int", {}]], ["194", ["292", "int", {}]], ["195", ["293", "int", {}]]]]], "4": ["[[], [1, 2], [2, 3, 4, 5], ..., [95, 96, 97, ..., 282, 283, 284], [96, 97, 98, ..., 285, 286, 287], [97, 98, 99, ..., 288, 289, 290]]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}, ["0", ["1", "int", {}]], ["1", ["2", "int", {}]]]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}, ["0", ["2", "int", {}]], ["1", ["3", "int", {}]], ["2", ["4", "int", {}]], ["3", ["5", "int", {}]]]], ["95", ["[95, 96, 97, ..., 282, 283, 284]", "list", {"len": 190}, ["0", ["95", "int", {}]], ["1", ["96", "int", {}]], ["2", ["97", "int", {}]], ["187", ["282", "int", {}]], ["188", ["283", "int", {}]], ["189", ["284", "int", {}]]]], ["96", ["[96, 97, 98, ..., 285, 286, 287]", "list", {"len": 192}, ["0", ["96", "int", {}]], ["1", ["97", "int", {}]], ["2", ["98", "int", {}]], ["189", ["285", "int", {}]], ["190", ["286", "int", {}]], ["191", ["287", "int", {}]]]], ["97", ["[97, 98, 99, ..., 288, 289, 290]", "list", {"len": 194}, ["0", ["97", "int", {}]], ["1", ["98", "int", {}]], ["2", ["99", "int", {}]], ["191", ["288", "int", {}]], ["192", ["289", "int", {}]], ["193", ["290", "int", {}]]]]], "3": ["[[], [1, 2], [2, 3, 4, 5], ..., [94, 95, 96, ..., 279, 280, 281], [95, 96, 97, ..., 282, 283, 284], [96, 97, 98, ..., 285, 286, 287]]", "list", {"len": 97}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}, ["0", ["1", "int", {}]], ["1", ["2", "int", {}]]]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}, ["0", ["2", "int", {}]], ["1", ["3", "int", {}]], ["2", ["4", "int", {}]], ["3", ["5", "int", {}]]]], ["94", ["[94, 95, 96, ..., 279, 280, 281]", "list", {"len": 188}, ["0", ["94", "int", {}]], ["1", ["95", "int", {}]], ["2", ["96", "int", {}]], ["185", ["279", "int", {}]], ["186", ["280", "int", {}]], ["187", ["281", "int", {}]]]], ["95", ["[95, 96, 97, ..., 282, 283, 284]", "list", {"len": 190}, ["0", ["95", "int", {}]], ["1", ["96", "int", {}]], ["2", ["97", "int", {}]], ["187", ["282", "int", {}]], ["188", ["283", "int", {}]], ["189", ["284", "int", {}]]]], ["96", ["[96, 97, 98, ..., 285, 286, 287]", "list", {"len": 192}, ["0", ["96", "int", {}]], ["1", ["97", "int", {}]], ["2", ["98", "int", {}]], ["189", ["285", "int", {}]], ["190", ["286", "int", {}]], ["191", ["287", "int", {}]]]]], "2": ["[[], [1, 2]]", "list", {"len": 2}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}, ["0", ["1", "int", {}]], ["1", ["2", "int", {}]]]]], "0": ["[]", "list", {"len": 0}]}, "45": ["", -2, {}], "354": ["[0, 1, 2, ..., 997, 998, 999]", "list", {"len": 1000}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["3", ["3", "int", {}]], ["4", ["4", "int", {}]], ["995", ["995", "int", {}]], ["996", ["996", "int", {}]], ["997", ["997", "int", {}]], ["998", ["998", "int", {}]], ["999", ["999", "int", {}]]], "334": {"1": {"1": ["2", "int", {}], "5": ["100", "int", {}], "4": ["99", "int", {}], "3": ["98", "int", {}], "2": ["3", "int", {}], "0": ["1", "int", {}]}, "5": {"1": ["100", "int", {}], "5": ["198", "int", {}], "4": ["197", "int", {}], "3": ["196", "int", {}], "2": ["101", "int", {}], "0": ["99", "int", {}]}, "4": {"1": ["99", "int", {}], "5": ["197", "int", {}], "4": ["196", "int", {}], "3": ["195", "int", {}], "2": ["100", "int", {}], "0": ["98", "int", {}]}, "3": {"1": ["98", "int", {}], "5": ["196", "int", {}], "4": ["195", "int", {}], "3": ["194", "int", {}], "2": ["99", "int", {}], "0": ["97", "int", {}]}, "2": {"1": ["3", "int", {}], "5": ["101", "int", {}], "4": ["100", "int", {}], "3": ["99", "int", {}], "2": ["4", "int", {}], "0": ["2", "int", {}]}, "0": {"1": ["1", "int", {}], "5": ["99", "int", {}], "4": ["98", "int", {}], "3": ["97", "int", {}], "2": ["2", "int", {}], "0": ["0", "int", {}]}}, "332": ["<class 'test_scripts.gold.MyClass'>", "type", {}, ["__add__", ["<function MyClass.__add__ at 0xABC>", "function", {}, ["__wrapped__", ["<function MyClass.__add__ at 0xABC>", "function", {}]]]], ["__dict__", ["<attribute '__dict__' of 'MyClass' objects>", "getset_descriptor", {}]], ["__doc__", ["None", "NoneType", {}]], ["__enter__", ["<function MyClass.__enter__ at 0xABC>", "function", {}, ["__wrapped__", ["<function MyClass.__enter__ at 0xABC>", "function", {}]]]], ["__exit__", ["<function MyClass.__exit__ at 0xABC>", "function", {}, ["__wrapped__", ["<function MyClass.__exit__ at 0xABC>", "function", {}]]]], ["__module__", ["'test_scripts.gold'", "str", {"len": 17}]], ["__weakref__", ["<attribute '__weakref__' of 'MyClass' objects>", "getset_descriptor", {}]]], "282": ["8", "int", {}], "416": {"0": ["<function dummy at 0xABC>", "function", {}], "1": ["<function dummy at 0xABC>", "function", {}], "2": ["<function dummy at 0xABC>", "function", {}], "3": ["<function dummy at 0xABC>", "function", {}]}, "448": ["range(0, 1000)", "range", {"len": 1000}], "71": ["", -2, {}], "51": ["", -2, {}], "290": ["<function gen at 0xABC>", "function", {}, ["__wrapped__", ["<function gen at 0xABC>", "function", {}]]], "415": {"4": {"1": ["[[], [1, 2], [2, 3, 4, 5], ..., [96, 97, 98, ..., 285, 286, 287], [97, 98, 99, ..., 288, 289, 290], [98, 99]]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["96", ["[96, 97, 98, ..., 285, 286, 287]", "list", {"len": 192}]], ["97", ["[97, 98, 99, ..., 288, 289, 290]", "list", {"len": 194}]], ["98", ["[98, 99]", "list", {"len": 2}]]], "5": ["[[], [1, 2], [2, 3, 4, 5], ..., [96, 97, 98, ..., 285, 286, 287], [97, 98, 99, ..., 288, 289, 290], [98, 99, 100, ..., 291, 292, 293]]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["96", ["[96, 97, 98, ..., 285, 286, 287]", "list", {"len": 192}]], ["97", ["[97, 98, 99, ..., 288, 289, 290]", "list", {"len": 194}]], ["98", ["[98, 99, 100, ..., 291, 292, 293]", "list", {"len": 196}]]], "4": ["[[], [1, 2], [2, 3, 4, 5], ..., [96, 97, 98, ..., 285, 286, 287], [97, 98, 99, ..., 288, 289, 290], [98, 99, 100, ..., 290, 291, 292]]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["96", ["[96, 97, 98, ..., 285, 286, 287]", "list", {"len": 192}]], ["97", ["[97, 98, 99, ..., 288, 289, 290]", "list", {"len": 194}]], ["98", ["[98, 99, 100, ..., 290, 291, 292]", "list", {"len": 195}]]], "3": ["[[], [1, 2], [2, 3, 4, 5], ..., [96, 97, 98, ..., 285, 286, 287], [97, 98, 99, ..., 288, 289, 290], [98, 99, 100, ..., 289, 290, 291]]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["96", ["[96, 97, 98, ..., 285, 286, 287]", "list", {"len": 192}]], ["97", ["[97, 98, 99, ..., 288, 289, 290]", "list", {"len": 194}]], ["98", ["[98, 99, 100, ..., 289, 290, 291]", "list", {"len": 194}]]], "2": ["[[], [1, 2], [2, 3, 4, 5], ..., [96, 97, 98, ..., 285, 286, 287], [97, 98, 99, ..., 288, 289, 290], [98, 99, 100]]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["96", ["[96, 97, 98, ..., 285, 286, 287]", "list", {"len": 192}]], ["97", ["[97, 98, 99, ..., 288, 289, 290]", "list", {"len": 194}]], ["98", ["[98, 99, 100]", "list", {"len": 3}]]], "0": ["[[], [1, 2], [2, 3, 4, 5], ..., [96, 97, 98, ..., 285, 286, 287], [97, 98, 99, ..., 288, 289, 290], [98]]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["96", ["[96, 97, 98, ..., 285, 286, 287]", "list", {"len": 192}]], ["97", ["[97, 98, 99, ..., 288, 289, 290]", "list", {"len": 194}]], ["98", ["[98]", "list", {"len": 1}]]]}, "3": {"1": ["[[], [1, 2], [2, 3, 4, 5], ..., [95, 96, 97, ..., 282, 283, 284], [96, 97, 98, ..., 285, 286, 287], [97, 98]]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["95", ["[95, 96, 97, ..., 282, 283, 284]", "list", {"len": 190}]], ["96", ["[96, 97, 98, ..., 285, 286, 287]", "list", {"len": 192}]], ["97", ["[97, 98]", "list", {"len": 2}]]], "5": ["[[], [1, 2], [2, 3, 4, 5], ..., [95, 96, 97, ..., 282, 283, 284], [96, 97, 98, ..., 285, 286, 287], [97, 98, 99, ..., 288, 289, 290]]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["95", ["[95, 96, 97, ..., 282, 283, 284]", "list", {"len": 190}]], ["96", ["[96, 97, 98, ..., 285, 286, 287]", "list", {"len": 192}]], ["97", ["[97, 98, 99, ..., 288, 289, 290]", "list", {"len": 194}]]], "4": ["[[], [1, 2], [2, 3, 4, 5], ..., [95, 96, 97, ..., 282, 283, 284], [96, 97, 98, ..., 285, 286, 287], [97, 98, 99, ..., 287, 288, 289]]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["95", ["[95, 96, 97, ..., 282, 283, 284]", "list", {"len": 190}]], ["96", ["[96, 97, 98, ..., 285, 286, 287]", "list", {"len": 192}]], ["97", ["[97, 98, 99, ..., 287, 288, 289]", "list", {"len": 193}]]], "3": ["[[], [1, 2], [2, 3, 4, 5], ..., [95, 96, 97, ..., 282, 283, 284], [96, 97, 98, ..., 285, 286, 287], [97, 98, 99, ..., 286, 287, 288]]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["95", ["[95, 96, 97, ..., 282, 283, 284]", "list", {"len": 190}]], ["96", ["[96, 97, 98, ..., 285, 286, 287]", "list", {"len": 192}]], ["97", ["[97, 98, 99, ..., 286, 287, 288]", "list", {"len": 192}]]], "2": ["[[], [1, 2], [2, 3, 4, 5], ..., [95, 96, 97, ..., 282, 283, 284], [96, 97, 98, ..., 285, 286, 287], [97, 98, 99]]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["95", ["[95, 96, 97, ..., 282, 283, 284]", "list", {"len": 190}]], ["96", ["[96, 97, 98, ..., 285, 286, 287]", "list", {"len": 192}]], ["97", ["[97, 98, 99]", "list", {"len": 3}]]], "0": ["[[], [1, 2], [2, 3, 4, 5], ..., [95, 96, 97, ..., 282, 283, 284], [96, 97, 98, ..., 285, 286, 287], [97]]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["95", ["[95, 96, 97, ..., 282, 283, 284]", "list", {"len": 190}]], ["96", ["[96, 97, 98, ..., 285, 286, 287]", "list", {"len": 192}]], ["97", ["[97]", "list", {"len": 1}]]]}, "1": {"1": ["[[], [1, 2]]", "list", {"len": 2}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]]], "0": ["[[], [1]]", "list", {"len": 2}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1]", "list", {"len": 1}]]]}, "5": {"1": ["[[], [1, 2], [2, 3, 4, 5], ..., [97, 98, 99, ..., 288, 289, 290], [98, 99, 100, ..., 291, 292, 293], [99, 100]]", "list", {"len": 100}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["97", ["[97, 98, 99, ..., 288, 289, 290]", "list", {"len": 194}]], ["98", ["[98, 99, 100, ..., 291, 292, 293]", "list", {"len": 196}]], ["99", ["[99, 100]", "list", {"len": 2}]]], "5": ["[[], [1, 2], [2, 3, 4, 5], ..., [97, 98, 99, ..., 288, 289, 290], [98, 99, 100, ..., 291, 292, 293], [99, 100, 101, ..., 294, 295, 296]]", "list", {"len": 100}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["97", ["[97, 98, 99, ..., 288, 289, 290]", "list", {"len": 194}]], ["98", ["[98, 99, 100, ..., 291, 292, 293]", "list", {"len": 196}]], ["99", ["[99, 100, 101, ..., 294, 295, 296]", "list", {"len": 198}]]], "4": ["[[], [1, 2], [2, 3, 4, 5], ..., [97, 98, 99, ..., 288, 289, 290], [98, 99, 100, ..., 291, 292, 293], [99, 100, 101, ..., 293, 294, 295]]", "list", {"len": 100}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["97", ["[97, 98, 99, ..., 288, 289, 290]", "list", {"len": 194}]], ["98", ["[98, 99, 100, ..., 291, 292, 293]", "list", {"len": 196}]], ["99", ["[99, 100, 101, ..., 293, 294, 295]", "list", {"len": 197}]]], "3": ["[[], [1, 2], [2, 3, 4, 5], ..., [97, 98, 99, ..., 288, 289, 290], [98, 99, 100, ..., 291, 292, 293], [99, 100, 101, ..., 292, 293, 294]]", "list", {"len": 100}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["97", ["[97, 98, 99, ..., 288, 289, 290]", "list", {"len": 194}]], ["98", ["[98, 99, 100, ..., 291, 292, 293]", "list", {"len": 196}]], ["99", ["[99, 100, 101, ..., 292, 293, 294]", "list", {"len": 196}]]], "2": ["[[], [1, 2], [2, 3, 4, 5], ..., [97, 98, 99, ..., 288, 289, 290], [98, 99, 100, ..., 291, 292, 293], [99, 100, 101]]", "list", {"len": 100}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["97", ["[97, 98, 99, ..., 288, 289, 290]", "list", {"len": 194}]], ["98", ["[98, 99, 100, ..., 291, 292, 293]", "list", {"len": 196}]], ["99", ["[99, 100, 101]", "list", {"len": 3}]]], "0": ["[[], [1, 2], [2, 3, 4, 5], ..., [97, 98, 99, ..., 288, 289, 290], [98, 99, 100, ..., 291, 292, 293], [99]]", "list", {"len": 100}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["97", ["[97, 98, 99, ..., 288, 289, 290]", "list", {"len": 194}]], ["98", ["[98, 99, 100, ..., 291, 292, 293]", "list", {"len": 196}]], ["99", ["[99]", "list", {"len": 1}]]]}, "2": {"0": ["[[], [1, 2], [2]]", "list", {"len": 3}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2]", "list", {"len": 1}]]], "1": ["[[], [1, 2], [2, 3]]", "list", {"len": 3}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3]", "list", {"len": 2}]]], "2": ["[[], [1, 2], [2, 3, 4]]", "list", {"len": 3}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4]", "list", {"len": 3}]]], "3": ["[[], [1, 2], [2, 3, 4, 5]]", "list", {"len": 3}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]]]}}, "237": ["<test_scripts.gold.MyClass object at 0xABC>", "MyClass", {}], "132": {"1": ["", -2, {}], "3": ["", -2, {}]}, "534": {"0": ["0", "int", {}], "1": ["1", "int", {}], "2": ["0", "int", {}], "3": ["1", "int", {}]}, "243": ["<function dummy at 0xABC>", "function", {}], "221": {"1": ["None", "NoneType", {}], "5": ["None", "NoneType", {}], "4": ["None", "NoneType", {}], "3": ["None", "NoneType", {}], "2": ["None", "NoneType", {}], "0": ["None", "NoneType", {}]}, "280": ["", -2, {}], "55": ["", -2, {}], "352": ["<test_scripts.gold.SlotClass object at 0xABC>", "SlotClass", {}, ["slot1", ["3", "int", {}]]], "49": ["", -2, {}], "247": ["<test_scripts.gold.MyClass object at 0xABC>", "MyClass", {}, ["list", ["[[0, 1, 2, ..., 97, 98, 99], [1, 2, 3, ..., 98, 99, 100], [2, 3, 4, ..., 99, 100, 101], ..., [97, 98, 99, ..., 194, 195, 196], [98, 99, 100, ..., 195, 196, 197], [99, 100, 101, ..., 196, 197, 198]]", "list", {"len": 100}, ["0", ["[0, 1, 2, ..., 97, 98, 99]", "list", {"len": 100}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["97", ["97", "int", {}]], ["98", ["98", "int", {}]], ["99", ["99", "int", {}]]]], ["1", ["[1, 2, 3, ..., 98, 99, 100]", "list", {"len": 100}, ["0", ["1", "int", {}]], ["1", ["2", "int", {}]], ["2", ["3", "int", {}]], ["97", ["98", "int", {}]], ["98", ["99", "int", {}]], ["99", ["100", "int", {}]]]], ["2", ["[2, 3, 4, ..., 99, 100, 101]", "list", {"len": 100}, ["0", ["2", "int", {}]], ["1", ["3", "int", {}]], ["2", ["4", "int", {}]], ["97", ["99", "int", {}]], ["98", ["100", "int", {}]], ["99", ["101", "int", {}]]]], ["97", ["[97, 98, 99, ..., 194, 195, 196]", "list", {"len": 100}, ["0", ["97", "int", {}]], ["1", ["98", "int", {}]], ["2", ["99", "int", {}]], ["97", ["194", "int", {}]], ["98", ["195", "int", {}]], ["99", ["196", "int", {}]]]], ["98", ["[98, 99, 100, ..., 195, 196, 197]", "list", {"len": 100}, ["0", ["98", "int", {}]], ["1", ["99", "int", {}]], ["2", ["100", "int", {}]], ["97", ["195", "int", {}]], ["98", ["196", "int", {}]], ["99", ["197", "int", {}]]]], ["99", ["[99, 100, 101, ..., 196, 197, 198]", "list", {"len": 100}, ["0", ["99", "int", {}]], ["1", ["100", "int", {}]], ["2", ["101", "int", {}]], ["97", ["196", "int", {}]], ["98", ["197", "int", {}]], ["99", ["198", "int", {}]]]]]]], "136": ["[[0, 1, 2, ..., 97, 98, 99], [1, 2, 3, ..., 98, 99, 100], [2, 3, 4, ..., 99, 100, 101], ..., [97, 98, 99, ..., 194, 195, 196], [98, 99, 100, ..., 195, 196, 197], [99, 100, 101, ..., 196, 197, 198]]", "list", {"len": 100}, ["0", ["[0, 1, 2, ..., 97, 98, 99]", "list", {"len": 100}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["97", ["97", "int", {}]], ["98", ["98", "int", {}]], ["99", ["99", "int", {}]]]], ["1", ["[1, 2, 3, ..., 98, 99, 100]", "list", {"len": 100}, ["0", ["1", "int", {}]], ["1", ["2", "int", {}]], ["2", ["3", "int", {}]], ["97", ["98", "int", {}]], ["98", ["99", "int", {}]], ["99", ["100", "int", {}]]]], ["2", ["[2, 3, 4, ..., 99, 100, 101]", "list", {"len": 100}, ["0", ["2", "int", {}]], ["1", ["3", "int", {}]], ["2", ["4", "int", {}]], ["97", ["99", "int", {}]], ["98", ["100", "int", {}]], ["99", ["101", "int", {}]]]], ["3", ["[3, 4, 5, ..., 100, 101, 102]", "list", {"len": 100}, ["0", ["3", "int", {}]], ["1", ["4", "int", {}]], ["2", ["5", "int", {}]], ["97", ["100", "int", {}]], ["98", ["101", "int", {}]], ["99", ["102", "int", {}]]]], ["4", ["[4, 5, 6, ..., 101, 102, 103]", "list", {"len": 100}, ["0", ["4", "int", {}]], ["1", ["5", "int", {}]], ["2", ["6", "int", {}]], ["97", ["101", "int", {}]], ["98", ["102", "int", {}]], ["99", ["103", "int", {}]]]], ["95", ["[95, 96, 97, ..., 192, 193, 194]", "list", {"len": 100}, ["0", ["95", "int", {}]], ["1", ["96", "int", {}]], ["2", ["97", "int", {}]], ["97", ["192", "int", {}]], ["98", ["193", "int", {}]], ["99", ["194", "int", {}]]]], ["96", ["[96, 97, 98, ..., 193, 194, 195]", "list", {"len": 100}, ["0", ["96", "int", {}]], ["1", ["97", "int", {}]], ["2", ["98", "int", {}]], ["97", ["193", "int", {}]], ["98", ["194", "int", {}]], ["99", ["195", "int", {}]]]], ["97", ["[97, 98, 99, ..., 194, 195, 196]", "list", {"len": 100}, ["0", ["97", "int", {}]], ["1", ["98", "int", {}]], ["2", ["99", "int", {}]], ["97", ["194", "int", {}]], ["98", ["195", "int", {}]], ["99", ["196", "int", {}]]]], ["98", ["[98, 99, 100, ..., 195, 196, 197]", "list", {"len": 100}, ["0", ["98", "int", {}]], ["1", ["99", "int", {}]], ["2", ["100", "int", {}]], ["97", ["195", "int", {}]], ["98", ["196", "int", {}]], ["99", ["197", "int", {}]]]], ["99", ["[99, 100, 101, ..., 196, 197, 198]", "list", {"len": 100}, ["0", ["99", "int", {}]], ["1", ["100", "int", {}]], ["2", ["101", "int", {}]], ["97", ["196", "int", {}]], ["98", ["197", "int", {}]], ["99", ["198", "int", {}]]]]], "322": {"4": {"1": ["None", "NoneType", {}], "5": ["None", "NoneType", {}], "4": ["None", "NoneType", {}], "3": ["None", "NoneType", {}], "2": ["None", "NoneType", {}], "0": ["None", "NoneType", {}]}, "3": {"1": ["None", "NoneType", {}], "5": ["None", "NoneType", {}], "4": ["None", "NoneType", {}], "3": ["None", "NoneType", {}], "2": ["None", "NoneType", {}], "0": ["None", "NoneType", {}]}, "1": {"1": ["None", "NoneType", {}], "0": ["None", "NoneType", {}]}, "5": {"1": ["None", "NoneType", {}], "5": ["None", "NoneType", {}], "4": ["None", "NoneType", {}], "3": ["None", "NoneType", {}], "2": ["None", "NoneType", {}], "0": ["None", "NoneType", {}]}, "2": {"0": ["None", "NoneType", {}], "1": ["None", "NoneType", {}], "2": ["None", "NoneType", {}], "3": ["None", "NoneType", {}]}}, "353": ["<function complex_args at 0xABC>", "function", {}, ["__wrapped__", ["<function complex_args at 0xABC>", "function", {}]]], "48": ["", -2, {}], "294": ["<generator object gen at 0xABC>", "generator", {}], "234": ["<test_scripts.gold.MyClass object at 0xABC>", "MyClass", {}], "347": ["", -2, {}], "70": ["", -2, {}], "65": ["", -2, {}], "241": ["<function dummy at 0xABC>", "function", {}], "337": ["range(0, 100)", "range", {"len": 100}]}, "type_names": ["MyClass", "NoneType", "SlotClass", "ValueError", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "member_descriptor", "method_descriptor", "range", "set", "str", "tuple", "type", "wrapper_descriptor"]}, "exception": null, "arguments": [], "traceback": null, "return_value": "None", "function": {"data": {"node_loops": {"339": [340], "225": [46, 128], "321": [46], "345": [347], "327": [47], "128": [46], "326": [47], "224": [46, 128], "127": [46], "527": [46, 128], "223": [46], "480": [46, 128], "231": [47], "412": [46, 128], "416": [47], "328": [47], "131": [47], "482": [46, 128], "417": [47], "546": [47], "426": [240], "405": [46], "162": [66], "229": [47], "411": [46], "323": [46, 128], "486": [47], "325": [47], "424": [240, 335], "317": [46], "492": [240], "414": [46, 128], "334": [240, 335], "422": [240, 335], "322": [46, 128], "239": [240], "415": [46, 128], "132": [47], "534": [47], "346": [347], "478": [46, 128], "413": [46, 128], "320": [46], "335": [240], "232": [47], "342": [343], "221": [46]}, "node_ranges": [{"depth": 2, "start": 16, "classes": ["stmt"], "tree_index": 44, "end": 40}, {"depth": 2, "start": 46, "classes": ["stmt"], "tree_index": 45, "end": 55}, {"depth": 2, "start": 56, "classes": ["loop", "stmt"], "tree_index": 46, "end": 194}, {"depth": 2, "start": 196, "classes": ["loop", "stmt"], "tree_index": 47, "end": 359}, {"depth": 2, "start": 365, "classes": ["stmt"], "tree_index": 48, "end": 390}, {"depth": 2, "start": 395, "classes": ["stmt"], "tree_index": 49, "end": 453}, {"depth": 2, "start": 458, "classes": ["stmt"], "tree_index": 50, "end": 484}, {"depth": 2, "start": 489, "classes": ["stmt"], "tree_index": 51, "end": 517}, {"depth": 2, "start": 522, "classes": ["stmt"], "tree_index": 52, "end": 553}, {"depth": 2, "start": 554, "classes": ["stmt"], "tree_index": 53, "end": 578}, {"depth": 2, "start": 583, "classes": ["stmt"], "tree_index": 54, "end": 605}, {"depth": 2, "start": 611, "classes": ["stmt"], "tree_index": 55, "end": 812}, {"depth": 2, "start": 818, "classes": ["stmt"], "tree_index": 56, "end": 880}, {"depth": 2, "start": 886, "classes": ["stmt"], "tree_index": 57, "end": 922}, {"depth": 2, "start": 928, "classes": ["stmt"], "tree_index": 58, "end": 933}, {"depth": 2, "start": 938, "classes": ["stmt"], "tree_index": 59, "end": 944}, {"depth": 2, "start": 949, "classes": ["stmt"], "tree_index": 60, "end": 962}, {"depth": 2, "start": 967, "classes": ["stmt"], "tree_index": 61, "end": 972}, {"depth": 2, "start": 978, "classes": ["stmt"], "tree_index": 62, "end": 1002}, {"depth": 2, "start": 1008, "classes": ["stmt"], "tree_index": 63, "end": 1032}, {"depth": 2, "start": 1037, "classes": ["stmt"], "tree_index": 64, "end": 1067}, {"depth": 2, "start": 1069, "classes": ["stmt"], "tree_index": 65, "end": 1238}, {"depth": 2, "start": 1240, "classes": ["loop", "stmt"], "tree_index": 66, "end": 1269}, {"depth": 2, "start": 1275, "classes": ["stmt"], "tree_index": 67, "end": 1307}, {"depth": 2, "start": 1313, "classes": ["stmt"], "tree_index": 68, "end": 1321}, {"depth": 2, "start": 1326, "classes": ["stmt"], "tree_index": 69, "end": 1331}, {"depth": 2, "start": 1336, "classes": ["stmt"], "tree_index": 70, "end": 1349}, {"depth": 2, "start": 1355, "classes": ["stmt"], "tree_index": 71, "end": 1364}, {"depth": 2, "start": 1369, "classes": ["stmt"], "tree_index": 72, "end": 1381}, {"depth": 2, "start": 1386, "classes": ["stmt"], "tree_index": 73, "end": 1398}, {"depth": 3, "start": 23, "classes": [], "tree_index": 122, "end": 40}, {"depth": 3, "start": 69, "classes": [], "tree_index": 126, "end": 79}, {"depth": 3, "start": 89, "classes": ["stmt"], "tree_index": 127, "end": 104}, {"depth": 3, "start": 105, "classes": ["loop", "stmt"], "tree_index": 128, "end": 194}, {"depth": 3, "start": 209, "classes": [], "tree_index": 130, "end": 217}, {"depth": 3, "start": 219, "classes": ["stmt"], "tree_index": 131, "end": 322}, {"depth": 3, "start": 323, "classes": ["stmt"], "tree_index": 132, "end": 359}, {"depth": 3, "start": 369, "classes": [], "tree_index": 134, "end": 390}, {"depth": 3, "start": 404, "classes": [], "tree_index": 136, "end": 453}, {"depth": 3, "start": 458, "classes": [], "tree_index": 137, "end": 484}, {"depth": 3, "start": 489, "classes": [], "tree_index": 138, "end": 517}, {"depth": 3, "start": 522, "classes": [], "tree_index": 139, "end": 553}, {"depth": 3, "start": 574, "classes": ["stmt"], "tree_index": 141, "end": 578}, {"depth": 3, "start": 583, "classes": [], "tree_index": 142, "end": 605}, {"depth": 3, "start": 618, "classes": [], "tree_index": 143, "end": 812}, {"depth": 3, "start": 825, "classes": [], "tree_index": 144, "end": 880}, {"depth": 3, "start": 893, "classes": [], "tree_index": 145, "end": 922}, {"depth": 3, "start": 956, "classes": [], "tree_index": 151, "end": 962}, {"depth": 3, "start": 978, "classes": [], "tree_index": 153, "end": 1002}, {"depth": 3, "start": 1015, "classes": [], "tree_index": 154, "end": 1032}, {"depth": 3, "start": 1044, "classes": [], "tree_index": 155, "end": 1067}, {"depth": 3, "start": 1086, "classes": ["stmt"], "tree_index": 156, "end": 1104}, {"depth": 3, "start": 1231, "classes": ["stmt"], "tree_index": 160, "end": 1238}, {"depth": 3, "start": 1264, "classes": ["stmt"], "tree_index": 162, "end": 1269}, {"depth": 3, "start": 1282, "classes": [], "tree_index": 163, "end": 1307}, {"depth": 3, "start": 1343, "classes": [], "tree_index": 166, "end": 1349}, {"depth": 3, "start": 1359, "classes": [], "tree_index": 168, "end": 1364}, {"depth": 3, "start": 1369, "classes": [], "tree_index": 169, "end": 1381}, {"depth": 3, "start": 1386, "classes": [], "tree_index": 170, "end": 1398}, {"depth": 4, "start": 23, "classes": [], "tree_index": 213, "end": 35}, {"depth": 4, "start": 69, "classes": [], "tree_index": 219, "end": 74}, {"depth": 4, "start": 89, "classes": [], "tree_index": 221, "end": 104}, {"depth": 4, "start": 122, "classes": [], "tree_index": 223, "end": 134}, {"depth": 4, "start": 148, "classes": ["stmt"], "tree_index": 224, "end": 170}, {"depth": 4, "start": 183, "classes": ["stmt"], "tree_index": 225, "end": 194}, {"depth": 4, "start": 209, "classes": [], "tree_index": 227, "end": 214}, {"depth": 4, "start": 244, "classes": ["stmt"], "tree_index": 229, "end": 267}, {"depth": 4, "start": 334, "classes": [], "tree_index": 231, "end": 340}, {"depth": 4, "start": 354, "classes": ["stmt"], "tree_index": 232, "end": 359}, {"depth": 4, "start": 369, "classes": [], "tree_index": 234, "end": 378}, {"depth": 4, "start": 381, "classes": [], "tree_index": 236, "end": 390}, {"depth": 4, "start": 395, "classes": [], "tree_index": 237, "end": 396}, {"depth": 4, "start": 405, "classes": [], "tree_index": 239, "end": 432}, {"depth": 4, "start": 433, "classes": ["loop"], "tree_index": 240, "end": 452}, {"depth": 4, "start": 458, "classes": [], "tree_index": 241, "end": 463}, {"depth": 4, "start": 464, "classes": [], "tree_index": 242, "end": 483}, {"depth": 4, "start": 489, "classes": [], "tree_index": 243, "end": 494}, {"depth": 4, "start": 495, "classes": [], "tree_index": 244, "end": 516}, {"depth": 4, "start": 522, "classes": [], "tree_index": 245, "end": 527}, {"depth": 4, "start": 528, "classes": [], "tree_index": 246, "end": 552}, {"depth": 4, "start": 563, "classes": [], "tree_index": 247, "end": 564}, {"depth": 4, "start": 583, "classes": [], "tree_index": 248, "end": 588}, {"depth": 4, "start": 589, "classes": [], "tree_index": 249, "end": 604}, {"depth": 4, "start": 618, "classes": [], "tree_index": 250, "end": 729}, {"depth": 4, "start": 733, "classes": [], "tree_index": 252, "end": 812}, {"depth": 4, "start": 825, "classes": [], "tree_index": 253, "end": 859}, {"depth": 4, "start": 893, "classes": [], "tree_index": 256, "end": 917}, {"depth": 4, "start": 956, "classes": [], "tree_index": 261, "end": 957}, {"depth": 4, "start": 978, "classes": [], "tree_index": 265, "end": 983}, {"depth": 4, "start": 1015, "classes": [], "tree_index": 269, "end": 1027}, {"depth": 4, "start": 1044, "classes": [], "tree_index": 272, "end": 1057}, {"depth": 4, "start": 1092, "classes": [], "tree_index": 275, "end": 1104}, {"depth": 4, "start": 1116, "classes": [], "tree_index": 276, "end": 1130}, {"depth": 4, "start": 1145, "classes": ["stmt"], "tree_index": 277, "end": 1149}, {"depth": 4, "start": 1161, "classes": [], "tree_index": 278, "end": 1170}, {"depth": 4, "start": 1180, "classes": ["stmt"], "tree_index": 279, "end": 1184}, {"depth": 4, "start": 1205, "classes": ["stmt"], "tree_index": 280, "end": 1209}, {"depth": 4, "start": 1231, "classes": [], "tree_index": 281, "end": 1238}, {"depth": 4, "start": 1282, "classes": [], "tree_index": 282, "end": 1302}, {"depth": 4, "start": 1343, "classes": [], "tree_index": 286, "end": 1344}, {"depth": 4, "start": 1359, "classes": [], "tree_index": 290, "end": 1362}, {"depth": 4, "start": 1369, "classes": [], "tree_index": 291, "end": 1378}, {"depth": 4, "start": 1379, "classes": [], "tree_index": 292, "end": 1380}, {"depth": 4, "start": 1386, "classes": [], "tree_index": 293, "end": 1395}, {"depth": 4, "start": 1396, "classes": [], "tree_index": 294, "end": 1397}, {"depth": 5, "start": 23, "classes": [], "tree_index": 314, "end": 32}, {"depth": 5, "start": 89, "classes": [], "tree_index": 317, "end": 100}, {"depth": 5, "start": 122, "classes": [], "tree_index": 320, "end": 127}, {"depth": 5, "start": 128, "classes": [], "tree_index": 321, "end": 133}, {"depth": 5, "start": 148, "classes": [], "tree_index": 322, "end": 170}, {"depth": 5, "start": 183, "classes": [], "tree_index": 323, "end": 194}, {"depth": 5, "start": 244, "classes": [], "tree_index": 325, "end": 267}, {"depth": 5, "start": 283, "classes": [], "tree_index": 326, "end": 300}, {"depth": 5, "start": 314, "classes": ["stmt"], "tree_index": 327, "end": 322}, {"depth": 5, "start": 334, "classes": [], "tree_index": 328, "end": 335}, {"depth": 5, "start": 369, "classes": [], "tree_index": 331, "end": 376}, {"depth": 5, "start": 381, "classes": [], "tree_index": 332, "end": 388}, {"depth": 5, "start": 406, "classes": [], "tree_index": 334, "end": 411}, {"depth": 5, "start": 412, "classes": ["loop"], "tree_index": 335, "end": 431}, {"depth": 5, "start": 442, "classes": [], "tree_index": 337, "end": 452}, {"depth": 5, "start": 464, "classes": [], "tree_index": 339, "end": 465}, {"depth": 5, "start": 496, "classes": [], "tree_index": 342, "end": 497}, {"depth": 5, "start": 498, "classes": ["loop"], "tree_index": 343, "end": 515}, {"depth": 5, "start": 529, "classes": [], "tree_index": 345, "end": 530}, {"depth": 5, "start": 532, "classes": [], "tree_index": 346, "end": 533}, {"depth": 5, "start": 534, "classes": ["loop"], "tree_index": 347, "end": 551}, {"depth": 5, "start": 589, "classes": [], "tree_index": 350, "end": 590}, {"depth": 5, "start": 593, "classes": [], "tree_index": 352, "end": 604}, {"depth": 5, "start": 618, "classes": [], "tree_index": 353, "end": 630}, {"depth": 5, "start": 640, "classes": [], "tree_index": 354, "end": 657}, {"depth": 5, "start": 734, "classes": [], "tree_index": 358, "end": 751}, {"depth": 5, "start": 782, "classes": [], "tree_index": 360, "end": 811}, {"depth": 5, "start": 825, "classes": [], "tree_index": 362, "end": 837}, {"depth": 5, "start": 838, "classes": [], "tree_index": 363, "end": 845}, {"depth": 5, "start": 893, "classes": [], "tree_index": 369, "end": 897}, {"depth": 5, "start": 898, "classes": [], "tree_index": 370, "end": 916}, {"depth": 5, "start": 1092, "classes": [], "tree_index": 382, "end": 1102}, {"depth": 5, "start": 1231, "classes": [], "tree_index": 385, "end": 1236}, {"depth": 5, "start": 1283, "classes": [], "tree_index": 386, "end": 1298}, {"depth": 6, "start": 89, "classes": [], "tree_index": 405, "end": 93}, {"depth": 6, "start": 132, "classes": [], "tree_index": 411, "end": 133}, {"depth": 6, "start": 148, "classes": [], "tree_index": 412, "end": 163}, {"depth": 6, "start": 164, "classes": [], "tree_index": 413, "end": 169}, {"depth": 6, "start": 183, "classes": [], "tree_index": 414, "end": 188}, {"depth": 6, "start": 189, "classes": [], "tree_index": 415, "end": 193}, {"depth": 6, "start": 244, "classes": [], "tree_index": 416, "end": 249}, {"depth": 6, "start": 250, "classes": [], "tree_index": 417, "end": 266}, {"depth": 6, "start": 406, "classes": [], "tree_index": 422, "end": 407}, {"depth": 6, "start": 410, "classes": [], "tree_index": 424, "end": 411}, {"depth": 6, "start": 421, "classes": [], "tree_index": 426, "end": 431}, {"depth": 6, "start": 442, "classes": [], "tree_index": 428, "end": 447}, {"depth": 6, "start": 475, "classes": [], "tree_index": 432, "end": 483}, {"depth": 6, "start": 507, "classes": [], "tree_index": 435, "end": 515}, {"depth": 6, "start": 543, "classes": [], "tree_index": 439, "end": 551}, {"depth": 6, "start": 593, "classes": [], "tree_index": 441, "end": 602}, {"depth": 6, "start": 640, "classes": [], "tree_index": 443, "end": 644}, {"depth": 6, "start": 645, "classes": [], "tree_index": 444, "end": 656}, {"depth": 6, "start": 734, "classes": [], "tree_index": 447, "end": 738}, {"depth": 6, "start": 739, "classes": [], "tree_index": 448, "end": 750}, {"depth": 6, "start": 782, "classes": [], "tree_index": 449, "end": 786}, {"depth": 6, "start": 1293, "classes": [], "tree_index": 474, "end": 1298}, {"depth": 7, "start": 148, "classes": [], "tree_index": 478, "end": 156}, {"depth": 7, "start": 164, "classes": [], "tree_index": 480, "end": 165}, {"depth": 7, "start": 168, "classes": [], "tree_index": 482, "end": 169}, {"depth": 7, "start": 250, "classes": [], "tree_index": 486, "end": 261}, {"depth": 7, "start": 421, "classes": [], "tree_index": 492, "end": 426}, {"depth": 7, "start": 475, "classes": [], "tree_index": 496, "end": 480}, {"depth": 7, "start": 507, "classes": [], "tree_index": 499, "end": 512}, {"depth": 7, "start": 543, "classes": [], "tree_index": 502, "end": 548}, {"depth": 7, "start": 645, "classes": [], "tree_index": 506, "end": 650}, {"depth": 7, "start": 739, "classes": [], "tree_index": 511, "end": 744}, {"depth": 7, "start": 1293, "classes": [], "tree_index": 524, "end": 1294}, {"depth": 8, "start": 148, "classes": [], "tree_index": 527, "end": 152}, {"depth": 8, "start": 255, "classes": [], "tree_index": 534, "end": 260}, {"depth": 9, "start": 255, "classes": [], "tree_index": 546, "end": 256}], "loop_ranges": [{"start": 64, "tree_index": 46, "end": 65}, {"start": 204, "tree_index": 47, "end": 205}, {"start": 1250, "tree_index": 66, "end": 1254}, {"start": 117, "tree_index": 128, "end": 118}, {"start": 437, "tree_index": 240, "end": 438}, {"start": 416, "tree_index": 335, "end": 417}, {"start": 502, "tree_index": 343, "end": 503}, {"start": 538, "tree_index": 347, "end": 539}]}, "name": "main", "html_body": "<span data-index=\"12\" class=\"stmt\">@<span data-index=\"74\" class=\"\">eye</span>\ndef main():\n    <span data-index=\"44\" class=\"stmt\">assert <span data-index=\"122\" class=\"\"><span data-index=\"213\" class=\"\"><span data-index=\"314\" class=\"\">factorial</span>(3)</span> == 6</span></span>\n\n    <span data-index=\"45\" class=\"stmt\">vals = []</span>\n<span data-index=\"46\" class=\"loop stmt\">    for i in <span data-index=\"126\" class=\"\"><span data-index=\"219\" class=\"\">range</span>(100)</span>:\n        <span data-index=\"127\" class=\"stmt\"><span data-index=\"221\" class=\"\"><span data-index=\"317\" class=\"\"><span data-index=\"405\" class=\"\">vals</span>.append</span>([])</span></span>\n<span data-index=\"128\" class=\"loop stmt\">        for j in <span data-index=\"223\" class=\"\"><span data-index=\"320\" class=\"\">range</span>(<span data-index=\"321\" class=\"\">2 * <span data-index=\"411\" class=\"\">i</span></span>)</span>:\n            <span data-index=\"224\" class=\"stmt\"><span data-index=\"322\" class=\"\"><span data-index=\"412\" class=\"\"><span data-index=\"478\" class=\"\"><span data-index=\"527\" class=\"\">vals</span>[-1]</span>.append</span>(<span data-index=\"413\" class=\"\"><span data-index=\"480\" class=\"\">i</span> + <span data-index=\"482\" class=\"\">j</span></span>)</span></span>\n            <span data-index=\"225\" class=\"stmt\"><span data-index=\"323\" class=\"\"><span data-index=\"414\" class=\"\">dummy</span>(<span data-index=\"415\" class=\"\">vals</span>)</span></span></span></span>\n\n<span data-index=\"47\" class=\"loop stmt\">    for i in <span data-index=\"130\" class=\"\"><span data-index=\"227\" class=\"\">range</span>(6)</span>:\n<span data-index=\"131\" class=\"stmt\">        try:\n            <span data-index=\"229\" class=\"stmt\"><span data-index=\"325\" class=\"\"><span data-index=\"416\" class=\"\">dummy</span>(<span data-index=\"417\" class=\"\"><span data-index=\"486\" class=\"\">1 / (<span data-index=\"534\" class=\"\"><span data-index=\"546\" class=\"\">i</span> % 2</span>)</span> + 10</span>)</span></span>\n        except <span data-index=\"326\" class=\"\">ZeroDivisionError</span>:\n            <span data-index=\"327\" class=\"stmt\">continue</span></span>\n<span data-index=\"132\" class=\"stmt\">        if <span data-index=\"231\" class=\"\"><span data-index=\"328\" class=\"\">i</span> == 3</span>:\n            <span data-index=\"232\" class=\"stmt\">break</span></span></span>\n\n    <span data-index=\"48\" class=\"stmt\">c = <span data-index=\"134\" class=\"\"><span data-index=\"234\" class=\"\"><span data-index=\"331\" class=\"\">MyClass</span>()</span> + <span data-index=\"236\" class=\"\"><span data-index=\"332\" class=\"\">MyClass</span>()</span></span></span>\n    <span data-index=\"49\" class=\"stmt\"><span data-index=\"237\" class=\"\">c</span>.list = <span data-index=\"136\" class=\"\">[<span data-index=\"239\" class=\"\">[<span data-index=\"334\" class=\"\"><span data-index=\"422\" class=\"\">x</span> + <span data-index=\"424\" class=\"\">y</span></span> <span data-index=\"335\" class=\"loop\">for x in <span data-index=\"426\" class=\"\"><span data-index=\"492\" class=\"\">range</span>(100)</span></span>]</span> \n <span data-index=\"240\" class=\"loop\">for y in <span data-index=\"337\" class=\"\"><span data-index=\"428\" class=\"\">range</span>(100)</span></span>]</span></span>\n    <span data-index=\"50\" class=\"stmt\"><span data-index=\"137\" class=\"\"><span data-index=\"241\" class=\"\">dummy</span>(<span data-index=\"242\" class=\"\"><span data-index=\"339\" class=\"\">n</span> for n in <span data-index=\"432\" class=\"\"><span data-index=\"496\" class=\"\">range</span>(4)</span></span>)</span></span>\n    <span data-index=\"51\" class=\"stmt\"><span data-index=\"138\" class=\"\"><span data-index=\"243\" class=\"\">dummy</span>(<span data-index=\"244\" class=\"\">{<span data-index=\"342\" class=\"\">n</span> <span data-index=\"343\" class=\"loop\">for n in <span data-index=\"435\" class=\"\"><span data-index=\"499\" class=\"\">range</span>(4)</span></span>}</span>)</span></span>\n    <span data-index=\"52\" class=\"stmt\"><span data-index=\"139\" class=\"\"><span data-index=\"245\" class=\"\">dummy</span>(<span data-index=\"246\" class=\"\">{<span data-index=\"345\" class=\"\">n</span>: <span data-index=\"346\" class=\"\">n</span> <span data-index=\"347\" class=\"loop\">for n in <span data-index=\"439\" class=\"\"><span data-index=\"502\" class=\"\">range</span>(1)</span></span>}</span>)</span></span>\n<span data-index=\"53\" class=\"stmt\">    with <span data-index=\"247\" class=\"\">c</span>:\n        <span data-index=\"141\" class=\"stmt\">pass</span></span>\n    <span data-index=\"54\" class=\"stmt\"><span data-index=\"142\" class=\"\"><span data-index=\"248\" class=\"\">dummy</span>(<span data-index=\"249\" class=\"\"><span data-index=\"350\" class=\"\">c</span> + <span data-index=\"352\" class=\"\"><span data-index=\"441\" class=\"\">SlotClass</span>()</span></span>)</span></span>\n\n    <span data-index=\"55\" class=\"stmt\">assert <span data-index=\"143\" class=\"\"><span data-index=\"250\" class=\"\"><span data-index=\"353\" class=\"\">complex_args</span>(\n        <span data-index=\"354\" class=\"\"><span data-index=\"443\" class=\"\">list</span>(<span data-index=\"444\" class=\"\"><span data-index=\"506\" class=\"\">range</span>(1000)</span>)</span>,\n        &quot;hello&quot;,\n        key2=8,\n        kwarg1={&#x27;key&#x27;: &#x27;value&#x27;}\n    )</span> == <span data-index=\"252\" class=\"\">[<span data-index=\"358\" class=\"\"><span data-index=\"447\" class=\"\">list</span>(<span data-index=\"448\" class=\"\"><span data-index=\"511\" class=\"\">range</span>(1000)</span>)</span>,\n          &#x27;hello&#x27;,\n          <span data-index=\"360\" class=\"\"><span data-index=\"449\" class=\"\">dict</span>(kwarg1={&#x27;key&#x27;: &#x27;value&#x27;})</span>]</span></span></span>\n\n    <span data-index=\"56\" class=\"stmt\">assert <span data-index=\"144\" class=\"\"><span data-index=\"253\" class=\"\"><span data-index=\"362\" class=\"\">complex_args</span>(<span data-index=\"363\" class=\"\">*[1, 2]</span>, **{&#x27;k&#x27;: 23})</span> == [1, 2, {&#x27;k&#x27;: 23}]</span></span>\n\n    <span data-index=\"57\" class=\"stmt\">assert <span data-index=\"145\" class=\"\"><span data-index=\"256\" class=\"\"><span data-index=\"369\" class=\"\">eval</span>(<span data-index=\"370\" class=\"\">&#x27;%s + %s&#x27; % (1, 2)</span>)</span> == 3</span></span>\n\n    <span data-index=\"58\" class=\"stmt\">x = 1</span>\n    <span data-index=\"59\" class=\"stmt\">x += 5</span>\n    <span data-index=\"60\" class=\"stmt\">assert <span data-index=\"151\" class=\"\"><span data-index=\"261\" class=\"\">x</span> == 6</span></span>\n    <span data-index=\"61\" class=\"stmt\">del x</span>\n\n    <span data-index=\"62\" class=\"stmt\"><span data-index=\"153\" class=\"\"><span data-index=\"265\" class=\"\">dummy</span>(True, False, None)</span></span>\n\n    <span data-index=\"63\" class=\"stmt\">assert <span data-index=\"154\" class=\"\"><span data-index=\"269\" class=\"\">[1, 2, 3][1]</span> == 2</span></span>\n    <span data-index=\"64\" class=\"stmt\">assert <span data-index=\"155\" class=\"\"><span data-index=\"272\" class=\"\">(1, 2, 3)[:2]</span> == (1, 2)</span></span>\n\n<span data-index=\"65\" class=\"stmt\">    try:\n        <span data-index=\"156\" class=\"stmt\">raise <span data-index=\"275\" class=\"\"><span data-index=\"382\" class=\"\">ValueError</span>()</span></span>\n    except <span data-index=\"276\" class=\"\">AssertionError</span> as e:\n        <span data-index=\"277\" class=\"stmt\">pass</span>\n    except <span data-index=\"278\" class=\"\">TypeError</span>:\n        <span data-index=\"279\" class=\"stmt\">pass</span>\n    except:\n        <span data-index=\"280\" class=\"stmt\">pass</span>\n    finally:\n        <span data-index=\"160\" class=\"stmt\"><span data-index=\"281\" class=\"\"><span data-index=\"385\" class=\"\">dummy</span>()</span></span></span>\n\n<span data-index=\"66\" class=\"loop stmt\">    while True:\n        <span data-index=\"162\" class=\"stmt\">break</span></span>\n\n    <span data-index=\"67\" class=\"stmt\">assert <span data-index=\"163\" class=\"\"><span data-index=\"282\" class=\"\">(<span data-index=\"386\" class=\"\">lambda x: <span data-index=\"474\" class=\"\"><span data-index=\"524\" class=\"\">x</span> * 2</span></span>)(4)</span> == 8</span></span>\n\n    <span data-index=\"68\" class=\"stmt\">global G</span>\n    <span data-index=\"69\" class=\"stmt\">G = 4</span>\n    <span data-index=\"70\" class=\"stmt\">assert <span data-index=\"166\" class=\"\"><span data-index=\"286\" class=\"\">G</span> == 4</span></span>\n\n    <span data-index=\"71\" class=\"stmt\">g = <span data-index=\"168\" class=\"\"><span data-index=\"290\" class=\"\">gen</span>()</span></span>\n    <span data-index=\"72\" class=\"stmt\"><span data-index=\"169\" class=\"\"><span data-index=\"291\" class=\"\">use_gen_1</span>(<span data-index=\"292\" class=\"\">g</span>)</span></span>\n    <span data-index=\"73\" class=\"stmt\"><span data-index=\"170\" class=\"\"><span data-index=\"293\" class=\"\">use_gen_2</span>(<span data-index=\"294\" class=\"\">g</span>)</span></span></span>", "lineno": 63}}, {"data": {"loop_iterations": {}, "num_special_types": 11, "node_values": {"299": ["2", "int", {}], "177": ["3", "int", {}], "298": ["<function factorial at 0xABC>", "function", {}, ["__wrapped__", ["<function factorial at 0xABC>", "function", {}]]], "20": ["", -2, {}], "179": ["2", "int", {"inner_calls": ["test_id_3"]}], "395": ["3", "int", {}], "78": ["False", "bool", {}], "80": ["6", "int", {}], "19": ["", -2, {}], "173": ["3", "int", {}]}, "type_names": ["NoneType", "bool", "complex", "dict", "float", "frozenset", "function", "int", "list", "set", "str", "tuple"]}, "exception": null, "arguments": [["n", "3"]], "traceback": null, "return_value": "6", "function": {"data": {"node_loops": {}, "node_ranges": [{"depth": 2, "start": 18, "classes": ["stmt"], "tree_index": 19, "end": 49}, {"depth": 2, "start": 54, "classes": ["stmt"], "tree_index": 20, "end": 81}, {"depth": 3, "start": 25, "classes": [], "tree_index": 78, "end": 31}, {"depth": 3, "start": 41, "classes": ["stmt"], "tree_index": 79, "end": 49}, {"depth": 3, "start": 61, "classes": [], "tree_index": 80, "end": 81}, {"depth": 4, "start": 25, "classes": [], "tree_index": 173, "end": 26}, {"depth": 4, "start": 61, "classes": [], "tree_index": 177, "end": 62}, {"depth": 4, "start": 65, "classes": [], "tree_index": 179, "end": 81}, {"depth": 5, "start": 65, "classes": [], "tree_index": 298, "end": 74}, {"depth": 5, "start": 75, "classes": [], "tree_index": 299, "end": 80}, {"depth": 6, "start": 75, "classes": [], "tree_index": 395, "end": 76}], "loop_ranges": []}, "name": "factorial", "html_body": "<span data-index=\"4\" class=\"stmt\">@<span data-index=\"21\" class=\"\">eye</span>\ndef factorial(n):\n<span data-index=\"19\" class=\"stmt\">    if <span data-index=\"78\" class=\"\"><span data-index=\"173\" class=\"\">n</span> &lt;= 1</span>:\n        <span data-index=\"79\" class=\"stmt\">return 1</span></span>\n    <span data-index=\"20\" class=\"stmt\">return <span data-index=\"80\" class=\"\"><span data-index=\"177\" class=\"\">n</span> * <span data-index=\"179\" class=\"\"><span data-index=\"298\" class=\"\">factorial</span>(<span data-index=\"299\" class=\"\"><span data-index=\"395\" class=\"\">n</span> - 1</span>)</span></span></span></span>", "lineno": 8}}, {"data": {"loop_iterations": {}, "num_special_types": 11, "node_values": {"299": ["1", "int", {}], "177": ["2", "int", {}], "298": ["<function factorial at 0xABC>", "function", {}, ["__wrapped__", ["<function factorial at 0xABC>", "function", {}]]], "20": ["", -2, {}], "179": ["1", "int", {"inner_calls": ["test_id_4"]}], "395": ["2", "int", {}], "78": ["False", "bool", {}], "80": ["2", "int", {}], "19": ["", -2, {}], "173": ["2", "int", {}]}, "type_names": ["NoneType", "bool", "complex", "dict", "float", "frozenset", "function", "int", "list", "set", "str", "tuple"]}, "exception": null, "arguments": [["n", "2"]], "traceback": null, "return_value": "2", "function": {"data": {"node_loops": {}, "node_ranges": [{"depth": 2, "start": 18, "classes": ["stmt"], "tree_index": 19, "end": 49}, {"depth": 2, "start": 54, "classes": ["stmt"], "tree_index": 20, "end": 81}, {"depth": 3, "start": 25, "classes": [], "tree_index": 78, "end": 31}, {"depth": 3, "start": 41, "classes": ["stmt"], "tree_index": 79, "end": 49}, {"depth": 3, "start": 61, "classes": [], "tree_index": 80, "end": 81}, {"depth": 4, "start": 25, "classes": [], "tree_index": 173, "end": 26}, {"depth": 4, "start": 61, "classes": [], "tree_index": 177, "end": 62}, {"depth": 4, "start": 65, "classes": [], "tree_index": 179, "end": 81}, {"depth": 5, "start": 65, "classes": [], "tree_index": 298, "end": 74}, {"depth": 5, "start": 75, "classes": [], "tree_index": 299, "end": 80}, {"depth": 6, "start": 75, "classes": [], "tree_index": 395, "end": 76}], "loop_ranges": []}, "name": "factorial", "html_body": "<span data-index=\"4\" class=\"stmt\">@<span data-index=\"21\" class=\"\">eye</span>\ndef factorial(n):\n<span data-index=\"19\" class=\"stmt\">    if <span data-index=\"78\" class=\"\"><span data-index=\"173\" class=\"\">n</span> &lt;= 1</span>:\n        <span data-index=\"79\" class=\"stmt\">return 1</span></span>\n    <span data-index=\"20\" class=\"stmt\">return <span data-index=\"80\" class=\"\"><span data-index=\"177\" class=\"\">n</span> * <span data-index=\"179\" class=\"\"><span data-index=\"298\" class=\"\">factorial</span>(<span data-index=\"299\" class=\"\"><span data-index=\"395\" class=\"\">n</span> - 1</span>)</span></span></span></span>", "lineno": 8}}, {"data": {"loop_iterations": {}, "num_special_types": 11, "node_values": {"78": ["True", "bool", {}], "79": ["", -2, {}], "19": ["", -2, {}], "173": ["1", "int", {}]}, "type_names": ["NoneType", "bool", "complex", "dict", "float", "frozenset", "function", "int", "list", "set", "str", "tuple"]}, "exception": null, "arguments": [["n", "1"]], "traceback": null, "return_value": "1", "function": {"data": {"node_loops": {}, "node_ranges": [{"depth": 2, "start": 18, "classes": ["stmt"], "tree_index": 19, "end": 49}, {"depth": 2, "start": 54, "classes": ["stmt"], "tree_index": 20, "end": 81}, {"depth": 3, "start": 25, "classes": [], "tree_index": 78, "end": 31}, {"depth": 3, "start": 41, "classes": ["stmt"], "tree_index": 79, "end": 49}, {"depth": 3, "start": 61, "classes": [], "tree_index": 80, "end": 81}, {"depth": 4, "start": 25, "classes": [], "tree_index": 173, "end": 26}, {"depth": 4, "start": 61, "classes": [], "tree_index": 177, "end": 62}, {"depth": 4, "start": 65, "classes": [], "tree_index": 179, "end": 81}, {"depth": 5, "start": 65, "classes": [], "tree_index": 298, "end": 74}, {"depth": 5, "start": 75, "classes": [], "tree_index": 299, "end": 80}, {"depth": 6, "start": 75, "classes": [], "tree_index": 395, "end": 76}], "loop_ranges": []}, "name": "factorial", "html_body": "<span data-index=\"4\" class=\"stmt\">@<span data-index=\"21\" class=\"\">eye</span>\ndef factorial(n):\n<span data-index=\"19\" class=\"stmt\">    if <span data-index=\"78\" class=\"\"><span data-index=\"173\" class=\"\">n</span> &lt;= 1</span>:\n        <span data-index=\"79\" class=\"stmt\">return 1</span></span>\n    <span data-index=\"20\" class=\"stmt\">return <span data-index=\"80\" class=\"\"><span data-index=\"177\" class=\"\">n</span> * <span data-index=\"179\" class=\"\"><span data-index=\"298\" class=\"\">factorial</span>(<span data-index=\"299\" class=\"\"><span data-index=\"395\" class=\"\">n</span> - 1</span>)</span></span></span></span>", "lineno": 8}}, {"data": {"loop_iterations": {}, "num_special_types": 11, "node_values": {"204": ["<test_scripts.gold.MyClass object at 0xABC>", "MyClass", {}], "114": ["", -2, {}]}, "type_names": ["MyClass", "NoneType", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "getset_descriptor", "int", "list", "range", "set", "str", "tuple", "type"]}, "exception": null, "arguments": [["self", "<test_scripts.gold.MyClass object at 0xABC>"], ["other", "<test_scripts.gold.MyClass object at 0xABC>"]], "traceback": null, "return_value": "<test_scripts.gold.MyClass object at 0xABC>", "function": {"data": {"node_loops": {}, "node_ranges": [{"depth": 3, "start": 34, "classes": ["stmt"], "tree_index": 114, "end": 46}, {"depth": 4, "start": 41, "classes": [], "tree_index": 204, "end": 46}], "loop_ranges": []}, "name": "MyClass.__add__", "html_body": "<span data-index=\"40\" class=\"stmt\">    @<span data-index=\"115\" class=\"\">eye</span>\n    def __add__(self, other):\n        <span data-index=\"114\" class=\"stmt\">return <span data-index=\"204\" class=\"\">other</span></span></span>", "lineno": 50}}, {"data": {"loop_iterations": {}, "num_special_types": 11, "node_values": {"117": ["", -2, {}]}, "type_names": ["MyClass", "NoneType", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "list", "range", "set", "str", "tuple", "type"]}, "exception": null, "arguments": [["self", "<test_scripts.gold.MyClass object at 0xABC>"]], "traceback": null, "return_value": "None", "function": {"data": {"node_loops": {}, "node_ranges": [{"depth": 3, "start": 29, "classes": ["stmt"], "tree_index": 117, "end": 33}], "loop_ranges": []}, "name": "MyClass.__enter__", "html_body": "<span data-index=\"41\" class=\"stmt\">    @<span data-index=\"118\" class=\"\">eye</span>\n    def __enter__(self):\n        <span data-index=\"117\" class=\"stmt\">pass</span></span>", "lineno": 54}}, {"data": {"loop_iterations": {}, "num_special_types": 11, "node_values": {"120": ["", -2, {}]}, "type_names": ["MyClass", "NoneType", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "list", "range", "set", "str", "tuple", "type"]}, "exception": null, "arguments": [["self", "<test_scripts.gold.MyClass object at 0xABC>"], ["exc_type", "None"], ["exc_val", "None"], ["exc_tb", "None"]], "traceback": null, "return_value": "None", "function": {"data": {"node_loops": {}, "node_ranges": [{"depth": 3, "start": 55, "classes": ["stmt"], "tree_index": 120, "end": 59}], "loop_ranges": []}, "name": "MyClass.__exit__", "html_body": "<span data-index=\"42\" class=\"stmt\">    @<span data-index=\"121\" class=\"\">eye</span>\n    def __exit__(self, exc_type, exc_val, exc_tb):\n        <span data-index=\"120\" class=\"stmt\">pass</span></span>", "lineno": 58}}, {"data": {"loop_iterations": {}, "num_special_types": 11, "node_values": {"204": ["<test_scripts.gold.SlotClass object at 0xABC>", "SlotClass", {}, ["slot1", ["3", "int", {}]]], "114": ["", -2, {}]}, "type_names": ["MyClass", "NoneType", "SlotClass", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "list", "member_descriptor", "range", "set", "str", "tuple", "type"]}, "exception": null, "arguments": [["self", "<test_scripts.gold.MyClass object at 0xABC>"], ["other", "<test_scripts.gold.SlotClass object at 0xABC>"]], "traceback": null, "return_value": "<test_scripts.gold.SlotClass object at 0xABC>", "function": {"data": {"node_loops": {}, "node_ranges": [{"depth": 3, "start": 34, "classes": ["stmt"], "tree_index": 114, "end": 46}, {"depth": 4, "start": 41, "classes": [], "tree_index": 204, "end": 46}], "loop_ranges": []}, "name": "MyClass.__add__", "html_body": "<span data-index=\"40\" class=\"stmt\">    @<span data-index=\"115\" class=\"\">eye</span>\n    def __add__(self, other):\n        <span data-index=\"114\" class=\"stmt\">return <span data-index=\"204\" class=\"\">other</span></span></span>", "lineno": 50}}, {"data": {"loop_iterations": {}, "num_special_types": 11, "node_values": {"188": ["{'kwarg1': {'key': 'value'}}", "dict", {"len": 1}, ["'kwarg1'", ["{'key': 'value'}", "dict", {"len": 1}, ["'key'", ["'value'", "str", {"len": 5}]]]]], "187": ["'hello'", "str", {"len": 5}], "96": ["[[0, 1, 2, ..., 997, 998, 999], 'hello', {'kwarg1': {'key': 'value'}}]", "list", {"len": 3}, ["0", ["[0, 1, 2, ..., 997, 998, 999]", "list", {"len": 1000}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["997", ["997", "int", {}]], ["998", ["998", "int", {}]], ["999", ["999", "int", {}]]]], ["1", ["'hello'", "str", {"len": 5}]], ["2", ["{'kwarg1': {'key': 'value'}}", "dict", {"len": 1}, ["'kwarg1'", ["{'key': 'value'}", "dict", {"len": 1}, ["'key'", ["'value'", "str", {"len": 5}]]]]]]], "186": ["[0, 1, 2, ..., 997, 998, 999]", "list", {"len": 1000}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["3", ["3", "int", {}]], ["4", ["4", "int", {}]], ["995", ["995", "int", {}]], ["996", ["996", "int", {}]], ["997", ["997", "int", {}]], ["998", ["998", "int", {}]], ["999", ["999", "int", {}]]], "28": ["", -2, {}]}, "type_names": ["MyClass", "NoneType", "SlotClass", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "list", "member_descriptor", "range", "set", "str", "tuple", "type"]}, "exception": null, "arguments": [["pos1", "[0, 1, 2, ..., 997, 998, 999]"], ["pos2", "'hello'"], ["key1", "3"], ["key2", "8"], ["args", "()"], ["kwargs", "{'kwarg1': {'key': 'value'}}"]], "traceback": null, "return_value": "[[0, 1, 2, ..., 997, 998, 999], 'hello', {'kwarg1': {'key': 'value'}}]", "function": {"data": {"node_loops": {}, "node_ranges": [{"depth": 2, "start": 67, "classes": ["stmt"], "tree_index": 28, "end": 94}, {"depth": 3, "start": 74, "classes": [], "tree_index": 96, "end": 94}, {"depth": 4, "start": 75, "classes": [], "tree_index": 186, "end": 79}, {"depth": 4, "start": 81, "classes": [], "tree_index": 187, "end": 85}, {"depth": 4, "start": 87, "classes": [], "tree_index": 188, "end": 93}], "loop_ranges": []}, "name": "complex_args", "html_body": "<span data-index=\"7\" class=\"stmt\">@<span data-index=\"29\" class=\"\">eye</span>\ndef complex_args(pos1, pos2, key1=3, key2=4, *args, **kwargs):\n    <span data-index=\"28\" class=\"stmt\">return <span data-index=\"96\" class=\"\">[<span data-index=\"186\" class=\"\">pos1</span>, <span data-index=\"187\" class=\"\">pos2</span>, <span data-index=\"188\" class=\"\">kwargs</span>]</span></span></span>", "lineno": 26}}, {"data": {"loop_iterations": {}, "num_special_types": 11, "node_values": {"188": ["{'k': 23}", "dict", {"len": 1}, ["'k'", ["23", "int", {}]]], "187": ["2", "int", {}], "96": ["[1, 2, {'k': 23}]", "list", {"len": 3}, ["0", ["1", "int", {}]], ["1", ["2", "int", {}]], ["2", ["{'k': 23}", "dict", {"len": 1}, ["'k'", ["23", "int", {}]]]]], "186": ["1", "int", {}], "28": ["", -2, {}]}, "type_names": ["MyClass", "NoneType", "SlotClass", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "list", "member_descriptor", "range", "set", "str", "tuple", "type"]}, "exception": null, "arguments": [["pos1", "1"], ["pos2", "2"], ["key1", "3"], ["key2", "4"], ["args", "()"], ["kwargs", "{'k': 23}"]], "traceback": null, "return_value": "[1, 2, {'k': 23}]", "function": {"data": {"node_loops": {}, "node_ranges": [{"depth": 2, "start": 67, "classes": ["stmt"], "tree_index": 28, "end": 94}, {"depth": 3, "start": 74, "classes": [], "tree_index": 96, "end": 94}, {"depth": 4, "start": 75, "classes": [], "tree_index": 186, "end": 79}, {"depth": 4, "start": 81, "classes": [], "tree_index": 187, "end": 85}, {"depth": 4, "start": 87, "classes": [], "tree_index": 188, "end": 93}], "loop_ranges": []}, "name": "complex_args", "html_body": "<span data-index=\"7\" class=\"stmt\">@<span data-index=\"29\" class=\"\">eye</span>\ndef complex_args(pos1, pos2, key1=3, key2=4, *args, **kwargs):\n    <span data-index=\"28\" class=\"stmt\">return <span data-index=\"96\" class=\"\">[<span data-index=\"186\" class=\"\">pos1</span>, <span data-index=\"187\" class=\"\">pos2</span>, <span data-index=\"188\" class=\"\">kwargs</span>]</span></span></span>", "lineno": 26}}, {"data": {"loop_iterations": {"34": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}, {"index": 2, "loops": {}}]}, "num_special_types": 11, "node_values": {"105": {"1": ["", -2, {}], "2": ["", -2, {}], "0": ["", -2, {}]}, "198": {"1": ["None", "NoneType", {}], "2": ["None", "NoneType", {}], "0": ["None", "NoneType", {}]}, "34": ["", -2, {"inner_calls": ["test_id_12"]}], "310": {"1": ["1", "int", {}], "2": ["2", "int", {}], "0": ["0", "int", {}]}, "104": ["<itertools.islice object at 0xABC>", "islice", {}], "195": ["<class 'itertools.islice'>", "type", {}, ["__doc__", ["'islice(iterab...s an iterator.'", "str", {"len": 454}]], ["__getattribute__", ["<slot wrapper '__getattribut...f 'itertools.islice' objects>", "wrapper_descriptor", {}]], ["__iter__", ["<slot wrapper '__iter__' of 'itertools.islice' objects>", "wrapper_descriptor", {}]], ["__new__", ["<built-in method __new__ of type object at 0xABC>", "builtin_function_or_method", {}]], ["__next__", ["<slot wrapper '__next__' of 'itertools.islice' objects>", "wrapper_descriptor", {}]], ["__reduce__", ["<method '__reduce__' of 'itertools.islice' objects>", "method_descriptor", {}]], ["__setstate__", ["<method '__setstate__' of 'itertools.islice' objects>", "method_descriptor", {}]]], "196": ["<generator object gen at 0xABC>", "generator", {}], "309": {"1": ["<function dummy at 0xABC>", "function", {}], "2": ["<function dummy at 0xABC>", "function", {}], "0": ["<function dummy at 0xABC>", "function", {}]}}, "type_names": ["MyClass", "NoneType", "SlotClass", "ValueError", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "member_descriptor", "method_descriptor", "range", "set", "str", "tuple", "type", "wrapper_descriptor"]}, "exception": null, "arguments": [["g", "<generator object gen at 0xABC>"]], "traceback": null, "return_value": "None", "function": {"data": {"node_loops": {"105": [34], "198": [34], "310": [34], "309": [34]}, "node_ranges": [{"depth": 2, "start": 18, "classes": ["loop", "stmt"], "tree_index": 34, "end": 61}, {"depth": 3, "start": 31, "classes": [], "tree_index": 104, "end": 43}, {"depth": 3, "start": 53, "classes": ["stmt"], "tree_index": 105, "end": 61}, {"depth": 4, "start": 31, "classes": [], "tree_index": 195, "end": 37}, {"depth": 4, "start": 38, "classes": [], "tree_index": 196, "end": 39}, {"depth": 4, "start": 53, "classes": [], "tree_index": 198, "end": 61}, {"depth": 5, "start": 53, "classes": [], "tree_index": 309, "end": 58}, {"depth": 5, "start": 59, "classes": [], "tree_index": 310, "end": 60}], "loop_ranges": [{"start": 26, "tree_index": 34, "end": 27}]}, "name": "use_gen_1", "html_body": "<span data-index=\"9\" class=\"stmt\">@<span data-index=\"35\" class=\"\">eye</span>\ndef use_gen_1(g):\n<span data-index=\"34\" class=\"loop stmt\">    for x in <span data-index=\"104\" class=\"\"><span data-index=\"195\" class=\"\">islice</span>(<span data-index=\"196\" class=\"\">g</span>, 3)</span>:\n        <span data-index=\"105\" class=\"stmt\"><span data-index=\"198\" class=\"\"><span data-index=\"309\" class=\"\">dummy</span>(<span data-index=\"310\" class=\"\">x</span>)</span></span></span></span>", "lineno": 37}}, {"data": {"loop_iterations": {"31": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}, {"index": 2, "loops": {}}, {"index": 3, "loops": {}}, {"index": 4, "loops": {}}, {"index": 5, "loops": {}}]}, "num_special_types": 11, "node_values": {"99": ["range(0, 6)", "range", {"len": 6}], "193": {"1": ["None", "NoneType", {}], "5": ["None", "NoneType", {}], "4": ["None", "NoneType", {}], "3": ["None", "NoneType", {}], "2": ["None", "NoneType", {}], "0": ["None", "NoneType", {}]}, "100": {"1": ["", -2, {}], "5": ["", -2, {}], "4": ["", -2, {}], "3": ["", -2, {}], "2": ["", -2, {}], "0": ["", -2, {}]}, "306": {"1": ["1", "int", {}], "5": ["5", "int", {}], "4": ["4", "int", {}], "3": ["3", "int", {}], "2": ["2", "int", {}], "0": ["0", "int", {}]}, "31": ["", -2, {}]}, "type_names": ["MyClass", "NoneType", "SlotClass", "ValueError", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "member_descriptor", "method_descriptor", "range", "set", "str", "tuple", "type", "wrapper_descriptor"]}, "exception": null, "arguments": [], "traceback": null, "return_value": "None", "function": {"data": {"node_loops": {"193": [31], "100": [31], "306": [31]}, "node_ranges": [{"depth": 2, "start": 11, "classes": ["loop", "stmt"], "tree_index": 31, "end": 49}, {"depth": 3, "start": 24, "classes": [], "tree_index": 99, "end": 32}, {"depth": 3, "start": 42, "classes": ["stmt"], "tree_index": 100, "end": 49}, {"depth": 4, "start": 24, "classes": [], "tree_index": 191, "end": 29}, {"depth": 4, "start": 42, "classes": [], "tree_index": 193, "end": 49}, {"depth": 5, "start": 48, "classes": [], "tree_index": 306, "end": 49}], "loop_ranges": [{"start": 19, "tree_index": 31, "end": 20}]}, "name": "gen", "html_body": "<span data-index=\"8\" class=\"stmt\">@<span data-index=\"32\" class=\"\">eye</span>\ndef gen():\n<span data-index=\"31\" class=\"loop stmt\">    for i in <span data-index=\"99\" class=\"\"><span data-index=\"191\" class=\"\">range</span>(6)</span>:\n        <span data-index=\"100\" class=\"stmt\"><span data-index=\"193\" class=\"\">yield <span data-index=\"306\" class=\"\">i</span></span></span></span></span>", "lineno": 31}}, {"data": {"loop_iterations": {"37": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}, {"index": 2, "loops": {}}]}, "num_special_types": 11, "node_values": {"201": {"1": ["None", "NoneType", {}], "2": ["None", "NoneType", {}], "0": ["None", "NoneType", {}]}, "311": {"1": ["<function dummy at 0xABC>", "function", {}], "2": ["<function dummy at 0xABC>", "function", {}], "0": ["<function dummy at 0xABC>", "function", {}]}, "109": ["<generator object gen at 0xABC>", "generator", {}], "37": ["", -2, {}], "312": {"1": ["4", "int", {}], "2": ["5", "int", {}], "0": ["3", "int", {}]}, "110": {"1": ["", -2, {}], "2": ["", -2, {}], "0": ["", -2, {}]}}, "type_names": ["MyClass", "NoneType", "SlotClass", "ValueError", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "member_descriptor", "method_descriptor", "range", "set", "str", "tuple", "type", "wrapper_descriptor"]}, "exception": null, "arguments": [["g", "<generator object gen at 0xABC>"]], "traceback": null, "return_value": "None", "function": {"data": {"node_loops": {"201": [37], "311": [37], "110": [37], "312": [37]}, "node_ranges": [{"depth": 2, "start": 18, "classes": ["loop", "stmt"], "tree_index": 37, "end": 50}, {"depth": 3, "start": 31, "classes": [], "tree_index": 109, "end": 32}, {"depth": 3, "start": 42, "classes": ["stmt"], "tree_index": 110, "end": 50}, {"depth": 4, "start": 42, "classes": [], "tree_index": 201, "end": 50}, {"depth": 5, "start": 42, "classes": [], "tree_index": 311, "end": 47}, {"depth": 5, "start": 48, "classes": [], "tree_index": 312, "end": 49}], "loop_ranges": [{"start": 26, "tree_index": 37, "end": 27}]}, "name": "use_gen_2", "html_body": "<span data-index=\"10\" class=\"stmt\">@<span data-index=\"38\" class=\"\">eye</span>\ndef use_gen_2(g):\n<span data-index=\"37\" class=\"loop stmt\">    for y in <span data-index=\"109\" class=\"\">g</span>:\n        <span data-index=\"110\" class=\"stmt\"><span data-index=\"201\" class=\"\"><span data-index=\"311\" class=\"\">dummy</span>(<span data-index=\"312\" class=\"\">y</span>)</span></span></span></span>", "lineno": 43}}]