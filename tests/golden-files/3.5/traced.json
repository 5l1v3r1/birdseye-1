[{"data": {"loop_iterations": {}, "num_special_types": 11, "node_values": {"1": ["", -2, {}], "13": ["None", "NoneType", {"inner_calls": ["test_id_15"]}], "27": ["<function m at 0xABC>", "function", {}], "4": ["", -2, {}], "2": ["", -2, {}], "3": ["", -2, {}]}, "type_names": ["MyClass", "NoneType", "SlotClass", "ValueError", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "m.<locals>.A", "member_descriptor", "method", "method_descriptor", "range", "set", "str", "tuple", "type", "wrapper_descriptor"]}, "exception": null, "arguments": [], "traceback": null, "return_value": "None", "function": {"data": {"node_loops": {"53": [19], "158": [100], "34": [19], "105": [82], "72": [19], "136": [100, 118], "150": [82], "73": [19], "121": [104], "117": [100, 118], "97": [19], "140": [100], "95": [19], "99": [100], "81": [82], "123": [104], "103": [104], "118": [100], "127": [82], "157": [100], "152": [82]}}, "name": "$$__FILE__$$", "html_body": "<span data-index=\"1\" class=\"stmt\">import birdseye.trace_module_deep</span>\n\n\n<span data-index=\"2\" class=\"stmt\">def deco(f):\n    <span data-index=\"7\" class=\"stmt\">return <span data-index=\"15\" class=\"\">f</span></span></span>\n\n\n<span data-index=\"3\" class=\"stmt\">def m():\n    <span data-index=\"9\" class=\"stmt\">qwe = 9</span>\n    <span data-index=\"10\" class=\"stmt\"><span data-index=\"18\" class=\"\"><span data-index=\"30\" class=\"\">str</span>(<span data-index=\"31\" class=\"\">qwe</span>)</span></span>\n\n<span data-index=\"11\" class=\"stmt\">    class A:\n<span data-index=\"19\" class=\"loop stmt\">        for i in <span data-index=\"33\" class=\"\"><span data-index=\"51\" class=\"\">range</span>(3)</span>:\n            <span data-index=\"34\" class=\"stmt\"><span data-index=\"53\" class=\"\"><span data-index=\"72\" class=\"\">str</span>(<span data-index=\"73\" class=\"\"><span data-index=\"95\" class=\"\">i</span> * <span data-index=\"97\" class=\"\">i</span></span>)</span></span></span>\n\n<span data-index=\"20\" class=\"stmt\">        class B:\n            <span data-index=\"35\" class=\"stmt\"><span data-index=\"54\" class=\"\"><span data-index=\"74\" class=\"\">str</span>(<span data-index=\"75\" class=\"\">[<span data-index=\"99\" class=\"\">[<span data-index=\"117\" class=\"\"><span data-index=\"136\" class=\"\">i</span> * 2</span> <span data-index=\"118\" class=\"loop\">for i in <span data-index=\"140\" class=\"\"><span data-index=\"157\" class=\"\">range</span>(<span data-index=\"158\" class=\"\">j</span>)</span></span>]</span>\n                 <span data-index=\"100\" class=\"loop\">for j in <span data-index=\"120\" class=\"\"><span data-index=\"142\" class=\"\">range</span>(3)</span></span>]</span>)</span></span></span>\n\n        <span data-index=\"21\" class=\"stmt\"><span data-index=\"36\" class=\"\">(<span data-index=\"55\" class=\"\">lambda *_: 9</span>)(None)</span></span>\n        <span data-index=\"22\" class=\"stmt\"><span data-index=\"37\" class=\"\">(<span data-index=\"57\" class=\"\">lambda x: <span data-index=\"79\" class=\"\">[<span data-index=\"103\" class=\"\"><span data-index=\"121\" class=\"\">i</span> * <span data-index=\"123\" class=\"\">x</span></span> <span data-index=\"104\" class=\"loop\">for i in <span data-index=\"125\" class=\"\"><span data-index=\"147\" class=\"\">range</span>(3)</span></span>]</span></span>)(8)</span></span>\n        <span data-index=\"23\" class=\"stmt\"><span data-index=\"38\" class=\"\"><span data-index=\"59\" class=\"\">str</span>(<span data-index=\"60\" class=\"\">{<span data-index=\"81\" class=\"\">(<span data-index=\"105\" class=\"\">lambda x: <span data-index=\"127\" class=\"\"><span data-index=\"150\" class=\"\">i</span> + <span data-index=\"152\" class=\"\">x</span></span></span>)(7)</span> <span data-index=\"82\" class=\"loop\">for i in <span data-index=\"108\" class=\"\"><span data-index=\"129\" class=\"\">range</span>(3)</span></span>}</span>)</span></span>\n\n<span data-index=\"24\" class=\"stmt\">        @<span data-index=\"43\" class=\"\">deco</span>\n        def foo(self):\n            <span data-index=\"40\" class=\"stmt\">x = <span data-index=\"63\" class=\"\">9 * 0</span></span>\n            <span data-index=\"41\" class=\"stmt\"><span data-index=\"64\" class=\"\"><span data-index=\"87\" class=\"\">str</span>(<span data-index=\"88\" class=\"\"><span data-index=\"110\" class=\"\">1 + 2</span> + <span data-index=\"112\" class=\"\">x</span></span>)</span></span>\n            <span data-index=\"42\" class=\"stmt\">return <span data-index=\"65\" class=\"\">self</span></span></span>\n\n<span data-index=\"25\" class=\"stmt\">        def bar(self):\n            <span data-index=\"45\" class=\"stmt\">return <span data-index=\"68\" class=\"\">1 + 3</span></span></span></span>\n\n    <span data-index=\"12\" class=\"stmt\"><span data-index=\"26\" class=\"\"><span data-index=\"46\" class=\"\"><span data-index=\"69\" class=\"\"><span data-index=\"93\" class=\"\"><span data-index=\"113\" class=\"\"><span data-index=\"135\" class=\"\">A</span>()</span>.foo</span>()</span>.bar</span>()</span></span></span>\n\n\n<span data-index=\"4\" class=\"stmt\"><span data-index=\"13\" class=\"\"><span data-index=\"27\" class=\"\">m</span>()</span></span>", "lineno": 1}}, {"data": {"loop_iterations": {"82": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}, {"index": 2, "loops": {}}], "100": [{"index": 0, "loops": {}}, {"index": 1, "loops": {"118": [{"index": 0, "loops": {}}]}}, {"index": 2, "loops": {"118": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}]}}], "19": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}, {"index": 2, "loops": {}}]}, "num_special_types": 11, "node_values": {"82": ["", -2, {}], "46": ["<bound method m.<locals>.A.bar of <test_scripts.traced.m.<locals>.A object at 0xABC>>", "method", {}], "120": ["range(0, 3)", "range", {"len": 3}], "158": {"1": ["1", "int", {}], "2": ["2", "int", {}], "0": ["0", "int", {}]}, "20": ["", -2, {}], "37": ["[0, 8, 16]", "list", {"len": 3}, ["0", ["0", "int", {}]], ["1", ["8", "int", {}]], ["2", ["16", "int", {}]]], "135": ["<class 'test_scripts.traced.m.<locals>.A'>", "type", {}, ["B", ["<class 'test_scripts.traced.m.<locals>.A.B'>", "type", {}, ["__dict__", ["<attribute '__dict__' of 'B' objects>", "getset_descriptor", {}]], ["__doc__", ["None", "NoneType", {}]], ["__module__", ["'test_scripts.traced'", "str", {"len": 19}]], ["__weakref__", ["<attribute '__weakref__' of 'B' objects>", "getset_descriptor", {}]]]], ["__dict__", ["<attribute '__dict__' of 'A' objects>", "getset_descriptor", {}]], ["__doc__", ["None", "NoneType", {}]], ["__module__", ["'test_scripts.traced'", "str", {"len": 19}]], ["__weakref__", ["<attribute '__weakref__' of 'A' objects>", "getset_descriptor", {}]], ["bar", ["<function m.<locals>.A.bar at 0xABC>", "function", {}]], ["foo", ["<function m.<locals>.A.foo at 0xABC>", "function", {}]], ["i", ["2", "int", {}]]], "93": ["<bound method m.<locals>.A.foo of <test_scripts.traced.m.<locals>.A object at 0xABC>>", "method", {}], "100": ["", -2, {}], "97": {"1": ["1", "int", {}], "2": ["2", "int", {}], "0": ["0", "int", {}]}, "113": ["<test_scripts.traced.m.<locals>.A object at 0xABC>", "m.<locals>.A", {}], "118": {"1": ["", -2, {}], "2": ["", -2, {}], "0": ["", -2, {}]}, "38": ["'{8, 9, 7}'", "str", {"len": 9}], "36": ["9", "int", {}], "24": ["", -2, {"inner_calls": ["test_id_16"]}], "11": ["", -2, {}], "53": {"1": ["'1'", "str", {"len": 1}], "2": ["'4'", "str", {"len": 1}], "0": ["'0'", "str", {"len": 1}]}, "69": ["<test_scripts.traced.m.<locals>.A object at 0xABC>", "m.<locals>.A", {"inner_calls": ["test_id_17"]}], "73": {"1": ["1", "int", {}], "2": ["4", "int", {}], "0": ["0", "int", {}]}, "33": ["range(0, 3)", "range", {"len": 3}], "60": ["{8, 9, 7}", "set", {"len": 3}, ["<0>", ["8", "int", {}]], ["<1>", ["9", "int", {}]], ["<2>", ["7", "int", {}]]], "108": ["range(0, 3)", "range", {"len": 3}], "81": {"1": ["8", "int", {}], "2": ["9", "int", {}], "0": ["7", "int", {}]}, "105": {"1": ["<function m.<locals>.A.<setcomp>.<lambda> at 0xABC>", "function", {}], "2": ["<function m.<locals>.A.<setcomp>.<lambda> at 0xABC>", "function", {}], "0": ["<function m.<locals>.A.<setcomp>.<lambda> at 0xABC>", "function", {}]}, "31": ["9", "int", {}], "9": ["", -2, {}], "22": ["", -2, {}], "117": {"1": {"0": ["0", "int", {}]}, "2": {"1": ["2", "int", {}], "0": ["0", "int", {}]}}, "35": ["", -2, {}], "25": ["", -2, {}], "99": {"1": ["[0]", "list", {"len": 1}, ["0", ["0", "int", {}]]], "2": ["[0, 2]", "list", {"len": 2}, ["0", ["0", "int", {}]], ["1", ["2", "int", {}]]], "0": ["[]", "list", {"len": 0}]}, "57": ["<function m.<locals>.A.<lambda> at 0xABC>", "function", {}], "43": ["<function deco at 0xABC>", "function", {}], "26": ["4", "int", {"inner_calls": ["test_id_18"]}], "12": ["", -2, {}], "34": {"1": ["", -2, {}], "2": ["", -2, {}], "0": ["", -2, {}]}, "54": ["'[[], [0], [0, 2]]'", "str", {"len": 17}], "75": ["[[], [0], [0, 2]]", "list", {"len": 3}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[0]", "list", {"len": 1}, ["0", ["0", "int", {}]]]], ["2", ["[0, 2]", "list", {"len": 2}, ["0", ["0", "int", {}]], ["1", ["2", "int", {}]]]]], "19": ["", -2, {}], "23": ["", -2, {}], "136": {"1": {"0": ["0", "int", {}]}, "2": {"1": ["1", "int", {}], "0": ["0", "int", {}]}}, "55": ["<function m.<locals>.A.<lambda> at 0xABC>", "function", {}], "95": {"1": ["1", "int", {}], "2": ["2", "int", {}], "0": ["0", "int", {}]}, "140": {"1": ["range(0, 1)", "range", {"len": 1}], "2": ["range(0, 2)", "range", {"len": 2}], "0": ["range(0, 0)", "range", {"len": 0}]}, "21": ["", -2, {}], "10": ["", -2, {}], "18": ["'9'", "str", {"len": 1}]}, "type_names": ["MyClass", "NoneType", "SlotClass", "ValueError", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "m.<locals>.A", "member_descriptor", "method", "method_descriptor", "range", "set", "str", "tuple", "type", "wrapper_descriptor"]}, "exception": null, "arguments": [], "traceback": null, "return_value": "None", "function": {"data": {"node_loops": {"53": [19], "158": [100], "34": [19], "105": [82], "72": [19], "136": [100, 118], "150": [82], "73": [19], "121": [104], "117": [100, 118], "97": [19], "140": [100], "95": [19], "99": [100], "81": [82], "123": [104], "103": [104], "118": [100], "127": [82], "157": [100], "152": [82]}, "node_ranges": [{"depth": 1, "start": 0, "classes": ["stmt"], "tree_index": 3, "end": 509}, {"depth": 2, "start": 13, "classes": ["stmt"], "tree_index": 9, "end": 20}, {"depth": 2, "start": 25, "classes": ["stmt"], "tree_index": 10, "end": 33}, {"depth": 2, "start": 35, "classes": ["stmt"], "tree_index": 11, "end": 488}, {"depth": 2, "start": 494, "classes": ["stmt"], "tree_index": 12, "end": 509}, {"depth": 3, "start": 25, "classes": [], "tree_index": 18, "end": 33}, {"depth": 3, "start": 48, "classes": ["loop", "stmt"], "tree_index": 19, "end": 97}, {"depth": 3, "start": 99, "classes": ["stmt"], "tree_index": 20, "end": 195}, {"depth": 3, "start": 205, "classes": ["stmt"], "tree_index": 21, "end": 225}, {"depth": 3, "start": 234, "classes": ["stmt"], "tree_index": 22, "end": 274}, {"depth": 3, "start": 283, "classes": ["stmt"], "tree_index": 23, "end": 328}, {"depth": 3, "start": 330, "classes": ["stmt"], "tree_index": 24, "end": 439}, {"depth": 3, "start": 441, "classes": ["stmt"], "tree_index": 25, "end": 488}, {"depth": 3, "start": 494, "classes": [], "tree_index": 26, "end": 509}, {"depth": 4, "start": 25, "classes": [], "tree_index": 30, "end": 28}, {"depth": 4, "start": 29, "classes": [], "tree_index": 31, "end": 32}, {"depth": 4, "start": 65, "classes": [], "tree_index": 33, "end": 73}, {"depth": 4, "start": 87, "classes": ["stmt"], "tree_index": 34, "end": 97}, {"depth": 4, "start": 128, "classes": ["stmt"], "tree_index": 35, "end": 195}, {"depth": 4, "start": 205, "classes": [], "tree_index": 36, "end": 225}, {"depth": 4, "start": 234, "classes": [], "tree_index": 37, "end": 274}, {"depth": 4, "start": 283, "classes": [], "tree_index": 38, "end": 328}, {"depth": 4, "start": 379, "classes": ["stmt"], "tree_index": 40, "end": 388}, {"depth": 4, "start": 401, "classes": ["stmt"], "tree_index": 41, "end": 415}, {"depth": 4, "start": 428, "classes": ["stmt"], "tree_index": 42, "end": 439}, {"depth": 4, "start": 339, "classes": [], "tree_index": 43, "end": 343}, {"depth": 4, "start": 476, "classes": ["stmt"], "tree_index": 45, "end": 488}, {"depth": 4, "start": 494, "classes": [], "tree_index": 46, "end": 507}, {"depth": 5, "start": 65, "classes": [], "tree_index": 51, "end": 70}, {"depth": 5, "start": 87, "classes": [], "tree_index": 53, "end": 97}, {"depth": 5, "start": 128, "classes": [], "tree_index": 54, "end": 195}, {"depth": 5, "start": 206, "classes": [], "tree_index": 55, "end": 218}, {"depth": 5, "start": 235, "classes": [], "tree_index": 57, "end": 270}, {"depth": 5, "start": 283, "classes": [], "tree_index": 59, "end": 286}, {"depth": 5, "start": 287, "classes": [], "tree_index": 60, "end": 327}, {"depth": 5, "start": 383, "classes": [], "tree_index": 63, "end": 388}, {"depth": 5, "start": 401, "classes": [], "tree_index": 64, "end": 415}, {"depth": 5, "start": 435, "classes": [], "tree_index": 65, "end": 439}, {"depth": 5, "start": 483, "classes": [], "tree_index": 68, "end": 488}, {"depth": 5, "start": 494, "classes": [], "tree_index": 69, "end": 503}, {"depth": 6, "start": 87, "classes": [], "tree_index": 72, "end": 90}, {"depth": 6, "start": 91, "classes": [], "tree_index": 73, "end": 96}, {"depth": 6, "start": 128, "classes": [], "tree_index": 74, "end": 131}, {"depth": 6, "start": 132, "classes": [], "tree_index": 75, "end": 194}, {"depth": 6, "start": 245, "classes": [], "tree_index": 79, "end": 270}, {"depth": 6, "start": 288, "classes": [], "tree_index": 81, "end": 308}, {"depth": 6, "start": 309, "classes": ["loop"], "tree_index": 82, "end": 326}, {"depth": 6, "start": 401, "classes": [], "tree_index": 87, "end": 404}, {"depth": 6, "start": 405, "classes": [], "tree_index": 88, "end": 414}, {"depth": 6, "start": 494, "classes": [], "tree_index": 93, "end": 501}, {"depth": 7, "start": 91, "classes": [], "tree_index": 95, "end": 92}, {"depth": 7, "start": 95, "classes": [], "tree_index": 97, "end": 96}, {"depth": 7, "start": 133, "classes": [], "tree_index": 99, "end": 158}, {"depth": 7, "start": 176, "classes": ["loop"], "tree_index": 100, "end": 193}, {"depth": 7, "start": 246, "classes": [], "tree_index": 103, "end": 251}, {"depth": 7, "start": 252, "classes": ["loop"], "tree_index": 104, "end": 269}, {"depth": 7, "start": 289, "classes": [], "tree_index": 105, "end": 304}, {"depth": 7, "start": 318, "classes": [], "tree_index": 108, "end": 326}, {"depth": 7, "start": 405, "classes": [], "tree_index": 110, "end": 410}, {"depth": 7, "start": 413, "classes": [], "tree_index": 112, "end": 414}, {"depth": 7, "start": 494, "classes": [], "tree_index": 113, "end": 497}, {"depth": 8, "start": 134, "classes": [], "tree_index": 117, "end": 139}, {"depth": 8, "start": 140, "classes": ["loop"], "tree_index": 118, "end": 157}, {"depth": 8, "start": 185, "classes": [], "tree_index": 120, "end": 193}, {"depth": 8, "start": 246, "classes": [], "tree_index": 121, "end": 247}, {"depth": 8, "start": 250, "classes": [], "tree_index": 123, "end": 251}, {"depth": 8, "start": 261, "classes": [], "tree_index": 125, "end": 269}, {"depth": 8, "start": 299, "classes": [], "tree_index": 127, "end": 304}, {"depth": 8, "start": 318, "classes": [], "tree_index": 129, "end": 323}, {"depth": 8, "start": 494, "classes": [], "tree_index": 135, "end": 495}, {"depth": 9, "start": 134, "classes": [], "tree_index": 136, "end": 135}, {"depth": 9, "start": 149, "classes": [], "tree_index": 140, "end": 157}, {"depth": 9, "start": 185, "classes": [], "tree_index": 142, "end": 190}, {"depth": 9, "start": 261, "classes": [], "tree_index": 147, "end": 266}, {"depth": 9, "start": 299, "classes": [], "tree_index": 150, "end": 300}, {"depth": 9, "start": 303, "classes": [], "tree_index": 152, "end": 304}, {"depth": 10, "start": 149, "classes": [], "tree_index": 157, "end": 154}, {"depth": 10, "start": 155, "classes": [], "tree_index": 158, "end": 156}], "loop_ranges": [{"start": 60, "tree_index": 19, "end": 61}, {"start": 313, "tree_index": 82, "end": 314}, {"start": 180, "tree_index": 100, "end": 181}, {"start": 256, "tree_index": 104, "end": 257}, {"start": 144, "tree_index": 118, "end": 145}]}, "name": "m", "html_body": "<span data-index=\"3\" class=\"stmt\">def m():\n    <span data-index=\"9\" class=\"stmt\">qwe = 9</span>\n    <span data-index=\"10\" class=\"stmt\"><span data-index=\"18\" class=\"\"><span data-index=\"30\" class=\"\">str</span>(<span data-index=\"31\" class=\"\">qwe</span>)</span></span>\n\n<span data-index=\"11\" class=\"stmt\">    class A:\n<span data-index=\"19\" class=\"loop stmt\">        for i in <span data-index=\"33\" class=\"\"><span data-index=\"51\" class=\"\">range</span>(3)</span>:\n            <span data-index=\"34\" class=\"stmt\"><span data-index=\"53\" class=\"\"><span data-index=\"72\" class=\"\">str</span>(<span data-index=\"73\" class=\"\"><span data-index=\"95\" class=\"\">i</span> * <span data-index=\"97\" class=\"\">i</span></span>)</span></span></span>\n\n<span data-index=\"20\" class=\"stmt\">        class B:\n            <span data-index=\"35\" class=\"stmt\"><span data-index=\"54\" class=\"\"><span data-index=\"74\" class=\"\">str</span>(<span data-index=\"75\" class=\"\">[<span data-index=\"99\" class=\"\">[<span data-index=\"117\" class=\"\"><span data-index=\"136\" class=\"\">i</span> * 2</span> <span data-index=\"118\" class=\"loop\">for i in <span data-index=\"140\" class=\"\"><span data-index=\"157\" class=\"\">range</span>(<span data-index=\"158\" class=\"\">j</span>)</span></span>]</span>\n                 <span data-index=\"100\" class=\"loop\">for j in <span data-index=\"120\" class=\"\"><span data-index=\"142\" class=\"\">range</span>(3)</span></span>]</span>)</span></span></span>\n\n        <span data-index=\"21\" class=\"stmt\"><span data-index=\"36\" class=\"\">(<span data-index=\"55\" class=\"\">lambda *_: 9</span>)(None)</span></span>\n        <span data-index=\"22\" class=\"stmt\"><span data-index=\"37\" class=\"\">(<span data-index=\"57\" class=\"\">lambda x: <span data-index=\"79\" class=\"\">[<span data-index=\"103\" class=\"\"><span data-index=\"121\" class=\"\">i</span> * <span data-index=\"123\" class=\"\">x</span></span> <span data-index=\"104\" class=\"loop\">for i in <span data-index=\"125\" class=\"\"><span data-index=\"147\" class=\"\">range</span>(3)</span></span>]</span></span>)(8)</span></span>\n        <span data-index=\"23\" class=\"stmt\"><span data-index=\"38\" class=\"\"><span data-index=\"59\" class=\"\">str</span>(<span data-index=\"60\" class=\"\">{<span data-index=\"81\" class=\"\">(<span data-index=\"105\" class=\"\">lambda x: <span data-index=\"127\" class=\"\"><span data-index=\"150\" class=\"\">i</span> + <span data-index=\"152\" class=\"\">x</span></span></span>)(7)</span> <span data-index=\"82\" class=\"loop\">for i in <span data-index=\"108\" class=\"\"><span data-index=\"129\" class=\"\">range</span>(3)</span></span>}</span>)</span></span>\n\n<span data-index=\"24\" class=\"stmt\">        @<span data-index=\"43\" class=\"\">deco</span>\n        def foo(self):\n            <span data-index=\"40\" class=\"stmt\">x = <span data-index=\"63\" class=\"\">9 * 0</span></span>\n            <span data-index=\"41\" class=\"stmt\"><span data-index=\"64\" class=\"\"><span data-index=\"87\" class=\"\">str</span>(<span data-index=\"88\" class=\"\"><span data-index=\"110\" class=\"\">1 + 2</span> + <span data-index=\"112\" class=\"\">x</span></span>)</span></span>\n            <span data-index=\"42\" class=\"stmt\">return <span data-index=\"65\" class=\"\">self</span></span></span>\n\n<span data-index=\"25\" class=\"stmt\">        def bar(self):\n            <span data-index=\"45\" class=\"stmt\">return <span data-index=\"68\" class=\"\">1 + 3</span></span></span></span>\n\n    <span data-index=\"12\" class=\"stmt\"><span data-index=\"26\" class=\"\"><span data-index=\"46\" class=\"\"><span data-index=\"69\" class=\"\"><span data-index=\"93\" class=\"\"><span data-index=\"113\" class=\"\"><span data-index=\"135\" class=\"\">A</span>()</span>.foo</span>()</span>.bar</span>()</span></span></span>", "lineno": 8}}, {"data": {"loop_iterations": {}, "num_special_types": 11, "node_values": {"15": ["<function m.<locals>.A.foo at 0xABC>", "function", {}], "7": ["", -2, {}]}, "type_names": ["MyClass", "NoneType", "SlotClass", "ValueError", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "member_descriptor", "method_descriptor", "range", "set", "str", "tuple", "type", "wrapper_descriptor"]}, "exception": null, "arguments": [["f", "<function m.<locals>.A.foo at 0xABC>"]], "traceback": null, "return_value": "<function m.<locals>.A.foo at 0xABC>", "function": {"data": {"node_loops": {}, "node_ranges": [{"depth": 1, "start": 0, "classes": ["stmt"], "tree_index": 2, "end": 25}, {"depth": 2, "start": 17, "classes": ["stmt"], "tree_index": 7, "end": 25}, {"depth": 3, "start": 24, "classes": [], "tree_index": 15, "end": 25}], "loop_ranges": []}, "name": "deco", "html_body": "<span data-index=\"2\" class=\"stmt\">def deco(f):\n    <span data-index=\"7\" class=\"stmt\">return <span data-index=\"15\" class=\"\">f</span></span></span>", "lineno": 4}}, {"data": {"loop_iterations": {}, "num_special_types": 11, "node_values": {"88": ["3", "int", {}], "65": ["<test_scripts.traced.m.<locals>.A object at 0xABC>", "m.<locals>.A", {}], "112": ["0", "int", {}], "110": ["3", "int", {}], "40": ["", -2, {}], "42": ["", -2, {}], "41": ["", -2, {}], "63": ["0", "int", {}], "64": ["'3'", "str", {"len": 1}]}, "type_names": ["MyClass", "NoneType", "SlotClass", "ValueError", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "m.<locals>.A", "member_descriptor", "method", "method_descriptor", "range", "set", "str", "tuple", "type", "wrapper_descriptor"]}, "exception": null, "arguments": [["self", "<test_scripts.traced.m.<locals>.A object at 0xABC>"]], "traceback": null, "return_value": "<test_scripts.traced.m.<locals>.A object at 0xABC>", "function": {"data": {"node_loops": {}, "node_ranges": [{"depth": 4, "start": 27, "classes": ["stmt"], "tree_index": 40, "end": 36}, {"depth": 4, "start": 49, "classes": ["stmt"], "tree_index": 41, "end": 63}, {"depth": 4, "start": 76, "classes": ["stmt"], "tree_index": 42, "end": 87}, {"depth": 5, "start": 31, "classes": [], "tree_index": 63, "end": 36}, {"depth": 5, "start": 49, "classes": [], "tree_index": 64, "end": 63}, {"depth": 5, "start": 83, "classes": [], "tree_index": 65, "end": 87}, {"depth": 6, "start": 49, "classes": [], "tree_index": 87, "end": 52}, {"depth": 6, "start": 53, "classes": [], "tree_index": 88, "end": 62}, {"depth": 7, "start": 53, "classes": [], "tree_index": 110, "end": 58}, {"depth": 7, "start": 61, "classes": [], "tree_index": 112, "end": 62}], "loop_ranges": []}, "name": "foo", "html_body": "<span data-index=\"24\" class=\"stmt\">        @<span data-index=\"43\" class=\"\">deco</span>\n        def foo(self):\n            <span data-index=\"40\" class=\"stmt\">x = <span data-index=\"63\" class=\"\">9 * 0</span></span>\n            <span data-index=\"41\" class=\"stmt\"><span data-index=\"64\" class=\"\"><span data-index=\"87\" class=\"\">str</span>(<span data-index=\"88\" class=\"\"><span data-index=\"110\" class=\"\">1 + 2</span> + <span data-index=\"112\" class=\"\">x</span></span>)</span></span>\n            <span data-index=\"42\" class=\"stmt\">return <span data-index=\"65\" class=\"\">self</span></span></span>", "lineno": 24}}, {"data": {"loop_iterations": {}, "num_special_types": 11, "node_values": {"45": ["", -2, {}], "68": ["4", "int", {}]}, "type_names": ["MyClass", "NoneType", "SlotClass", "ValueError", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "m.<locals>.A", "member_descriptor", "method", "method_descriptor", "range", "set", "str", "tuple", "type", "wrapper_descriptor"]}, "exception": null, "arguments": [["self", "<test_scripts.traced.m.<locals>.A object at 0xABC>"]], "traceback": null, "return_value": "4", "function": {"data": {"node_loops": {}, "node_ranges": [{"depth": 4, "start": 27, "classes": ["stmt"], "tree_index": 45, "end": 39}, {"depth": 5, "start": 34, "classes": [], "tree_index": 68, "end": 39}], "loop_ranges": []}, "name": "bar", "html_body": "<span data-index=\"25\" class=\"stmt\">        def bar(self):\n            <span data-index=\"45\" class=\"stmt\">return <span data-index=\"68\" class=\"\">1 + 3</span></span></span>", "lineno": 30}}]