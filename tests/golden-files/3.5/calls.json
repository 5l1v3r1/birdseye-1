[{"function": {"lineno": 63, "name": "main", "data": {"loop_ranges": [{"end": 65, "start": 64, "tree_index": 46}, {"end": 205, "start": 204, "tree_index": 47}, {"end": 1254, "start": 1250, "tree_index": 66}, {"end": 118, "start": 117, "tree_index": 128}, {"end": 438, "start": 437, "tree_index": 240}, {"end": 417, "start": 416, "tree_index": 335}, {"end": 503, "start": 502, "tree_index": 343}, {"end": 539, "start": 538, "tree_index": 347}], "node_loops": {"162": [66], "426": [240], "416": [47], "323": [46, 128], "424": [240, 335], "339": [340], "422": [240, 335], "229": [47], "225": [46, 128], "342": [343], "131": [47], "335": [240], "224": [46, 128], "486": [47], "405": [46], "334": [240, 335], "128": [46], "231": [47], "492": [240], "478": [46, 128], "327": [47], "221": [46], "546": [47], "414": [46, 128], "527": [46, 128], "415": [46, 128], "346": [347], "127": [46], "320": [46], "328": [47], "232": [47], "322": [46, 128], "412": [46, 128], "417": [47], "132": [47], "321": [46], "223": [46], "482": [46, 128], "534": [47], "413": [46, 128], "325": [47], "480": [46, 128], "239": [240], "411": [46], "345": [347], "317": [46], "326": [47]}, "node_ranges": [{"end": 40, "start": 16, "classes": ["stmt"], "depth": 2, "tree_index": 44}, {"end": 55, "start": 46, "classes": ["stmt"], "depth": 2, "tree_index": 45}, {"end": 194, "start": 56, "classes": ["loop", "stmt"], "depth": 2, "tree_index": 46}, {"end": 359, "start": 196, "classes": ["loop", "stmt"], "depth": 2, "tree_index": 47}, {"end": 390, "start": 365, "classes": ["stmt"], "depth": 2, "tree_index": 48}, {"end": 453, "start": 395, "classes": ["stmt"], "depth": 2, "tree_index": 49}, {"end": 484, "start": 458, "classes": ["stmt"], "depth": 2, "tree_index": 50}, {"end": 517, "start": 489, "classes": ["stmt"], "depth": 2, "tree_index": 51}, {"end": 553, "start": 522, "classes": ["stmt"], "depth": 2, "tree_index": 52}, {"end": 578, "start": 554, "classes": ["stmt"], "depth": 2, "tree_index": 53}, {"end": 605, "start": 583, "classes": ["stmt"], "depth": 2, "tree_index": 54}, {"end": 812, "start": 611, "classes": ["stmt"], "depth": 2, "tree_index": 55}, {"end": 880, "start": 818, "classes": ["stmt"], "depth": 2, "tree_index": 56}, {"end": 922, "start": 886, "classes": ["stmt"], "depth": 2, "tree_index": 57}, {"end": 933, "start": 928, "classes": ["stmt"], "depth": 2, "tree_index": 58}, {"end": 944, "start": 938, "classes": ["stmt"], "depth": 2, "tree_index": 59}, {"end": 962, "start": 949, "classes": ["stmt"], "depth": 2, "tree_index": 60}, {"end": 972, "start": 967, "classes": ["stmt"], "depth": 2, "tree_index": 61}, {"end": 1002, "start": 978, "classes": ["stmt"], "depth": 2, "tree_index": 62}, {"end": 1032, "start": 1008, "classes": ["stmt"], "depth": 2, "tree_index": 63}, {"end": 1067, "start": 1037, "classes": ["stmt"], "depth": 2, "tree_index": 64}, {"end": 1238, "start": 1069, "classes": ["stmt"], "depth": 2, "tree_index": 65}, {"end": 1269, "start": 1240, "classes": ["loop", "stmt"], "depth": 2, "tree_index": 66}, {"end": 1307, "start": 1275, "classes": ["stmt"], "depth": 2, "tree_index": 67}, {"end": 1321, "start": 1313, "classes": ["stmt"], "depth": 2, "tree_index": 68}, {"end": 1331, "start": 1326, "classes": ["stmt"], "depth": 2, "tree_index": 69}, {"end": 1349, "start": 1336, "classes": ["stmt"], "depth": 2, "tree_index": 70}, {"end": 1364, "start": 1355, "classes": ["stmt"], "depth": 2, "tree_index": 71}, {"end": 1381, "start": 1369, "classes": ["stmt"], "depth": 2, "tree_index": 72}, {"end": 1398, "start": 1386, "classes": ["stmt"], "depth": 2, "tree_index": 73}, {"end": 40, "start": 23, "classes": [], "depth": 3, "tree_index": 122}, {"end": 79, "start": 69, "classes": [], "depth": 3, "tree_index": 126}, {"end": 104, "start": 89, "classes": ["stmt"], "depth": 3, "tree_index": 127}, {"end": 194, "start": 105, "classes": ["loop", "stmt"], "depth": 3, "tree_index": 128}, {"end": 217, "start": 209, "classes": [], "depth": 3, "tree_index": 130}, {"end": 322, "start": 219, "classes": ["stmt"], "depth": 3, "tree_index": 131}, {"end": 359, "start": 323, "classes": ["stmt"], "depth": 3, "tree_index": 132}, {"end": 390, "start": 369, "classes": [], "depth": 3, "tree_index": 134}, {"end": 453, "start": 404, "classes": [], "depth": 3, "tree_index": 136}, {"end": 484, "start": 458, "classes": [], "depth": 3, "tree_index": 137}, {"end": 517, "start": 489, "classes": [], "depth": 3, "tree_index": 138}, {"end": 553, "start": 522, "classes": [], "depth": 3, "tree_index": 139}, {"end": 578, "start": 574, "classes": ["stmt"], "depth": 3, "tree_index": 141}, {"end": 605, "start": 583, "classes": [], "depth": 3, "tree_index": 142}, {"end": 812, "start": 618, "classes": [], "depth": 3, "tree_index": 143}, {"end": 880, "start": 825, "classes": [], "depth": 3, "tree_index": 144}, {"end": 922, "start": 893, "classes": [], "depth": 3, "tree_index": 145}, {"end": 962, "start": 956, "classes": [], "depth": 3, "tree_index": 151}, {"end": 1002, "start": 978, "classes": [], "depth": 3, "tree_index": 153}, {"end": 1032, "start": 1015, "classes": [], "depth": 3, "tree_index": 154}, {"end": 1067, "start": 1044, "classes": [], "depth": 3, "tree_index": 155}, {"end": 1104, "start": 1086, "classes": ["stmt"], "depth": 3, "tree_index": 156}, {"end": 1238, "start": 1231, "classes": ["stmt"], "depth": 3, "tree_index": 160}, {"end": 1269, "start": 1264, "classes": ["stmt"], "depth": 3, "tree_index": 162}, {"end": 1307, "start": 1282, "classes": [], "depth": 3, "tree_index": 163}, {"end": 1349, "start": 1343, "classes": [], "depth": 3, "tree_index": 166}, {"end": 1364, "start": 1359, "classes": [], "depth": 3, "tree_index": 168}, {"end": 1381, "start": 1369, "classes": [], "depth": 3, "tree_index": 169}, {"end": 1398, "start": 1386, "classes": [], "depth": 3, "tree_index": 170}, {"end": 35, "start": 23, "classes": [], "depth": 4, "tree_index": 213}, {"end": 74, "start": 69, "classes": [], "depth": 4, "tree_index": 219}, {"end": 104, "start": 89, "classes": [], "depth": 4, "tree_index": 221}, {"end": 134, "start": 122, "classes": [], "depth": 4, "tree_index": 223}, {"end": 170, "start": 148, "classes": ["stmt"], "depth": 4, "tree_index": 224}, {"end": 194, "start": 183, "classes": ["stmt"], "depth": 4, "tree_index": 225}, {"end": 214, "start": 209, "classes": [], "depth": 4, "tree_index": 227}, {"end": 267, "start": 244, "classes": ["stmt"], "depth": 4, "tree_index": 229}, {"end": 340, "start": 334, "classes": [], "depth": 4, "tree_index": 231}, {"end": 359, "start": 354, "classes": ["stmt"], "depth": 4, "tree_index": 232}, {"end": 378, "start": 369, "classes": [], "depth": 4, "tree_index": 234}, {"end": 390, "start": 381, "classes": [], "depth": 4, "tree_index": 236}, {"end": 396, "start": 395, "classes": [], "depth": 4, "tree_index": 237}, {"end": 432, "start": 405, "classes": [], "depth": 4, "tree_index": 239}, {"end": 452, "start": 433, "classes": ["loop"], "depth": 4, "tree_index": 240}, {"end": 463, "start": 458, "classes": [], "depth": 4, "tree_index": 241}, {"end": 483, "start": 464, "classes": [], "depth": 4, "tree_index": 242}, {"end": 494, "start": 489, "classes": [], "depth": 4, "tree_index": 243}, {"end": 516, "start": 495, "classes": [], "depth": 4, "tree_index": 244}, {"end": 527, "start": 522, "classes": [], "depth": 4, "tree_index": 245}, {"end": 552, "start": 528, "classes": [], "depth": 4, "tree_index": 246}, {"end": 564, "start": 563, "classes": [], "depth": 4, "tree_index": 247}, {"end": 588, "start": 583, "classes": [], "depth": 4, "tree_index": 248}, {"end": 604, "start": 589, "classes": [], "depth": 4, "tree_index": 249}, {"end": 729, "start": 618, "classes": [], "depth": 4, "tree_index": 250}, {"end": 812, "start": 733, "classes": [], "depth": 4, "tree_index": 252}, {"end": 859, "start": 825, "classes": [], "depth": 4, "tree_index": 253}, {"end": 917, "start": 893, "classes": [], "depth": 4, "tree_index": 256}, {"end": 957, "start": 956, "classes": [], "depth": 4, "tree_index": 261}, {"end": 983, "start": 978, "classes": [], "depth": 4, "tree_index": 265}, {"end": 1027, "start": 1015, "classes": [], "depth": 4, "tree_index": 269}, {"end": 1057, "start": 1044, "classes": [], "depth": 4, "tree_index": 272}, {"end": 1104, "start": 1092, "classes": [], "depth": 4, "tree_index": 275}, {"end": 1130, "start": 1116, "classes": [], "depth": 4, "tree_index": 276}, {"end": 1149, "start": 1145, "classes": ["stmt"], "depth": 4, "tree_index": 277}, {"end": 1170, "start": 1161, "classes": [], "depth": 4, "tree_index": 278}, {"end": 1184, "start": 1180, "classes": ["stmt"], "depth": 4, "tree_index": 279}, {"end": 1209, "start": 1205, "classes": ["stmt"], "depth": 4, "tree_index": 280}, {"end": 1238, "start": 1231, "classes": [], "depth": 4, "tree_index": 281}, {"end": 1302, "start": 1282, "classes": [], "depth": 4, "tree_index": 282}, {"end": 1344, "start": 1343, "classes": [], "depth": 4, "tree_index": 286}, {"end": 1362, "start": 1359, "classes": [], "depth": 4, "tree_index": 290}, {"end": 1378, "start": 1369, "classes": [], "depth": 4, "tree_index": 291}, {"end": 1380, "start": 1379, "classes": [], "depth": 4, "tree_index": 292}, {"end": 1395, "start": 1386, "classes": [], "depth": 4, "tree_index": 293}, {"end": 1397, "start": 1396, "classes": [], "depth": 4, "tree_index": 294}, {"end": 32, "start": 23, "classes": [], "depth": 5, "tree_index": 314}, {"end": 100, "start": 89, "classes": [], "depth": 5, "tree_index": 317}, {"end": 127, "start": 122, "classes": [], "depth": 5, "tree_index": 320}, {"end": 133, "start": 128, "classes": [], "depth": 5, "tree_index": 321}, {"end": 170, "start": 148, "classes": [], "depth": 5, "tree_index": 322}, {"end": 194, "start": 183, "classes": [], "depth": 5, "tree_index": 323}, {"end": 267, "start": 244, "classes": [], "depth": 5, "tree_index": 325}, {"end": 300, "start": 283, "classes": [], "depth": 5, "tree_index": 326}, {"end": 322, "start": 314, "classes": ["stmt"], "depth": 5, "tree_index": 327}, {"end": 335, "start": 334, "classes": [], "depth": 5, "tree_index": 328}, {"end": 376, "start": 369, "classes": [], "depth": 5, "tree_index": 331}, {"end": 388, "start": 381, "classes": [], "depth": 5, "tree_index": 332}, {"end": 411, "start": 406, "classes": [], "depth": 5, "tree_index": 334}, {"end": 431, "start": 412, "classes": ["loop"], "depth": 5, "tree_index": 335}, {"end": 452, "start": 442, "classes": [], "depth": 5, "tree_index": 337}, {"end": 465, "start": 464, "classes": [], "depth": 5, "tree_index": 339}, {"end": 497, "start": 496, "classes": [], "depth": 5, "tree_index": 342}, {"end": 515, "start": 498, "classes": ["loop"], "depth": 5, "tree_index": 343}, {"end": 530, "start": 529, "classes": [], "depth": 5, "tree_index": 345}, {"end": 533, "start": 532, "classes": [], "depth": 5, "tree_index": 346}, {"end": 551, "start": 534, "classes": ["loop"], "depth": 5, "tree_index": 347}, {"end": 590, "start": 589, "classes": [], "depth": 5, "tree_index": 350}, {"end": 604, "start": 593, "classes": [], "depth": 5, "tree_index": 352}, {"end": 630, "start": 618, "classes": [], "depth": 5, "tree_index": 353}, {"end": 657, "start": 640, "classes": [], "depth": 5, "tree_index": 354}, {"end": 751, "start": 734, "classes": [], "depth": 5, "tree_index": 358}, {"end": 811, "start": 782, "classes": [], "depth": 5, "tree_index": 360}, {"end": 837, "start": 825, "classes": [], "depth": 5, "tree_index": 362}, {"end": 845, "start": 838, "classes": [], "depth": 5, "tree_index": 363}, {"end": 897, "start": 893, "classes": [], "depth": 5, "tree_index": 369}, {"end": 916, "start": 898, "classes": [], "depth": 5, "tree_index": 370}, {"end": 1102, "start": 1092, "classes": [], "depth": 5, "tree_index": 382}, {"end": 1236, "start": 1231, "classes": [], "depth": 5, "tree_index": 385}, {"end": 1298, "start": 1283, "classes": [], "depth": 5, "tree_index": 386}, {"end": 93, "start": 89, "classes": [], "depth": 6, "tree_index": 405}, {"end": 133, "start": 132, "classes": [], "depth": 6, "tree_index": 411}, {"end": 163, "start": 148, "classes": [], "depth": 6, "tree_index": 412}, {"end": 169, "start": 164, "classes": [], "depth": 6, "tree_index": 413}, {"end": 188, "start": 183, "classes": [], "depth": 6, "tree_index": 414}, {"end": 193, "start": 189, "classes": [], "depth": 6, "tree_index": 415}, {"end": 249, "start": 244, "classes": [], "depth": 6, "tree_index": 416}, {"end": 266, "start": 250, "classes": [], "depth": 6, "tree_index": 417}, {"end": 407, "start": 406, "classes": [], "depth": 6, "tree_index": 422}, {"end": 411, "start": 410, "classes": [], "depth": 6, "tree_index": 424}, {"end": 431, "start": 421, "classes": [], "depth": 6, "tree_index": 426}, {"end": 447, "start": 442, "classes": [], "depth": 6, "tree_index": 428}, {"end": 483, "start": 475, "classes": [], "depth": 6, "tree_index": 432}, {"end": 515, "start": 507, "classes": [], "depth": 6, "tree_index": 435}, {"end": 551, "start": 543, "classes": [], "depth": 6, "tree_index": 439}, {"end": 602, "start": 593, "classes": [], "depth": 6, "tree_index": 441}, {"end": 644, "start": 640, "classes": [], "depth": 6, "tree_index": 443}, {"end": 656, "start": 645, "classes": [], "depth": 6, "tree_index": 444}, {"end": 738, "start": 734, "classes": [], "depth": 6, "tree_index": 447}, {"end": 750, "start": 739, "classes": [], "depth": 6, "tree_index": 448}, {"end": 786, "start": 782, "classes": [], "depth": 6, "tree_index": 449}, {"end": 1298, "start": 1293, "classes": [], "depth": 6, "tree_index": 474}, {"end": 156, "start": 148, "classes": [], "depth": 7, "tree_index": 478}, {"end": 165, "start": 164, "classes": [], "depth": 7, "tree_index": 480}, {"end": 169, "start": 168, "classes": [], "depth": 7, "tree_index": 482}, {"end": 261, "start": 250, "classes": [], "depth": 7, "tree_index": 486}, {"end": 426, "start": 421, "classes": [], "depth": 7, "tree_index": 492}, {"end": 480, "start": 475, "classes": [], "depth": 7, "tree_index": 496}, {"end": 512, "start": 507, "classes": [], "depth": 7, "tree_index": 499}, {"end": 548, "start": 543, "classes": [], "depth": 7, "tree_index": 502}, {"end": 650, "start": 645, "classes": [], "depth": 7, "tree_index": 506}, {"end": 744, "start": 739, "classes": [], "depth": 7, "tree_index": 511}, {"end": 1294, "start": 1293, "classes": [], "depth": 7, "tree_index": 524}, {"end": 152, "start": 148, "classes": [], "depth": 8, "tree_index": 527}, {"end": 260, "start": 255, "classes": [], "depth": 8, "tree_index": 534}, {"end": 256, "start": 255, "classes": [], "depth": 9, "tree_index": 546}]}, "html_body": "<span data-index=\"12\" class=\"stmt\">@<span data-index=\"74\" class=\"\">eye</span>\ndef main():\n    <span data-index=\"44\" class=\"stmt\">assert <span data-index=\"122\" class=\"\"><span data-index=\"213\" class=\"\"><span data-index=\"314\" class=\"\">factorial</span>(3)</span> == 6</span></span>\n\n    <span data-index=\"45\" class=\"stmt\">vals = []</span>\n<span data-index=\"46\" class=\"loop stmt\">    for i in <span data-index=\"126\" class=\"\"><span data-index=\"219\" class=\"\">range</span>(100)</span>:\n        <span data-index=\"127\" class=\"stmt\"><span data-index=\"221\" class=\"\"><span data-index=\"317\" class=\"\"><span data-index=\"405\" class=\"\">vals</span>.append</span>([])</span></span>\n<span data-index=\"128\" class=\"loop stmt\">        for j in <span data-index=\"223\" class=\"\"><span data-index=\"320\" class=\"\">range</span>(<span data-index=\"321\" class=\"\">2 * <span data-index=\"411\" class=\"\">i</span></span>)</span>:\n            <span data-index=\"224\" class=\"stmt\"><span data-index=\"322\" class=\"\"><span data-index=\"412\" class=\"\"><span data-index=\"478\" class=\"\"><span data-index=\"527\" class=\"\">vals</span>[-1]</span>.append</span>(<span data-index=\"413\" class=\"\"><span data-index=\"480\" class=\"\">i</span> + <span data-index=\"482\" class=\"\">j</span></span>)</span></span>\n            <span data-index=\"225\" class=\"stmt\"><span data-index=\"323\" class=\"\"><span data-index=\"414\" class=\"\">dummy</span>(<span data-index=\"415\" class=\"\">vals</span>)</span></span></span></span>\n\n<span data-index=\"47\" class=\"loop stmt\">    for i in <span data-index=\"130\" class=\"\"><span data-index=\"227\" class=\"\">range</span>(6)</span>:\n<span data-index=\"131\" class=\"stmt\">        try:\n            <span data-index=\"229\" class=\"stmt\"><span data-index=\"325\" class=\"\"><span data-index=\"416\" class=\"\">dummy</span>(<span data-index=\"417\" class=\"\"><span data-index=\"486\" class=\"\">1 / (<span data-index=\"534\" class=\"\"><span data-index=\"546\" class=\"\">i</span> % 2</span>)</span> + 10</span>)</span></span>\n        except <span data-index=\"326\" class=\"\">ZeroDivisionError</span>:\n            <span data-index=\"327\" class=\"stmt\">continue</span></span>\n<span data-index=\"132\" class=\"stmt\">        if <span data-index=\"231\" class=\"\"><span data-index=\"328\" class=\"\">i</span> == 3</span>:\n            <span data-index=\"232\" class=\"stmt\">break</span></span></span>\n\n    <span data-index=\"48\" class=\"stmt\">c = <span data-index=\"134\" class=\"\"><span data-index=\"234\" class=\"\"><span data-index=\"331\" class=\"\">MyClass</span>()</span> + <span data-index=\"236\" class=\"\"><span data-index=\"332\" class=\"\">MyClass</span>()</span></span></span>\n    <span data-index=\"49\" class=\"stmt\"><span data-index=\"237\" class=\"\">c</span>.list = <span data-index=\"136\" class=\"\">[<span data-index=\"239\" class=\"\">[<span data-index=\"334\" class=\"\"><span data-index=\"422\" class=\"\">x</span> + <span data-index=\"424\" class=\"\">y</span></span> <span data-index=\"335\" class=\"loop\">for x in <span data-index=\"426\" class=\"\"><span data-index=\"492\" class=\"\">range</span>(100)</span></span>]</span> \n <span data-index=\"240\" class=\"loop\">for y in <span data-index=\"337\" class=\"\"><span data-index=\"428\" class=\"\">range</span>(100)</span></span>]</span></span>\n    <span data-index=\"50\" class=\"stmt\"><span data-index=\"137\" class=\"\"><span data-index=\"241\" class=\"\">dummy</span>(<span data-index=\"242\" class=\"\"><span data-index=\"339\" class=\"\">n</span> for n in <span data-index=\"432\" class=\"\"><span data-index=\"496\" class=\"\">range</span>(4)</span></span>)</span></span>\n    <span data-index=\"51\" class=\"stmt\"><span data-index=\"138\" class=\"\"><span data-index=\"243\" class=\"\">dummy</span>(<span data-index=\"244\" class=\"\">{<span data-index=\"342\" class=\"\">n</span> <span data-index=\"343\" class=\"loop\">for n in <span data-index=\"435\" class=\"\"><span data-index=\"499\" class=\"\">range</span>(4)</span></span>}</span>)</span></span>\n    <span data-index=\"52\" class=\"stmt\"><span data-index=\"139\" class=\"\"><span data-index=\"245\" class=\"\">dummy</span>(<span data-index=\"246\" class=\"\">{<span data-index=\"345\" class=\"\">n</span>: <span data-index=\"346\" class=\"\">n</span> <span data-index=\"347\" class=\"loop\">for n in <span data-index=\"439\" class=\"\"><span data-index=\"502\" class=\"\">range</span>(1)</span></span>}</span>)</span></span>\n<span data-index=\"53\" class=\"stmt\">    with <span data-index=\"247\" class=\"\">c</span>:\n        <span data-index=\"141\" class=\"stmt\">pass</span></span>\n    <span data-index=\"54\" class=\"stmt\"><span data-index=\"142\" class=\"\"><span data-index=\"248\" class=\"\">dummy</span>(<span data-index=\"249\" class=\"\"><span data-index=\"350\" class=\"\">c</span> + <span data-index=\"352\" class=\"\"><span data-index=\"441\" class=\"\">SlotClass</span>()</span></span>)</span></span>\n\n    <span data-index=\"55\" class=\"stmt\">assert <span data-index=\"143\" class=\"\"><span data-index=\"250\" class=\"\"><span data-index=\"353\" class=\"\">complex_args</span>(\n        <span data-index=\"354\" class=\"\"><span data-index=\"443\" class=\"\">list</span>(<span data-index=\"444\" class=\"\"><span data-index=\"506\" class=\"\">range</span>(1000)</span>)</span>,\n        &quot;hello&quot;,\n        key2=8,\n        kwarg1={&#x27;key&#x27;: &#x27;value&#x27;}\n    )</span> == <span data-index=\"252\" class=\"\">[<span data-index=\"358\" class=\"\"><span data-index=\"447\" class=\"\">list</span>(<span data-index=\"448\" class=\"\"><span data-index=\"511\" class=\"\">range</span>(1000)</span>)</span>,\n          &#x27;hello&#x27;,\n          <span data-index=\"360\" class=\"\"><span data-index=\"449\" class=\"\">dict</span>(kwarg1={&#x27;key&#x27;: &#x27;value&#x27;})</span>]</span></span></span>\n\n    <span data-index=\"56\" class=\"stmt\">assert <span data-index=\"144\" class=\"\"><span data-index=\"253\" class=\"\"><span data-index=\"362\" class=\"\">complex_args</span>(<span data-index=\"363\" class=\"\">*[1, 2]</span>, **{&#x27;k&#x27;: 23})</span> == [1, 2, {&#x27;k&#x27;: 23}]</span></span>\n\n    <span data-index=\"57\" class=\"stmt\">assert <span data-index=\"145\" class=\"\"><span data-index=\"256\" class=\"\"><span data-index=\"369\" class=\"\">eval</span>(<span data-index=\"370\" class=\"\">&#x27;%s + %s&#x27; % (1, 2)</span>)</span> == 3</span></span>\n\n    <span data-index=\"58\" class=\"stmt\">x = 1</span>\n    <span data-index=\"59\" class=\"stmt\">x += 5</span>\n    <span data-index=\"60\" class=\"stmt\">assert <span data-index=\"151\" class=\"\"><span data-index=\"261\" class=\"\">x</span> == 6</span></span>\n    <span data-index=\"61\" class=\"stmt\">del x</span>\n\n    <span data-index=\"62\" class=\"stmt\"><span data-index=\"153\" class=\"\"><span data-index=\"265\" class=\"\">dummy</span>(True, False, None)</span></span>\n\n    <span data-index=\"63\" class=\"stmt\">assert <span data-index=\"154\" class=\"\"><span data-index=\"269\" class=\"\">[1, 2, 3][1]</span> == 2</span></span>\n    <span data-index=\"64\" class=\"stmt\">assert <span data-index=\"155\" class=\"\"><span data-index=\"272\" class=\"\">(1, 2, 3)[:2]</span> == (1, 2)</span></span>\n\n<span data-index=\"65\" class=\"stmt\">    try:\n        <span data-index=\"156\" class=\"stmt\">raise <span data-index=\"275\" class=\"\"><span data-index=\"382\" class=\"\">ValueError</span>()</span></span>\n    except <span data-index=\"276\" class=\"\">AssertionError</span> as e:\n        <span data-index=\"277\" class=\"stmt\">pass</span>\n    except <span data-index=\"278\" class=\"\">TypeError</span>:\n        <span data-index=\"279\" class=\"stmt\">pass</span>\n    except:\n        <span data-index=\"280\" class=\"stmt\">pass</span>\n    finally:\n        <span data-index=\"160\" class=\"stmt\"><span data-index=\"281\" class=\"\"><span data-index=\"385\" class=\"\">dummy</span>()</span></span></span>\n\n<span data-index=\"66\" class=\"loop stmt\">    while True:\n        <span data-index=\"162\" class=\"stmt\">break</span></span>\n\n    <span data-index=\"67\" class=\"stmt\">assert <span data-index=\"163\" class=\"\"><span data-index=\"282\" class=\"\">(<span data-index=\"386\" class=\"\">lambda x: <span data-index=\"474\" class=\"\"><span data-index=\"524\" class=\"\">x</span> * 2</span></span>)(4)</span> == 8</span></span>\n\n    <span data-index=\"68\" class=\"stmt\">global G</span>\n    <span data-index=\"69\" class=\"stmt\">G = 4</span>\n    <span data-index=\"70\" class=\"stmt\">assert <span data-index=\"166\" class=\"\"><span data-index=\"286\" class=\"\">G</span> == 4</span></span>\n\n    <span data-index=\"71\" class=\"stmt\">g = <span data-index=\"168\" class=\"\"><span data-index=\"290\" class=\"\">gen</span>()</span></span>\n    <span data-index=\"72\" class=\"stmt\"><span data-index=\"169\" class=\"\"><span data-index=\"291\" class=\"\">use_gen_1</span>(<span data-index=\"292\" class=\"\">g</span>)</span></span>\n    <span data-index=\"73\" class=\"stmt\"><span data-index=\"170\" class=\"\"><span data-index=\"293\" class=\"\">use_gen_2</span>(<span data-index=\"294\" class=\"\">g</span>)</span></span></span>"}, "data": {"node_values": {"354": ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 1000}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["997", ["997", "int", {}]], ["998", ["998", "int", {}]], ["999", ["999", "int", {}]]], "237": ["<tests.golden_script.MyClass object at 0xABC>", "MyClass", {}], "291": ["<function use_gen_1 at 0xABC>", "function", {}, ["__wrapped__", ["<function use_gen_1 at 0xABC>", "function", {}]]], "386": ["<function main.<locals>.<lambda> at 0xABC>", "function", {}], "68": ["", -2, {}], "414": {"1": {"0": ["<function dummy at 0xABC>", "function", {}], "1": ["<function dummy at 0xABC>", "function", {}]}, "2": {"2": ["<function dummy at 0xABC>", "function", {}], "0": ["<function dummy at 0xABC>", "function", {}], "3": ["<function dummy at 0xABC>", "function", {}], "1": ["<function dummy at 0xABC>", "function", {}]}, "3": {"2": ["<function dummy at 0xABC>", "function", {}], "0": ["<function dummy at 0xABC>", "function", {}], "1": ["<function dummy at 0xABC>", "function", {}], "3": ["<function dummy at 0xABC>", "function", {}], "4": ["<function dummy at 0xABC>", "function", {}], "5": ["<function dummy at 0xABC>", "function", {}]}, "4": {"2": ["<function dummy at 0xABC>", "function", {}], "0": ["<function dummy at 0xABC>", "function", {}], "1": ["<function dummy at 0xABC>", "function", {}], "3": ["<function dummy at 0xABC>", "function", {}], "4": ["<function dummy at 0xABC>", "function", {}], "5": ["<function dummy at 0xABC>", "function", {}]}, "5": {"2": ["<function dummy at 0xABC>", "function", {}], "0": ["<function dummy at 0xABC>", "function", {}], "1": ["<function dummy at 0xABC>", "function", {}], "3": ["<function dummy at 0xABC>", "function", {}], "4": ["<function dummy at 0xABC>", "function", {}], "5": ["<function dummy at 0xABC>", "function", {}]}}, "236": ["<tests.golden_script.MyClass object at 0xABC>", "MyClass", {}], "350": ["<tests.golden_script.MyClass object at 0xABC>", "MyClass", {}, ["list", ["[[0, 1, 2, 3, 4, 5, ...], [1, 2, 3, 4, 5, 6, ...], [2, 3, 4, 5, 6, 7, ...], [3, 4, 5, 6, 7, 8, ...], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 100}, ["0", ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 100}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["97", ["97", "int", {}]], ["98", ["98", "int", {}]], ["99", ["99", "int", {}]]]], ["1", ["[1, 2, 3, 4, 5, 6, ...]", "list", {"len": 100}, ["0", ["1", "int", {}]], ["1", ["2", "int", {}]], ["2", ["3", "int", {}]], ["97", ["98", "int", {}]], ["98", ["99", "int", {}]], ["99", ["100", "int", {}]]]], ["2", ["[2, 3, 4, 5, 6, 7, ...]", "list", {"len": 100}, ["0", ["2", "int", {}]], ["1", ["3", "int", {}]], ["2", ["4", "int", {}]], ["97", ["99", "int", {}]], ["98", ["100", "int", {}]], ["99", ["101", "int", {}]]]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 100}, ["0", ["97", "int", {}]], ["1", ["98", "int", {}]], ["2", ["99", "int", {}]], ["97", ["194", "int", {}]], ["98", ["195", "int", {}]], ["99", ["196", "int", {}]]]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 100}, ["0", ["98", "int", {}]], ["1", ["99", "int", {}]], ["2", ["100", "int", {}]], ["97", ["195", "int", {}]], ["98", ["196", "int", {}]], ["99", ["197", "int", {}]]]], ["99", ["[99, 100, 101, 102, 103, 104, ...]", "list", {"len": 100}, ["0", ["99", "int", {}]], ["1", ["100", "int", {}]], ["2", ["101", "int", {}]], ["97", ["196", "int", {}]], ["98", ["197", "int", {}]], ["99", ["198", "int", {}]]]]]]], "155": ["True", "bool", {}], "422": {"2": {"2": ["2", "int", {}], "0": ["0", "int", {}], "1": ["1", "int", {}], "3": ["97", "int", {}], "4": ["98", "int", {}], "5": ["99", "int", {}]}, "0": {"2": ["2", "int", {}], "0": ["0", "int", {}], "1": ["1", "int", {}], "3": ["97", "int", {}], "4": ["98", "int", {}], "5": ["99", "int", {}]}, "1": {"2": ["2", "int", {}], "0": ["0", "int", {}], "1": ["1", "int", {}], "3": ["97", "int", {}], "4": ["98", "int", {}], "5": ["99", "int", {}]}, "3": {"2": ["2", "int", {}], "0": ["0", "int", {}], "1": ["1", "int", {}], "3": ["97", "int", {}], "4": ["98", "int", {}], "5": ["99", "int", {}]}, "4": {"2": ["2", "int", {}], "0": ["0", "int", {}], "1": ["1", "int", {}], "3": ["97", "int", {}], "4": ["98", "int", {}], "5": ["99", "int", {}]}, "5": {"2": ["2", "int", {}], "0": ["0", "int", {}], "1": ["1", "int", {}], "3": ["97", "int", {}], "4": ["98", "int", {}], "5": ["99", "int", {}]}}, "229": {"2": ["", -2, {}], "0": ["", -2, {}], "3": ["", -2, {}], "1": ["", -2, {}]}, "225": {"1": {"0": ["", -2, {}], "1": ["", -2, {}]}, "2": {"2": ["", -2, {}], "0": ["", -2, {}], "3": ["", -2, {}], "1": ["", -2, {}]}, "3": {"2": ["", -2, {}], "0": ["", -2, {}], "1": ["", -2, {}], "3": ["", -2, {}], "4": ["", -2, {}], "5": ["", -2, {}]}, "4": {"2": ["", -2, {}], "0": ["", -2, {}], "1": ["", -2, {}], "3": ["", -2, {}], "4": ["", -2, {}], "5": ["", -2, {}]}, "5": {"2": ["", -2, {}], "0": ["", -2, {}], "1": ["", -2, {}], "3": ["", -2, {}], "4": ["", -2, {}], "5": ["", -2, {}]}}, "239": {"2": ["[2, 3, 4, 5, 6, 7, ...]", "list", {"len": 100}, ["0", ["2", "int", {}]], ["1", ["3", "int", {}]], ["2", ["4", "int", {}]], ["97", ["99", "int", {}]], ["98", ["100", "int", {}]], ["99", ["101", "int", {}]]], "0": ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 100}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["97", ["97", "int", {}]], ["98", ["98", "int", {}]], ["99", ["99", "int", {}]]], "1": ["[1, 2, 3, 4, 5, 6, ...]", "list", {"len": 100}, ["0", ["1", "int", {}]], ["1", ["2", "int", {}]], ["2", ["3", "int", {}]], ["97", ["98", "int", {}]], ["98", ["99", "int", {}]], ["99", ["100", "int", {}]]], "3": ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 100}, ["0", ["97", "int", {}]], ["1", ["98", "int", {}]], ["2", ["99", "int", {}]], ["97", ["194", "int", {}]], ["98", ["195", "int", {}]], ["99", ["196", "int", {}]]], "4": ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 100}, ["0", ["98", "int", {}]], ["1", ["99", "int", {}]], ["2", ["100", "int", {}]], ["97", ["195", "int", {}]], ["98", ["196", "int", {}]], ["99", ["197", "int", {}]]], "5": ["[99, 100, 101, 102, 103, 104, ...]", "list", {"len": 100}, ["0", ["99", "int", {}]], ["1", ["100", "int", {}]], ["2", ["101", "int", {}]], ["97", ["196", "int", {}]], ["98", ["197", "int", {}]], ["99", ["198", "int", {}]]]}, "256": ["3", "int", {}], "131": {"2": ["", -2, {}], "0": ["", -2, {}], "3": ["", -2, {}], "1": ["", -2, {}]}, "269": ["2", "int", {}], "486": {"2": ["ZeroDivisionError: division by zero", -1, {}], "0": ["ZeroDivisionError: division by zero", -1, {}], "3": ["1.0", "float", {}], "1": ["1.0", "float", {}]}, "343": ["", -2, {}], "405": {"2": ["[[], [1, 2]]", "list", {"len": 2}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}, ["0", ["1", "int", {}]], ["1", ["2", "int", {}]]]]], "0": ["[]", "list", {"len": 0}], "1": ["[[]]", "list", {"len": 1}, ["0", ["[]", "list", {"len": 0}]]], "3": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 97}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}, ["0", ["1", "int", {}]], ["1", ["2", "int", {}]]]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}, ["0", ["2", "int", {}]], ["1", ["3", "int", {}]], ["2", ["4", "int", {}]], ["3", ["5", "int", {}]]]], ["94", ["[94, 95, 96, 97, 98, 99, ...]", "list", {"len": 188}, ["0", ["94", "int", {}]], ["1", ["95", "int", {}]], ["2", ["96", "int", {}]], ["185", ["279", "int", {}]], ["186", ["280", "int", {}]], ["187", ["281", "int", {}]]]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list", {"len": 190}, ["0", ["95", "int", {}]], ["1", ["96", "int", {}]], ["2", ["97", "int", {}]], ["187", ["282", "int", {}]], ["188", ["283", "int", {}]], ["189", ["284", "int", {}]]]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}, ["0", ["96", "int", {}]], ["1", ["97", "int", {}]], ["2", ["98", "int", {}]], ["189", ["285", "int", {}]], ["190", ["286", "int", {}]], ["191", ["287", "int", {}]]]]], "4": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}, ["0", ["1", "int", {}]], ["1", ["2", "int", {}]]]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}, ["0", ["2", "int", {}]], ["1", ["3", "int", {}]], ["2", ["4", "int", {}]], ["3", ["5", "int", {}]]]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list", {"len": 190}, ["0", ["95", "int", {}]], ["1", ["96", "int", {}]], ["2", ["97", "int", {}]], ["187", ["282", "int", {}]], ["188", ["283", "int", {}]], ["189", ["284", "int", {}]]]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}, ["0", ["96", "int", {}]], ["1", ["97", "int", {}]], ["2", ["98", "int", {}]], ["189", ["285", "int", {}]], ["190", ["286", "int", {}]], ["191", ["287", "int", {}]]]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}, ["0", ["97", "int", {}]], ["1", ["98", "int", {}]], ["2", ["99", "int", {}]], ["191", ["288", "int", {}]], ["192", ["289", "int", {}]], ["193", ["290", "int", {}]]]]], "5": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}, ["0", ["1", "int", {}]], ["1", ["2", "int", {}]]]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}, ["0", ["2", "int", {}]], ["1", ["3", "int", {}]], ["2", ["4", "int", {}]], ["3", ["5", "int", {}]]]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}, ["0", ["96", "int", {}]], ["1", ["97", "int", {}]], ["2", ["98", "int", {}]], ["189", ["285", "int", {}]], ["190", ["286", "int", {}]], ["191", ["287", "int", {}]]]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}, ["0", ["97", "int", {}]], ["1", ["98", "int", {}]], ["2", ["99", "int", {}]], ["191", ["288", "int", {}]], ["192", ["289", "int", {}]], ["193", ["290", "int", {}]]]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 196}, ["0", ["98", "int", {}]], ["1", ["99", "int", {}]], ["2", ["100", "int", {}]], ["193", ["291", "int", {}]], ["194", ["292", "int", {}]], ["195", ["293", "int", {}]]]]]}, "314": ["<function factorial at 0xABC>", "function", {}, ["__wrapped__", ["<function factorial at 0xABC>", "function", {}]]], "128": {"2": ["", -2, {}], "0": ["", -2, {}], "1": ["", -2, {}], "3": ["", -2, {}], "4": ["", -2, {}], "5": ["", -2, {}]}, "234": ["<tests.golden_script.MyClass object at 0xABC>", "MyClass", {}], "45": ["", -2, {}], "441": ["<class 'tests.golden_script.SlotClass'>", "type", {}, ["__doc__", ["None", "NoneType", {}]], ["__init__", ["<function SlotClass.__init__ at 0xABC>", "function", {}]], ["__module__", ["'tests.golden_script'", "str", {"len": 19}]], ["__slots__", ["('slot1',)", "tuple", {"len": 1}, ["0", ["'slot1'", "str", {"len": 5}]]]], ["slot1", ["<member 'slot1' of 'SlotClass' objects>", "member_descriptor", {}]]], "57": ["", -2, {}], "141": ["", -2, {}], "332": ["<class 'tests.golden_script.MyClass'>", "type", {}, ["__add__", ["<function MyClass.__add__ at 0xABC>", "function", {}, ["__wrapped__", ["<function MyClass.__add__ at 0xABC>", "function", {}]]]], ["__dict__", ["<attribute '__dict__' of 'MyClass' objects>", "getset_descriptor", {}]], ["__doc__", ["None", "NoneType", {}]], ["__enter__", ["<function MyClass.__enter__ at 0xABC>", "function", {}, ["__wrapped__", ["<function MyClass.__enter__ at 0xABC>", "function", {}]]]], ["__exit__", ["<function MyClass.__exit__ at 0xABC>", "function", {}, ["__wrapped__", ["<function MyClass.__exit__ at 0xABC>", "function", {}]]]], ["__module__", ["'tests.golden_script'", "str", {"len": 19}]], ["__weakref__", ["<attribute '__weakref__' of 'MyClass' objects>", "getset_descriptor", {}]]], "163": ["True", "bool", {}], "272": ["(1, 2)", "tuple", {"len": 2}, ["0", ["1", "int", {}]], ["1", ["2", "int", {}]]], "327": {"2": ["", -2, {}], "0": ["", -2, {}]}, "61": ["", -2, {}], "221": {"2": ["None", "NoneType", {}], "0": ["None", "NoneType", {}], "1": ["None", "NoneType", {}], "3": ["None", "NoneType", {}], "4": ["None", "NoneType", {}], "5": ["None", "NoneType", {}]}, "424": {"2": {"2": ["2", "int", {}], "0": ["2", "int", {}], "1": ["2", "int", {}], "3": ["2", "int", {}], "4": ["2", "int", {}], "5": ["2", "int", {}]}, "0": {"2": ["0", "int", {}], "0": ["0", "int", {}], "1": ["0", "int", {}], "3": ["0", "int", {}], "4": ["0", "int", {}], "5": ["0", "int", {}]}, "1": {"2": ["1", "int", {}], "0": ["1", "int", {}], "1": ["1", "int", {}], "3": ["1", "int", {}], "4": ["1", "int", {}], "5": ["1", "int", {}]}, "3": {"2": ["97", "int", {}], "0": ["97", "int", {}], "1": ["97", "int", {}], "3": ["97", "int", {}], "4": ["97", "int", {}], "5": ["97", "int", {}]}, "4": {"2": ["98", "int", {}], "0": ["98", "int", {}], "1": ["98", "int", {}], "3": ["98", "int", {}], "4": ["98", "int", {}], "5": ["98", "int", {}]}, "5": {"2": ["99", "int", {}], "0": ["99", "int", {}], "1": ["99", "int", {}], "3": ["99", "int", {}], "4": ["99", "int", {}], "5": ["99", "int", {}]}}, "415": {"1": {"0": ["[[], [1]]", "list", {"len": 2}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1]", "list", {"len": 1}]]], "1": ["[[], [1, 2]]", "list", {"len": 2}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]]]}, "2": {"2": ["[[], [1, 2], [2, 3, 4]]", "list", {"len": 3}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4]", "list", {"len": 3}]]], "0": ["[[], [1, 2], [2]]", "list", {"len": 3}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2]", "list", {"len": 1}]]], "3": ["[[], [1, 2], [2, 3, 4, 5]]", "list", {"len": 3}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]]], "1": ["[[], [1, 2], [2, 3]]", "list", {"len": 3}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3]", "list", {"len": 2}]]]}, "3": {"2": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list", {"len": 190}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99]", "list", {"len": 3}]]], "0": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list", {"len": 190}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97]", "list", {"len": 1}]]], "1": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list", {"len": 190}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98]", "list", {"len": 2}]]], "3": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list", {"len": 190}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 192}]]], "4": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list", {"len": 190}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 193}]]], "5": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list", {"len": 190}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]]]}, "4": {"2": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100]", "list", {"len": 3}]]], "0": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98]", "list", {"len": 1}]]], "1": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99]", "list", {"len": 2}]]], "3": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 194}]]], "4": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 195}]]], "5": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 196}]]]}, "5": {"2": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 100}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 196}]], ["99", ["[99, 100, 101]", "list", {"len": 3}]]], "0": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 100}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 196}]], ["99", ["[99]", "list", {"len": 1}]]], "1": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 100}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 196}]], ["99", ["[99, 100]", "list", {"len": 2}]]], "3": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 100}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 196}]], ["99", ["[99, 100, 101, 102, 103, 104, ...]", "list", {"len": 196}]]], "4": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 100}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 196}]], ["99", ["[99, 100, 101, 102, 103, 104, ...]", "list", {"len": 197}]]], "5": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 100}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 196}]], ["99", ["[99, 100, 101, 102, 103, 104, ...]", "list", {"len": 198}]]]}}, "482": {"1": {"0": ["0", "int", {}], "1": ["1", "int", {}]}, "2": {"2": ["2", "int", {}], "0": ["0", "int", {}], "3": ["3", "int", {}], "1": ["1", "int", {}]}, "3": {"2": ["2", "int", {}], "0": ["0", "int", {}], "1": ["1", "int", {}], "3": ["191", "int", {}], "4": ["192", "int", {}], "5": ["193", "int", {}]}, "4": {"2": ["2", "int", {}], "0": ["0", "int", {}], "1": ["1", "int", {}], "3": ["193", "int", {}], "4": ["194", "int", {}], "5": ["195", "int", {}]}, "5": {"2": ["2", "int", {}], "0": ["0", "int", {}], "1": ["1", "int", {}], "3": ["195", "int", {}], "4": ["196", "int", {}], "5": ["197", "int", {}]}}, "346": {"0": ["0", "int", {}]}, "48": ["", -2, {}], "56": ["", -2, {}], "358": ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 1000}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["997", ["997", "int", {}]], ["998", ["998", "int", {}]], ["999", ["999", "int", {}]]], "54": ["", -2, {}], "328": {"3": ["3", "int", {}], "1": ["1", "int", {}]}, "347": ["", -2, {}], "322": {"1": {"0": ["None", "NoneType", {}], "1": ["None", "NoneType", {}]}, "2": {"2": ["None", "NoneType", {}], "0": ["None", "NoneType", {}], "3": ["None", "NoneType", {}], "1": ["None", "NoneType", {}]}, "3": {"2": ["None", "NoneType", {}], "0": ["None", "NoneType", {}], "1": ["None", "NoneType", {}], "3": ["None", "NoneType", {}], "4": ["None", "NoneType", {}], "5": ["None", "NoneType", {}]}, "4": {"2": ["None", "NoneType", {}], "0": ["None", "NoneType", {}], "1": ["None", "NoneType", {}], "3": ["None", "NoneType", {}], "4": ["None", "NoneType", {}], "5": ["None", "NoneType", {}]}, "5": {"2": ["None", "NoneType", {}], "0": ["None", "NoneType", {}], "1": ["None", "NoneType", {}], "3": ["None", "NoneType", {}], "4": ["None", "NoneType", {}], "5": ["None", "NoneType", {}]}}, "252": ["[[0, 1, 2, 3, 4, 5, ...], 'hello', {'kwarg1': {'key': 'value'}}]", "list", {"len": 3}, ["0", ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 1000}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["997", ["997", "int", {}]], ["998", ["998", "int", {}]], ["999", ["999", "int", {}]]]], ["1", ["'hello'", "str", {"len": 5}]], ["2", ["{'kwarg1': {'key': 'value'}}", "dict", {"len": 1}, ["'kwarg1'", ["{'key': 'value'}", "dict", {"len": 1}, ["'key'", ["'value'", "str", {"len": 5}]]]]]]], "527": {"1": {"0": ["[[], []]", "list", {"len": 2}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[]", "list", {"len": 0}]]], "1": ["[[], [1]]", "list", {"len": 2}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1]", "list", {"len": 1}]]]}, "2": {"2": ["[[], [1, 2], [2, 3]]", "list", {"len": 3}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3]", "list", {"len": 2}]]], "0": ["[[], [1, 2], []]", "list", {"len": 3}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[]", "list", {"len": 0}]]], "3": ["[[], [1, 2], [2, 3, 4]]", "list", {"len": 3}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4]", "list", {"len": 3}]]], "1": ["[[], [1, 2], [2]]", "list", {"len": 3}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2]", "list", {"len": 1}]]]}, "3": {"2": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list", {"len": 190}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98]", "list", {"len": 2}]]], "0": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list", {"len": 190}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[]", "list", {"len": 0}]]], "1": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list", {"len": 190}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97]", "list", {"len": 1}]]], "3": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list", {"len": 190}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 191}]]], "4": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list", {"len": 190}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 192}]]], "5": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list", {"len": 190}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 193}]]]}, "4": {"2": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99]", "list", {"len": 2}]]], "0": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[]", "list", {"len": 0}]]], "1": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98]", "list", {"len": 1}]]], "3": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 193}]]], "4": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 194}]]], "5": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 195}]]]}, "5": {"2": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 100}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 196}]], ["99", ["[99, 100]", "list", {"len": 2}]]], "0": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 100}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 196}]], ["99", ["[]", "list", {"len": 0}]]], "1": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 100}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 196}]], ["99", ["[99]", "list", {"len": 1}]]], "3": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 100}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 196}]], ["99", ["[99, 100, 101, 102, 103, 104, ...]", "list", {"len": 195}]]], "4": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 100}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 196}]], ["99", ["[99, 100, 101, 102, 103, 104, ...]", "list", {"len": 196}]]], "5": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 100}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 196}]], ["99", ["[99, 100, 101, 102, 103, 104, ...]", "list", {"len": 197}]]]}}, "448": ["range(0, 1000)", "range", {"len": 1000}], "250": ["[[0, 1, 2, 3, 4, 5, ...], 'hello', {'kwarg1': {'key': 'value'}}]", "list", {"len": 3, "inner_calls": ["test_id_9"]}, ["0", ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 1000}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["997", ["997", "int", {}]], ["998", ["998", "int", {}]], ["999", ["999", "int", {}]]]], ["1", ["'hello'", "str", {"len": 5}]], ["2", ["{'kwarg1': {'key': 'value'}}", "dict", {"len": 1}, ["'kwarg1'", ["{'key': 'value'}", "dict", {"len": 1}, ["'key'", ["'value'", "str", {"len": 5}]]]]]]], "417": {"3": ["11.0", "float", {}], "1": ["11.0", "float", {}]}, "137": ["None", "NoneType", {}], "73": ["", -2, {}], "59": ["", -2, {}], "253": ["[1, 2, {'k': 23}]", "list", {"len": 3, "inner_calls": ["test_id_10"]}, ["0", ["1", "int", {}]], ["1", ["2", "int", {}]], ["2", ["{'k': 23}", "dict", {"len": 1}, ["'k'", ["23", "int", {}]]]]], "439": ["range(0, 1)", "range", {"len": 1}], "213": ["6", "int", {"inner_calls": ["test_id_2"]}], "247": ["<tests.golden_script.MyClass object at 0xABC>", "MyClass", {}, ["list", ["[[0, 1, 2, 3, 4, 5, ...], [1, 2, 3, 4, 5, 6, ...], [2, 3, 4, 5, 6, 7, ...], [3, 4, 5, 6, 7, 8, ...], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 100}, ["0", ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 100}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["97", ["97", "int", {}]], ["98", ["98", "int", {}]], ["99", ["99", "int", {}]]]], ["1", ["[1, 2, 3, 4, 5, 6, ...]", "list", {"len": 100}, ["0", ["1", "int", {}]], ["1", ["2", "int", {}]], ["2", ["3", "int", {}]], ["97", ["98", "int", {}]], ["98", ["99", "int", {}]], ["99", ["100", "int", {}]]]], ["2", ["[2, 3, 4, 5, 6, 7, ...]", "list", {"len": 100}, ["0", ["2", "int", {}]], ["1", ["3", "int", {}]], ["2", ["4", "int", {}]], ["97", ["99", "int", {}]], ["98", ["100", "int", {}]], ["99", ["101", "int", {}]]]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 100}, ["0", ["97", "int", {}]], ["1", ["98", "int", {}]], ["2", ["99", "int", {}]], ["97", ["194", "int", {}]], ["98", ["195", "int", {}]], ["99", ["196", "int", {}]]]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 100}, ["0", ["98", "int", {}]], ["1", ["99", "int", {}]], ["2", ["100", "int", {}]], ["97", ["195", "int", {}]], ["98", ["196", "int", {}]], ["99", ["197", "int", {}]]]], ["99", ["[99, 100, 101, 102, 103, 104, ...]", "list", {"len": 100}, ["0", ["99", "int", {}]], ["1", ["100", "int", {}]], ["2", ["101", "int", {}]], ["97", ["196", "int", {}]], ["98", ["197", "int", {}]], ["99", ["198", "int", {}]]]]]]], "275": ["ValueError()", "ValueError", {}], "534": {"2": ["0", "int", {}], "0": ["0", "int", {}], "3": ["1", "int", {}], "1": ["1", "int", {}]}, "432": ["range(0, 4)", "range", {"len": 4}], "130": ["range(0, 6)", "range", {"len": 6}], "292": ["<generator object gen at 0xABC>", "generator", {}], "413": {"1": {"0": ["1", "int", {}], "1": ["2", "int", {}]}, "2": {"2": ["4", "int", {}], "0": ["2", "int", {}], "3": ["5", "int", {}], "1": ["3", "int", {}]}, "3": {"2": ["99", "int", {}], "0": ["97", "int", {}], "1": ["98", "int", {}], "3": ["288", "int", {}], "4": ["289", "int", {}], "5": ["290", "int", {}]}, "4": {"2": ["100", "int", {}], "0": ["98", "int", {}], "1": ["99", "int", {}], "3": ["291", "int", {}], "4": ["292", "int", {}], "5": ["293", "int", {}]}, "5": {"2": ["101", "int", {}], "0": ["99", "int", {}], "1": ["100", "int", {}], "3": ["294", "int", {}], "4": ["295", "int", {}], "5": ["296", "int", {}]}}, "55": ["", -2, {}], "134": ["<tests.golden_script.MyClass object at 0xABC>", "MyClass", {"inner_calls": ["test_id_5"]}], "352": ["<tests.golden_script.SlotClass object at 0xABC>", "SlotClass", {}, ["slot1", ["3", "int", {}]]], "49": ["", -2, {}], "435": ["range(0, 4)", "range", {"len": 4}], "67": ["", -2, {}], "325": {"3": ["None", "NoneType", {}], "1": ["None", "NoneType", {}]}, "44": ["", -2, {}], "342": {"2": ["2", "int", {}], "0": ["0", "int", {}], "3": ["3", "int", {}], "1": ["1", "int", {}]}, "261": ["6", "int", {}], "345": {"0": ["0", "int", {}]}, "50": ["", -2, {}], "290": ["<function gen at 0xABC>", "function", {}, ["__wrapped__", ["<function gen at 0xABC>", "function", {}]]], "52": ["", -2, {}], "317": {"2": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "0": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "1": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "3": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "4": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "5": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}]}, "224": {"1": {"0": ["", -2, {}], "1": ["", -2, {}]}, "2": {"2": ["", -2, {}], "0": ["", -2, {}], "3": ["", -2, {}], "1": ["", -2, {}]}, "3": {"2": ["", -2, {}], "0": ["", -2, {}], "1": ["", -2, {}], "3": ["", -2, {}], "4": ["", -2, {}], "5": ["", -2, {}]}, "4": {"2": ["", -2, {}], "0": ["", -2, {}], "1": ["", -2, {}], "3": ["", -2, {}], "4": ["", -2, {}], "5": ["", -2, {}]}, "5": {"2": ["", -2, {}], "0": ["", -2, {}], "1": ["", -2, {}], "3": ["", -2, {}], "4": ["", -2, {}], "5": ["", -2, {}]}}, "286": ["4", "int", {}], "280": ["", -2, {}], "162": {"0": ["", -2, {}]}, "321": {"2": ["4", "int", {}], "0": ["0", "int", {}], "1": ["2", "int", {}], "3": ["194", "int", {}], "4": ["196", "int", {}], "5": ["198", "int", {}]}, "426": {"2": ["range(0, 100)", "range", {"len": 100}], "0": ["range(0, 100)", "range", {"len": 100}], "1": ["range(0, 100)", "range", {"len": 100}], "3": ["range(0, 100)", "range", {"len": 100}], "4": ["range(0, 100)", "range", {"len": 100}], "5": ["range(0, 100)", "range", {"len": 100}]}, "416": {"2": ["<function dummy at 0xABC>", "function", {}], "0": ["<function dummy at 0xABC>", "function", {}], "3": ["<function dummy at 0xABC>", "function", {}], "1": ["<function dummy at 0xABC>", "function", {}]}, "323": {"1": {"0": ["None", "NoneType", {}], "1": ["None", "NoneType", {}]}, "2": {"2": ["None", "NoneType", {}], "0": ["None", "NoneType", {}], "3": ["None", "NoneType", {}], "1": ["None", "NoneType", {}]}, "3": {"2": ["None", "NoneType", {}], "0": ["None", "NoneType", {}], "1": ["None", "NoneType", {}], "3": ["None", "NoneType", {}], "4": ["None", "NoneType", {}], "5": ["None", "NoneType", {}]}, "4": {"2": ["None", "NoneType", {}], "0": ["None", "NoneType", {}], "1": ["None", "NoneType", {}], "3": ["None", "NoneType", {}], "4": ["None", "NoneType", {}], "5": ["None", "NoneType", {}]}, "5": {"2": ["None", "NoneType", {}], "0": ["None", "NoneType", {}], "1": ["None", "NoneType", {}], "3": ["None", "NoneType", {}], "4": ["None", "NoneType", {}], "5": ["None", "NoneType", {}]}}, "294": ["<generator object gen at 0xABC>", "generator", {}], "51": ["", -2, {}], "480": {"1": {"0": ["1", "int", {}], "1": ["1", "int", {}]}, "2": {"2": ["2", "int", {}], "0": ["2", "int", {}], "3": ["2", "int", {}], "1": ["2", "int", {}]}, "3": {"2": ["97", "int", {}], "0": ["97", "int", {}], "1": ["97", "int", {}], "3": ["97", "int", {}], "4": ["97", "int", {}], "5": ["97", "int", {}]}, "4": {"2": ["98", "int", {}], "0": ["98", "int", {}], "1": ["98", "int", {}], "3": ["98", "int", {}], "4": ["98", "int", {}], "5": ["98", "int", {}]}, "5": {"2": ["99", "int", {}], "0": ["99", "int", {}], "1": ["99", "int", {}], "3": ["99", "int", {}], "4": ["99", "int", {}], "5": ["99", "int", {}]}}, "53": ["", -2, {"inner_calls": ["test_id_6", "test_id_7"]}], "145": ["True", "bool", {}], "62": ["", -2, {}], "66": ["", -2, {}], "47": ["", -2, {}], "240": ["", -2, {}], "242": ["<generator object main.<locals>.<genexpr> at 0xABC>", "generator", {}], "241": ["<function dummy at 0xABC>", "function", {}], "248": ["<function dummy at 0xABC>", "function", {}], "243": ["<function dummy at 0xABC>", "function", {}], "72": ["", -2, {}], "231": {"3": ["True", "bool", {}], "1": ["False", "bool", {}]}, "360": ["{'kwarg1': {'key': 'value'}}", "dict", {"len": 1}, ["'kwarg1'", ["{'key': 'value'}", "dict", {"len": 1}, ["'key'", ["'value'", "str", {"len": 5}]]]]], "335": {"2": ["", -2, {}], "0": ["", -2, {}], "1": ["", -2, {}], "3": ["", -2, {}], "4": ["", -2, {}], "5": ["", -2, {}]}, "70": ["", -2, {}], "138": ["None", "NoneType", {}], "166": ["True", "bool", {}], "154": ["True", "bool", {}], "122": ["True", "bool", {}], "353": ["<function complex_args at 0xABC>", "function", {}, ["__wrapped__", ["<function complex_args at 0xABC>", "function", {}]]], "362": ["<function complex_args at 0xABC>", "function", {}, ["__wrapped__", ["<function complex_args at 0xABC>", "function", {}]]], "546": {"2": ["2", "int", {}], "0": ["0", "int", {}], "3": ["3", "int", {}], "1": ["1", "int", {}]}, "71": ["", -2, {}], "293": ["<function use_gen_2 at 0xABC>", "function", {}, ["__wrapped__", ["<function use_gen_2 at 0xABC>", "function", {}]]], "370": ["'1 + 2'", "str", {"len": 5}], "143": ["True", "bool", {}], "245": ["<function dummy at 0xABC>", "function", {}], "160": ["", -2, {}], "127": {"2": ["", -2, {}], "0": ["", -2, {}], "1": ["", -2, {}], "3": ["", -2, {}], "4": ["", -2, {}], "5": ["", -2, {}]}, "265": ["<function dummy at 0xABC>", "function", {}], "144": ["True", "bool", {}], "282": ["8", "int", {}], "412": {"1": {"0": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "1": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}]}, "2": {"2": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "0": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "3": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "1": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}]}, "3": {"2": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "0": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "1": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "3": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "4": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "5": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}]}, "4": {"2": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "0": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "1": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "3": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "4": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "5": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}]}, "5": {"2": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "0": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "1": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "3": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "4": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "5": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}]}}, "60": ["", -2, {}], "334": {"2": {"2": ["4", "int", {}], "0": ["2", "int", {}], "1": ["3", "int", {}], "3": ["99", "int", {}], "4": ["100", "int", {}], "5": ["101", "int", {}]}, "0": {"2": ["2", "int", {}], "0": ["0", "int", {}], "1": ["1", "int", {}], "3": ["97", "int", {}], "4": ["98", "int", {}], "5": ["99", "int", {}]}, "1": {"2": ["3", "int", {}], "0": ["1", "int", {}], "1": ["2", "int", {}], "3": ["98", "int", {}], "4": ["99", "int", {}], "5": ["100", "int", {}]}, "3": {"2": ["99", "int", {}], "0": ["97", "int", {}], "1": ["98", "int", {}], "3": ["194", "int", {}], "4": ["195", "int", {}], "5": ["196", "int", {}]}, "4": {"2": ["100", "int", {}], "0": ["98", "int", {}], "1": ["99", "int", {}], "3": ["195", "int", {}], "4": ["196", "int", {}], "5": ["197", "int", {}]}, "5": {"2": ["101", "int", {}], "0": ["99", "int", {}], "1": ["100", "int", {}], "3": ["196", "int", {}], "4": ["197", "int", {}], "5": ["198", "int", {}]}}, "156": ["ValueError", -1, {}], "444": ["range(0, 1000)", "range", {"len": 1000}], "58": ["", -2, {}], "63": ["", -2, {}], "232": {"3": ["", -2, {}]}, "46": ["", -2, {}], "136": ["[[0, 1, 2, 3, 4, 5, ...], [1, 2, 3, 4, 5, 6, ...], [2, 3, 4, 5, 6, 7, ...], [3, 4, 5, 6, 7, 8, ...], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 100}, ["0", ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 100}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["97", ["97", "int", {}]], ["98", ["98", "int", {}]], ["99", ["99", "int", {}]]]], ["1", ["[1, 2, 3, 4, 5, 6, ...]", "list", {"len": 100}, ["0", ["1", "int", {}]], ["1", ["2", "int", {}]], ["2", ["3", "int", {}]], ["97", ["98", "int", {}]], ["98", ["99", "int", {}]], ["99", ["100", "int", {}]]]], ["2", ["[2, 3, 4, 5, 6, 7, ...]", "list", {"len": 100}, ["0", ["2", "int", {}]], ["1", ["3", "int", {}]], ["2", ["4", "int", {}]], ["97", ["99", "int", {}]], ["98", ["100", "int", {}]], ["99", ["101", "int", {}]]]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 100}, ["0", ["97", "int", {}]], ["1", ["98", "int", {}]], ["2", ["99", "int", {}]], ["97", ["194", "int", {}]], ["98", ["195", "int", {}]], ["99", ["196", "int", {}]]]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 100}, ["0", ["98", "int", {}]], ["1", ["99", "int", {}]], ["2", ["100", "int", {}]], ["97", ["195", "int", {}]], ["98", ["196", "int", {}]], ["99", ["197", "int", {}]]]], ["99", ["[99, 100, 101, 102, 103, 104, ...]", "list", {"len": 100}, ["0", ["99", "int", {}]], ["1", ["100", "int", {}]], ["2", ["101", "int", {}]], ["97", ["196", "int", {}]], ["98", ["197", "int", {}]], ["99", ["198", "int", {}]]]]], "411": {"2": ["2", "int", {}], "0": ["0", "int", {}], "1": ["1", "int", {}], "3": ["97", "int", {}], "4": ["98", "int", {}], "5": ["99", "int", {}]}, "223": {"2": ["range(0, 4)", "range", {"len": 4}], "0": ["range(0, 0)", "range", {"len": 0}], "1": ["range(0, 2)", "range", {"len": 2}], "3": ["range(0, 194)", "range", {"len": 194}], "4": ["range(0, 196)", "range", {"len": 196}], "5": ["range(0, 198)", "range", {"len": 198}]}, "331": ["<class 'tests.golden_script.MyClass'>", "type", {}, ["__add__", ["<function MyClass.__add__ at 0xABC>", "function", {}, ["__wrapped__", ["<function MyClass.__add__ at 0xABC>", "function", {}]]]], ["__dict__", ["<attribute '__dict__' of 'MyClass' objects>", "getset_descriptor", {}]], ["__doc__", ["None", "NoneType", {}]], ["__enter__", ["<function MyClass.__enter__ at 0xABC>", "function", {}, ["__wrapped__", ["<function MyClass.__enter__ at 0xABC>", "function", {}]]]], ["__exit__", ["<function MyClass.__exit__ at 0xABC>", "function", {}, ["__wrapped__", ["<function MyClass.__exit__ at 0xABC>", "function", {}]]]], ["__module__", ["'tests.golden_script'", "str", {"len": 19}]], ["__weakref__", ["<attribute '__weakref__' of 'MyClass' objects>", "getset_descriptor", {}]]], "132": {"3": ["", -2, {}], "1": ["", -2, {}]}, "64": ["", -2, {}], "126": ["range(0, 100)", "range", {"len": 100}], "169": ["None", "NoneType", {"inner_calls": ["test_id_11"]}], "244": ["{0, 1, 2, 3}", "set", {"len": 4}, ["<0>", ["0", "int", {}]], ["<1>", ["1", "int", {}]], ["<2>", ["2", "int", {}]], ["<3>", ["3", "int", {}]]], "153": ["None", "NoneType", {}], "385": ["<function dummy at 0xABC>", "function", {}], "170": ["None", "NoneType", {"inner_calls": ["test_id_13"]}], "281": ["None", "NoneType", {}], "168": ["<generator object gen at 0xABC>", "generator", {}], "246": ["{0: 0}", "dict", {"len": 1}, ["0", ["0", "int", {}]]], "249": ["<tests.golden_script.SlotClass object at 0xABC>", "SlotClass", {"inner_calls": ["test_id_8"]}, ["slot1", ["3", "int", {}]]], "151": ["True", "bool", {}], "142": ["None", "NoneType", {}], "69": ["", -2, {}], "139": ["None", "NoneType", {}], "478": {"1": {"0": ["[]", "list", {"len": 0}], "1": ["[1]", "list", {"len": 1}, ["0", ["1", "int", {}]]]}, "2": {"2": ["[2, 3]", "list", {"len": 2}, ["0", ["2", "int", {}]], ["1", ["3", "int", {}]]], "0": ["[]", "list", {"len": 0}], "3": ["[2, 3, 4]", "list", {"len": 3}, ["0", ["2", "int", {}]], ["1", ["3", "int", {}]], ["2", ["4", "int", {}]]], "1": ["[2]", "list", {"len": 1}, ["0", ["2", "int", {}]]]}, "3": {"2": ["[97, 98]", "list", {"len": 2}, ["0", ["97", "int", {}]], ["1", ["98", "int", {}]]], "0": ["[]", "list", {"len": 0}], "1": ["[97]", "list", {"len": 1}, ["0", ["97", "int", {}]]], "3": ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 191}, ["0", ["97", "int", {}]], ["1", ["98", "int", {}]], ["2", ["99", "int", {}]], ["188", ["285", "int", {}]], ["189", ["286", "int", {}]], ["190", ["287", "int", {}]]], "4": ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 192}, ["0", ["97", "int", {}]], ["1", ["98", "int", {}]], ["2", ["99", "int", {}]], ["189", ["286", "int", {}]], ["190", ["287", "int", {}]], ["191", ["288", "int", {}]]], "5": ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 193}, ["0", ["97", "int", {}]], ["1", ["98", "int", {}]], ["2", ["99", "int", {}]], ["190", ["287", "int", {}]], ["191", ["288", "int", {}]], ["192", ["289", "int", {}]]]}, "4": {"2": ["[98, 99]", "list", {"len": 2}, ["0", ["98", "int", {}]], ["1", ["99", "int", {}]]], "0": ["[]", "list", {"len": 0}], "1": ["[98]", "list", {"len": 1}, ["0", ["98", "int", {}]]], "3": ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 193}, ["0", ["98", "int", {}]], ["1", ["99", "int", {}]], ["2", ["100", "int", {}]], ["190", ["288", "int", {}]], ["191", ["289", "int", {}]], ["192", ["290", "int", {}]]], "4": ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 194}, ["0", ["98", "int", {}]], ["1", ["99", "int", {}]], ["2", ["100", "int", {}]], ["191", ["289", "int", {}]], ["192", ["290", "int", {}]], ["193", ["291", "int", {}]]], "5": ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 195}, ["0", ["98", "int", {}]], ["1", ["99", "int", {}]], ["2", ["100", "int", {}]], ["192", ["290", "int", {}]], ["193", ["291", "int", {}]], ["194", ["292", "int", {}]]]}, "5": {"2": ["[99, 100]", "list", {"len": 2}, ["0", ["99", "int", {}]], ["1", ["100", "int", {}]]], "0": ["[]", "list", {"len": 0}], "1": ["[99]", "list", {"len": 1}, ["0", ["99", "int", {}]]], "3": ["[99, 100, 101, 102, 103, 104, ...]", "list", {"len": 195}, ["0", ["99", "int", {}]], ["1", ["100", "int", {}]], ["2", ["101", "int", {}]], ["192", ["291", "int", {}]], ["193", ["292", "int", {}]], ["194", ["293", "int", {}]]], "4": ["[99, 100, 101, 102, 103, 104, ...]", "list", {"len": 196}, ["0", ["99", "int", {}]], ["1", ["100", "int", {}]], ["2", ["101", "int", {}]], ["193", ["292", "int", {}]], ["194", ["293", "int", {}]], ["195", ["294", "int", {}]]], "5": ["[99, 100, 101, 102, 103, 104, ...]", "list", {"len": 197}, ["0", ["99", "int", {}]], ["1", ["100", "int", {}]], ["2", ["101", "int", {}]], ["194", ["293", "int", {}]], ["195", ["294", "int", {}]], ["196", ["295", "int", {}]]]}}, "65": ["", -2, {}], "337": ["range(0, 100)", "range", {"len": 100}]}, "type_names": ["MyClass", "NoneType", "SlotClass", "ValueError", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "member_descriptor", "method_descriptor", "range", "set", "str", "tuple", "type", "wrapper_descriptor"], "num_special_types": 11, "loop_iterations": {"343": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}, {"index": 2, "loops": {}}, {"index": 3, "loops": {}}], "347": [{"index": 0, "loops": {}}], "66": [{"index": 0, "loops": {}}], "47": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}, {"index": 2, "loops": {}}, {"index": 3, "loops": {}}], "240": [{"index": 0, "loops": {"335": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}, {"index": 2, "loops": {}}, {"index": 97, "loops": {}}, {"index": 98, "loops": {}}, {"index": 99, "loops": {}}]}}, {"index": 1, "loops": {"335": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}, {"index": 2, "loops": {}}, {"index": 97, "loops": {}}, {"index": 98, "loops": {}}, {"index": 99, "loops": {}}]}}, {"index": 2, "loops": {"335": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}, {"index": 2, "loops": {}}, {"index": 97, "loops": {}}, {"index": 98, "loops": {}}, {"index": 99, "loops": {}}]}}, {"index": 97, "loops": {"335": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}, {"index": 2, "loops": {}}, {"index": 97, "loops": {}}, {"index": 98, "loops": {}}, {"index": 99, "loops": {}}]}}, {"index": 98, "loops": {"335": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}, {"index": 2, "loops": {}}, {"index": 97, "loops": {}}, {"index": 98, "loops": {}}, {"index": 99, "loops": {}}]}}, {"index": 99, "loops": {"335": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}, {"index": 2, "loops": {}}, {"index": 97, "loops": {}}, {"index": 98, "loops": {}}, {"index": 99, "loops": {}}]}}], "46": [{"index": 0, "loops": {}}, {"index": 1, "loops": {"128": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}]}}, {"index": 2, "loops": {"128": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}, {"index": 2, "loops": {}}, {"index": 3, "loops": {}}]}}, {"index": 97, "loops": {"128": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}, {"index": 2, "loops": {}}, {"index": 191, "loops": {}}, {"index": 192, "loops": {}}, {"index": 193, "loops": {}}]}}, {"index": 98, "loops": {"128": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}, {"index": 2, "loops": {}}, {"index": 193, "loops": {}}, {"index": 194, "loops": {}}, {"index": 195, "loops": {}}]}}, {"index": 99, "loops": {"128": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}, {"index": 2, "loops": {}}, {"index": 195, "loops": {}}, {"index": 196, "loops": {}}, {"index": 197, "loops": {}}]}}]}}, "arguments": [], "exception": null, "traceback": null, "return_value": "None"}, {"function": {"lineno": 8, "name": "factorial", "data": {"loop_ranges": [], "node_loops": {}, "node_ranges": [{"end": 49, "start": 18, "classes": ["stmt"], "depth": 2, "tree_index": 19}, {"end": 81, "start": 54, "classes": ["stmt"], "depth": 2, "tree_index": 20}, {"end": 31, "start": 25, "classes": [], "depth": 3, "tree_index": 78}, {"end": 49, "start": 41, "classes": ["stmt"], "depth": 3, "tree_index": 79}, {"end": 81, "start": 61, "classes": [], "depth": 3, "tree_index": 80}, {"end": 26, "start": 25, "classes": [], "depth": 4, "tree_index": 173}, {"end": 62, "start": 61, "classes": [], "depth": 4, "tree_index": 177}, {"end": 81, "start": 65, "classes": [], "depth": 4, "tree_index": 179}, {"end": 74, "start": 65, "classes": [], "depth": 5, "tree_index": 298}, {"end": 80, "start": 75, "classes": [], "depth": 5, "tree_index": 299}, {"end": 76, "start": 75, "classes": [], "depth": 6, "tree_index": 395}]}, "html_body": "<span data-index=\"4\" class=\"stmt\">@<span data-index=\"21\" class=\"\">eye</span>\ndef factorial(n):\n<span data-index=\"19\" class=\"stmt\">    if <span data-index=\"78\" class=\"\"><span data-index=\"173\" class=\"\">n</span> &lt;= 1</span>:\n        <span data-index=\"79\" class=\"stmt\">return 1</span></span>\n    <span data-index=\"20\" class=\"stmt\">return <span data-index=\"80\" class=\"\"><span data-index=\"177\" class=\"\">n</span> * <span data-index=\"179\" class=\"\"><span data-index=\"298\" class=\"\">factorial</span>(<span data-index=\"299\" class=\"\"><span data-index=\"395\" class=\"\">n</span> - 1</span>)</span></span></span></span>\n"}, "data": {"node_values": {"20": ["", -2, {}], "179": ["2", "int", {"inner_calls": ["test_id_3"]}], "298": ["<function factorial at 0xABC>", "function", {}, ["__wrapped__", ["<function factorial at 0xABC>", "function", {}]]], "173": ["3", "int", {}], "19": ["", -2, {}], "78": ["False", "bool", {}], "177": ["3", "int", {}], "80": ["6", "int", {}], "395": ["3", "int", {}], "299": ["2", "int", {}]}, "type_names": ["MyClass", "NoneType", "SlotClass", "ValueError", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "member_descriptor", "method_descriptor", "range", "set", "str", "tuple", "type", "wrapper_descriptor"], "num_special_types": 11, "loop_iterations": {}}, "arguments": [["n", "3"]], "exception": null, "traceback": null, "return_value": "6"}, {"function": {"lineno": 8, "name": "factorial", "data": {"loop_ranges": [], "node_loops": {}, "node_ranges": [{"end": 49, "start": 18, "classes": ["stmt"], "depth": 2, "tree_index": 19}, {"end": 81, "start": 54, "classes": ["stmt"], "depth": 2, "tree_index": 20}, {"end": 31, "start": 25, "classes": [], "depth": 3, "tree_index": 78}, {"end": 49, "start": 41, "classes": ["stmt"], "depth": 3, "tree_index": 79}, {"end": 81, "start": 61, "classes": [], "depth": 3, "tree_index": 80}, {"end": 26, "start": 25, "classes": [], "depth": 4, "tree_index": 173}, {"end": 62, "start": 61, "classes": [], "depth": 4, "tree_index": 177}, {"end": 81, "start": 65, "classes": [], "depth": 4, "tree_index": 179}, {"end": 74, "start": 65, "classes": [], "depth": 5, "tree_index": 298}, {"end": 80, "start": 75, "classes": [], "depth": 5, "tree_index": 299}, {"end": 76, "start": 75, "classes": [], "depth": 6, "tree_index": 395}]}, "html_body": "<span data-index=\"4\" class=\"stmt\">@<span data-index=\"21\" class=\"\">eye</span>\ndef factorial(n):\n<span data-index=\"19\" class=\"stmt\">    if <span data-index=\"78\" class=\"\"><span data-index=\"173\" class=\"\">n</span> &lt;= 1</span>:\n        <span data-index=\"79\" class=\"stmt\">return 1</span></span>\n    <span data-index=\"20\" class=\"stmt\">return <span data-index=\"80\" class=\"\"><span data-index=\"177\" class=\"\">n</span> * <span data-index=\"179\" class=\"\"><span data-index=\"298\" class=\"\">factorial</span>(<span data-index=\"299\" class=\"\"><span data-index=\"395\" class=\"\">n</span> - 1</span>)</span></span></span></span>\n"}, "data": {"node_values": {"20": ["", -2, {}], "179": ["1", "int", {"inner_calls": ["test_id_4"]}], "298": ["<function factorial at 0xABC>", "function", {}, ["__wrapped__", ["<function factorial at 0xABC>", "function", {}]]], "173": ["2", "int", {}], "19": ["", -2, {}], "78": ["False", "bool", {}], "177": ["2", "int", {}], "80": ["2", "int", {}], "395": ["2", "int", {}], "299": ["1", "int", {}]}, "type_names": ["MyClass", "NoneType", "SlotClass", "ValueError", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "member_descriptor", "method_descriptor", "range", "set", "str", "tuple", "type", "wrapper_descriptor"], "num_special_types": 11, "loop_iterations": {}}, "arguments": [["n", "2"]], "exception": null, "traceback": null, "return_value": "2"}, {"function": {"lineno": 8, "name": "factorial", "data": {"loop_ranges": [], "node_loops": {}, "node_ranges": [{"end": 49, "start": 18, "classes": ["stmt"], "depth": 2, "tree_index": 19}, {"end": 81, "start": 54, "classes": ["stmt"], "depth": 2, "tree_index": 20}, {"end": 31, "start": 25, "classes": [], "depth": 3, "tree_index": 78}, {"end": 49, "start": 41, "classes": ["stmt"], "depth": 3, "tree_index": 79}, {"end": 81, "start": 61, "classes": [], "depth": 3, "tree_index": 80}, {"end": 26, "start": 25, "classes": [], "depth": 4, "tree_index": 173}, {"end": 62, "start": 61, "classes": [], "depth": 4, "tree_index": 177}, {"end": 81, "start": 65, "classes": [], "depth": 4, "tree_index": 179}, {"end": 74, "start": 65, "classes": [], "depth": 5, "tree_index": 298}, {"end": 80, "start": 75, "classes": [], "depth": 5, "tree_index": 299}, {"end": 76, "start": 75, "classes": [], "depth": 6, "tree_index": 395}]}, "html_body": "<span data-index=\"4\" class=\"stmt\">@<span data-index=\"21\" class=\"\">eye</span>\ndef factorial(n):\n<span data-index=\"19\" class=\"stmt\">    if <span data-index=\"78\" class=\"\"><span data-index=\"173\" class=\"\">n</span> &lt;= 1</span>:\n        <span data-index=\"79\" class=\"stmt\">return 1</span></span>\n    <span data-index=\"20\" class=\"stmt\">return <span data-index=\"80\" class=\"\"><span data-index=\"177\" class=\"\">n</span> * <span data-index=\"179\" class=\"\"><span data-index=\"298\" class=\"\">factorial</span>(<span data-index=\"299\" class=\"\"><span data-index=\"395\" class=\"\">n</span> - 1</span>)</span></span></span></span>\n"}, "data": {"node_values": {"19": ["", -2, {}], "78": ["True", "bool", {}], "79": ["", -2, {}], "173": ["1", "int", {}]}, "type_names": ["MyClass", "NoneType", "SlotClass", "ValueError", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "member_descriptor", "method_descriptor", "range", "set", "str", "tuple", "type", "wrapper_descriptor"], "num_special_types": 11, "loop_iterations": {}}, "arguments": [["n", "1"]], "exception": null, "traceback": null, "return_value": "1"}, {"function": {"lineno": 50, "name": "MyClass.__add__", "data": {"loop_ranges": [], "node_loops": {}, "node_ranges": [{"end": 46, "start": 34, "classes": ["stmt"], "depth": 3, "tree_index": 114}, {"end": 46, "start": 41, "classes": [], "depth": 4, "tree_index": 204}]}, "html_body": "<span data-index=\"40\" class=\"stmt\">    @<span data-index=\"115\" class=\"\">eye</span>\n    def __add__(self, other):\n        <span data-index=\"114\" class=\"stmt\">return <span data-index=\"204\" class=\"\">other</span></span></span>\n"}, "data": {"node_values": {"114": ["", -2, {}], "204": ["<tests.golden_script.MyClass object at 0xABC>", "MyClass", {}]}, "type_names": ["MyClass", "NoneType", "SlotClass", "ValueError", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "member_descriptor", "method_descriptor", "range", "set", "str", "tuple", "type", "wrapper_descriptor"], "num_special_types": 11, "loop_iterations": {}}, "arguments": [["self", "<tests.golden_script.MyClass object at 0xABC>"], ["other", "<tests.golden_script.MyClass object at 0xABC>"]], "exception": null, "traceback": null, "return_value": "<tests.golden_script.MyClass object at 0xABC>"}, {"function": {"lineno": 54, "name": "MyClass.__enter__", "data": {"loop_ranges": [], "node_loops": {}, "node_ranges": [{"end": 33, "start": 29, "classes": ["stmt"], "depth": 3, "tree_index": 117}]}, "html_body": "<span data-index=\"41\" class=\"stmt\">    @<span data-index=\"118\" class=\"\">eye</span>\n    def __enter__(self):\n        <span data-index=\"117\" class=\"stmt\">pass</span></span>\n"}, "data": {"node_values": {"117": ["", -2, {}]}, "type_names": ["MyClass", "NoneType", "SlotClass", "ValueError", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "member_descriptor", "method_descriptor", "range", "set", "str", "tuple", "type", "wrapper_descriptor"], "num_special_types": 11, "loop_iterations": {}}, "arguments": [["self", "<tests.golden_script.MyClass object at 0xABC>"]], "exception": null, "traceback": null, "return_value": "None"}, {"function": {"lineno": 58, "name": "MyClass.__exit__", "data": {"loop_ranges": [], "node_loops": {}, "node_ranges": [{"end": 59, "start": 55, "classes": ["stmt"], "depth": 3, "tree_index": 120}]}, "html_body": "<span data-index=\"42\" class=\"stmt\">    @<span data-index=\"121\" class=\"\">eye</span>\n    def __exit__(self, exc_type, exc_val, exc_tb):\n        <span data-index=\"120\" class=\"stmt\">pass</span></span>\n"}, "data": {"node_values": {"120": ["", -2, {}]}, "type_names": ["MyClass", "NoneType", "SlotClass", "ValueError", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "member_descriptor", "method_descriptor", "range", "set", "str", "tuple", "type", "wrapper_descriptor"], "num_special_types": 11, "loop_iterations": {}}, "arguments": [["self", "<tests.golden_script.MyClass object at 0xABC>"], ["exc_type", "None"], ["exc_val", "None"], ["exc_tb", "None"]], "exception": null, "traceback": null, "return_value": "None"}, {"function": {"lineno": 50, "name": "MyClass.__add__", "data": {"loop_ranges": [], "node_loops": {}, "node_ranges": [{"end": 46, "start": 34, "classes": ["stmt"], "depth": 3, "tree_index": 114}, {"end": 46, "start": 41, "classes": [], "depth": 4, "tree_index": 204}]}, "html_body": "<span data-index=\"40\" class=\"stmt\">    @<span data-index=\"115\" class=\"\">eye</span>\n    def __add__(self, other):\n        <span data-index=\"114\" class=\"stmt\">return <span data-index=\"204\" class=\"\">other</span></span></span>\n"}, "data": {"node_values": {"114": ["", -2, {}], "204": ["<tests.golden_script.SlotClass object at 0xABC>", "SlotClass", {}, ["slot1", ["3", "int", {}]]]}, "type_names": ["MyClass", "NoneType", "SlotClass", "ValueError", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "member_descriptor", "method_descriptor", "range", "set", "str", "tuple", "type", "wrapper_descriptor"], "num_special_types": 11, "loop_iterations": {}}, "arguments": [["self", "<tests.golden_script.MyClass object at 0xABC>"], ["other", "<tests.golden_script.SlotClass object at 0xABC>"]], "exception": null, "traceback": null, "return_value": "<tests.golden_script.SlotClass object at 0xABC>"}, {"function": {"lineno": 26, "name": "complex_args", "data": {"loop_ranges": [], "node_loops": {}, "node_ranges": [{"end": 94, "start": 67, "classes": ["stmt"], "depth": 2, "tree_index": 28}, {"end": 94, "start": 74, "classes": [], "depth": 3, "tree_index": 96}, {"end": 79, "start": 75, "classes": [], "depth": 4, "tree_index": 186}, {"end": 85, "start": 81, "classes": [], "depth": 4, "tree_index": 187}, {"end": 93, "start": 87, "classes": [], "depth": 4, "tree_index": 188}]}, "html_body": "<span data-index=\"7\" class=\"stmt\">@<span data-index=\"29\" class=\"\">eye</span>\ndef complex_args(pos1, pos2, key1=3, key2=4, *args, **kwargs):\n    <span data-index=\"28\" class=\"stmt\">return <span data-index=\"96\" class=\"\">[<span data-index=\"186\" class=\"\">pos1</span>, <span data-index=\"187\" class=\"\">pos2</span>, <span data-index=\"188\" class=\"\">kwargs</span>]</span></span></span>\n"}, "data": {"node_values": {"186": ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 1000}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["997", ["997", "int", {}]], ["998", ["998", "int", {}]], ["999", ["999", "int", {}]]], "28": ["", -2, {}], "96": ["[[0, 1, 2, 3, 4, 5, ...], 'hello', {'kwarg1': {'key': 'value'}}]", "list", {"len": 3}, ["0", ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 1000}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["997", ["997", "int", {}]], ["998", ["998", "int", {}]], ["999", ["999", "int", {}]]]], ["1", ["'hello'", "str", {"len": 5}]], ["2", ["{'kwarg1': {'key': 'value'}}", "dict", {"len": 1}, ["'kwarg1'", ["{'key': 'value'}", "dict", {"len": 1}, ["'key'", ["'value'", "str", {"len": 5}]]]]]]], "187": ["'hello'", "str", {"len": 5}], "188": ["{'kwarg1': {'key': 'value'}}", "dict", {"len": 1}, ["'kwarg1'", ["{'key': 'value'}", "dict", {"len": 1}, ["'key'", ["'value'", "str", {"len": 5}]]]]]}, "type_names": ["MyClass", "NoneType", "SlotClass", "ValueError", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "member_descriptor", "method_descriptor", "range", "set", "str", "tuple", "type", "wrapper_descriptor"], "num_special_types": 11, "loop_iterations": {}}, "arguments": [["pos1", "[0, 1, 2, 3, 4, 5, ...]"], ["pos2", "'hello'"], ["key1", "3"], ["key2", "8"], ["args", "()"], ["kwargs", "{'kwarg1': {'key': 'value'}}"]], "exception": null, "traceback": null, "return_value": "[[0, 1, 2, 3, 4, 5, ...], 'hello', {'kwarg1': {'key': 'value'}}]"}, {"function": {"lineno": 26, "name": "complex_args", "data": {"loop_ranges": [], "node_loops": {}, "node_ranges": [{"end": 94, "start": 67, "classes": ["stmt"], "depth": 2, "tree_index": 28}, {"end": 94, "start": 74, "classes": [], "depth": 3, "tree_index": 96}, {"end": 79, "start": 75, "classes": [], "depth": 4, "tree_index": 186}, {"end": 85, "start": 81, "classes": [], "depth": 4, "tree_index": 187}, {"end": 93, "start": 87, "classes": [], "depth": 4, "tree_index": 188}]}, "html_body": "<span data-index=\"7\" class=\"stmt\">@<span data-index=\"29\" class=\"\">eye</span>\ndef complex_args(pos1, pos2, key1=3, key2=4, *args, **kwargs):\n    <span data-index=\"28\" class=\"stmt\">return <span data-index=\"96\" class=\"\">[<span data-index=\"186\" class=\"\">pos1</span>, <span data-index=\"187\" class=\"\">pos2</span>, <span data-index=\"188\" class=\"\">kwargs</span>]</span></span></span>\n"}, "data": {"node_values": {"186": ["1", "int", {}], "28": ["", -2, {}], "96": ["[1, 2, {'k': 23}]", "list", {"len": 3}, ["0", ["1", "int", {}]], ["1", ["2", "int", {}]], ["2", ["{'k': 23}", "dict", {"len": 1}, ["'k'", ["23", "int", {}]]]]], "187": ["2", "int", {}], "188": ["{'k': 23}", "dict", {"len": 1}, ["'k'", ["23", "int", {}]]]}, "type_names": ["MyClass", "NoneType", "SlotClass", "ValueError", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "member_descriptor", "method_descriptor", "range", "set", "str", "tuple", "type", "wrapper_descriptor"], "num_special_types": 11, "loop_iterations": {}}, "arguments": [["pos1", "1"], ["pos2", "2"], ["key1", "3"], ["key2", "4"], ["args", "()"], ["kwargs", "{'k': 23}"]], "exception": null, "traceback": null, "return_value": "[1, 2, {'k': 23}]"}, {"function": {"lineno": 37, "name": "use_gen_1", "data": {"loop_ranges": [{"end": 27, "start": 26, "tree_index": 34}], "node_loops": {"105": [34], "309": [34], "310": [34], "198": [34]}, "node_ranges": [{"end": 61, "start": 18, "classes": ["loop", "stmt"], "depth": 2, "tree_index": 34}, {"end": 43, "start": 31, "classes": [], "depth": 3, "tree_index": 104}, {"end": 61, "start": 53, "classes": ["stmt"], "depth": 3, "tree_index": 105}, {"end": 37, "start": 31, "classes": [], "depth": 4, "tree_index": 195}, {"end": 39, "start": 38, "classes": [], "depth": 4, "tree_index": 196}, {"end": 61, "start": 53, "classes": [], "depth": 4, "tree_index": 198}, {"end": 58, "start": 53, "classes": [], "depth": 5, "tree_index": 309}, {"end": 60, "start": 59, "classes": [], "depth": 5, "tree_index": 310}]}, "html_body": "<span data-index=\"9\" class=\"stmt\">@<span data-index=\"35\" class=\"\">eye</span>\ndef use_gen_1(g):\n<span data-index=\"34\" class=\"loop stmt\">    for x in <span data-index=\"104\" class=\"\"><span data-index=\"195\" class=\"\">islice</span>(<span data-index=\"196\" class=\"\">g</span>, 3)</span>:\n        <span data-index=\"105\" class=\"stmt\"><span data-index=\"198\" class=\"\"><span data-index=\"309\" class=\"\">dummy</span>(<span data-index=\"310\" class=\"\">x</span>)</span></span></span></span>\n"}, "data": {"node_values": {"309": {"2": ["<function dummy at 0xABC>", "function", {}], "0": ["<function dummy at 0xABC>", "function", {}], "1": ["<function dummy at 0xABC>", "function", {}]}, "195": ["<class 'itertools.islice'>", "type", {}, ["__doc__", ["'islice(iterab...s an iterator.'", "str", {"len": 454}]], ["__getattribute__", ["<slot wrapper '__getattribut...f 'itertools.islice' objects>", "wrapper_descriptor", {}]], ["__iter__", ["<slot wrapper '__iter__' of 'itertools.islice' objects>", "wrapper_descriptor", {}]], ["__new__", ["<built-in method __new__ of type object at 0xABC>", "builtin_function_or_method", {}]], ["__next__", ["<slot wrapper '__next__' of 'itertools.islice' objects>", "wrapper_descriptor", {}]], ["__reduce__", ["<method '__reduce__' of 'itertools.islice' objects>", "method_descriptor", {}]], ["__setstate__", ["<method '__setstate__' of 'itertools.islice' objects>", "method_descriptor", {}]]], "310": {"2": ["2", "int", {}], "0": ["0", "int", {}], "1": ["1", "int", {}]}, "196": ["<generator object gen at 0xABC>", "generator", {}], "105": {"2": ["", -2, {}], "0": ["", -2, {}], "1": ["", -2, {}]}, "34": ["", -2, {"inner_calls": ["test_id_12"]}], "104": ["<itertools.islice object at 0xABC>", "islice", {}], "198": {"2": ["None", "NoneType", {}], "0": ["None", "NoneType", {}], "1": ["None", "NoneType", {}]}}, "type_names": ["MyClass", "NoneType", "SlotClass", "ValueError", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "member_descriptor", "method_descriptor", "range", "set", "str", "tuple", "type", "wrapper_descriptor"], "num_special_types": 11, "loop_iterations": {"34": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}, {"index": 2, "loops": {}}]}}, "arguments": [["g", "<generator object gen at 0xABC>"]], "exception": null, "traceback": null, "return_value": "None"}, {"function": {"lineno": 31, "name": "gen", "data": {"loop_ranges": [{"end": 20, "start": 19, "tree_index": 31}], "node_loops": {"306": [31], "193": [31], "100": [31]}, "node_ranges": [{"end": 49, "start": 11, "classes": ["loop", "stmt"], "depth": 2, "tree_index": 31}, {"end": 32, "start": 24, "classes": [], "depth": 3, "tree_index": 99}, {"end": 49, "start": 42, "classes": ["stmt"], "depth": 3, "tree_index": 100}, {"end": 29, "start": 24, "classes": [], "depth": 4, "tree_index": 191}, {"end": 49, "start": 42, "classes": [], "depth": 4, "tree_index": 193}, {"end": 49, "start": 48, "classes": [], "depth": 5, "tree_index": 306}]}, "html_body": "<span data-index=\"8\" class=\"stmt\">@<span data-index=\"32\" class=\"\">eye</span>\ndef gen():\n<span data-index=\"31\" class=\"loop stmt\">    for i in <span data-index=\"99\" class=\"\"><span data-index=\"191\" class=\"\">range</span>(6)</span>:\n        <span data-index=\"100\" class=\"stmt\"><span data-index=\"193\" class=\"\">yield <span data-index=\"306\" class=\"\">i</span></span></span></span></span>\n"}, "data": {"node_values": {"31": ["", -2, {}], "306": {"2": ["2", "int", {}], "0": ["0", "int", {}], "1": ["1", "int", {}], "3": ["3", "int", {}], "4": ["4", "int", {}], "5": ["5", "int", {}]}, "100": {"2": ["", -2, {}], "0": ["", -2, {}], "1": ["", -2, {}], "3": ["", -2, {}], "4": ["", -2, {}], "5": ["", -2, {}]}, "99": ["range(0, 6)", "range", {"len": 6}], "193": {"2": ["None", "NoneType", {}], "0": ["None", "NoneType", {}], "1": ["None", "NoneType", {}], "3": ["None", "NoneType", {}], "4": ["None", "NoneType", {}], "5": ["None", "NoneType", {}]}}, "type_names": ["MyClass", "NoneType", "SlotClass", "ValueError", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "member_descriptor", "method_descriptor", "range", "set", "str", "tuple", "type", "wrapper_descriptor"], "num_special_types": 11, "loop_iterations": {"31": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}, {"index": 2, "loops": {}}, {"index": 3, "loops": {}}, {"index": 4, "loops": {}}, {"index": 5, "loops": {}}]}}, "arguments": [], "exception": null, "traceback": null, "return_value": "None"}, {"function": {"lineno": 43, "name": "use_gen_2", "data": {"loop_ranges": [{"end": 27, "start": 26, "tree_index": 37}], "node_loops": {"110": [37], "201": [37], "312": [37], "311": [37]}, "node_ranges": [{"end": 50, "start": 18, "classes": ["loop", "stmt"], "depth": 2, "tree_index": 37}, {"end": 32, "start": 31, "classes": [], "depth": 3, "tree_index": 109}, {"end": 50, "start": 42, "classes": ["stmt"], "depth": 3, "tree_index": 110}, {"end": 50, "start": 42, "classes": [], "depth": 4, "tree_index": 201}, {"end": 47, "start": 42, "classes": [], "depth": 5, "tree_index": 311}, {"end": 49, "start": 48, "classes": [], "depth": 5, "tree_index": 312}]}, "html_body": "<span data-index=\"10\" class=\"stmt\">@<span data-index=\"38\" class=\"\">eye</span>\ndef use_gen_2(g):\n<span data-index=\"37\" class=\"loop stmt\">    for y in <span data-index=\"109\" class=\"\">g</span>:\n        <span data-index=\"110\" class=\"stmt\"><span data-index=\"201\" class=\"\"><span data-index=\"311\" class=\"\">dummy</span>(<span data-index=\"312\" class=\"\">y</span>)</span></span></span></span>\n"}, "data": {"node_values": {"109": ["<generator object gen at 0xABC>", "generator", {}], "312": {"2": ["5", "int", {}], "0": ["3", "int", {}], "1": ["4", "int", {}]}, "110": {"2": ["", -2, {}], "0": ["", -2, {}], "1": ["", -2, {}]}, "201": {"2": ["None", "NoneType", {}], "0": ["None", "NoneType", {}], "1": ["None", "NoneType", {}]}, "311": {"2": ["<function dummy at 0xABC>", "function", {}], "0": ["<function dummy at 0xABC>", "function", {}], "1": ["<function dummy at 0xABC>", "function", {}]}, "37": ["", -2, {}]}, "type_names": ["MyClass", "NoneType", "SlotClass", "ValueError", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "member_descriptor", "method_descriptor", "range", "set", "str", "tuple", "type", "wrapper_descriptor"], "num_special_types": 11, "loop_iterations": {"37": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}, {"index": 2, "loops": {}}]}}, "arguments": [["g", "<generator object gen at 0xABC>"]], "exception": null, "traceback": null, "return_value": "None"}]