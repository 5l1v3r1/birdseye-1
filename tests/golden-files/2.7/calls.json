[{"return_value": "None", "arguments": [], "exception": null, "data": {"type_names": ["MyClass", "NoneType", "SlotClass", "ValueError", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "long", "member_descriptor", "set", "str", "tuple", "type", "unicode", "wrapper_descriptor"], "loop_iterations": {"237": [{"loops": {"339": [{"loops": {}, "index": 0}, {"loops": {}, "index": 1}, {"loops": {}, "index": 2}, {"loops": {}, "index": 97}, {"loops": {}, "index": 98}, {"loops": {}, "index": 99}]}, "index": 0}, {"loops": {"339": [{"loops": {}, "index": 0}, {"loops": {}, "index": 1}, {"loops": {}, "index": 2}, {"loops": {}, "index": 97}, {"loops": {}, "index": 98}, {"loops": {}, "index": 99}]}, "index": 1}, {"loops": {"339": [{"loops": {}, "index": 0}, {"loops": {}, "index": 1}, {"loops": {}, "index": 2}, {"loops": {}, "index": 97}, {"loops": {}, "index": 98}, {"loops": {}, "index": 99}]}, "index": 2}, {"loops": {"339": [{"loops": {}, "index": 0}, {"loops": {}, "index": 1}, {"loops": {}, "index": 2}, {"loops": {}, "index": 97}, {"loops": {}, "index": 98}, {"loops": {}, "index": 99}]}, "index": 97}, {"loops": {"339": [{"loops": {}, "index": 0}, {"loops": {}, "index": 1}, {"loops": {}, "index": 2}, {"loops": {}, "index": 97}, {"loops": {}, "index": 98}, {"loops": {}, "index": 99}]}, "index": 98}, {"loops": {"339": [{"loops": {}, "index": 0}, {"loops": {}, "index": 1}, {"loops": {}, "index": 2}, {"loops": {}, "index": 97}, {"loops": {}, "index": 98}, {"loops": {}, "index": 99}]}, "index": 99}], "67": [{"loops": {}, "index": 0}], "48": [{"loops": {}, "index": 0}, {"loops": {}, "index": 1}, {"loops": {}, "index": 2}, {"loops": {}, "index": 3}], "351": [{"loops": {}, "index": 0}], "47": [{"loops": {}, "index": 0}, {"loops": {"124": [{"loops": {}, "index": 0}, {"loops": {}, "index": 1}]}, "index": 1}, {"loops": {"124": [{"loops": {}, "index": 0}, {"loops": {}, "index": 1}, {"loops": {}, "index": 2}, {"loops": {}, "index": 3}]}, "index": 2}, {"loops": {"124": [{"loops": {}, "index": 0}, {"loops": {}, "index": 1}, {"loops": {}, "index": 2}, {"loops": {}, "index": 191}, {"loops": {}, "index": 192}, {"loops": {}, "index": 193}]}, "index": 97}, {"loops": {"124": [{"loops": {}, "index": 0}, {"loops": {}, "index": 1}, {"loops": {}, "index": 2}, {"loops": {}, "index": 193}, {"loops": {}, "index": 194}, {"loops": {}, "index": 195}]}, "index": 98}, {"loops": {"124": [{"loops": {}, "index": 0}, {"loops": {}, "index": 1}, {"loops": {}, "index": 2}, {"loops": {}, "index": 195}, {"loops": {}, "index": 196}, {"loops": {}, "index": 197}]}, "index": 99}], "347": [{"loops": {}, "index": 0}, {"loops": {}, "index": 1}, {"loops": {}, "index": 2}, {"loops": {}, "index": 3}]}, "num_special_types": 13, "node_values": {"373": ["'1 + 2'", "str", {"len": 5}], "218": {"5": ["None", "NoneType", {}], "4": ["None", "NoneType", {}], "3": ["None", "NoneType", {}], "2": ["None", "NoneType", {}], "1": ["None", "NoneType", {}], "0": ["None", "NoneType", {}]}, "210": ["6", "int", {"inner_call": "test_id_2"}], "538": {"5": {"5": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 100}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 196}]], ["99", ["[99, 100, 101, 102, 103, 104, ...]", "list", {"len": 197}]]], "4": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 100}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 196}]], ["99", ["[99, 100, 101, 102, 103, 104, ...]", "list", {"len": 196}]]], "3": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 100}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 196}]], ["99", ["[99, 100, 101, 102, 103, 104, ...]", "list", {"len": 195}]]], "2": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 100}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 196}]], ["99", ["[99, 100]", "list", {"len": 2}]]], "1": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 100}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 196}]], ["99", ["[99]", "list", {"len": 1}]]], "0": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 100}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 196}]], ["99", ["[]", "list", {"len": 0}]]]}, "4": {"5": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 195}]]], "4": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 194}]]], "3": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 193}]]], "2": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99]", "list", {"len": 2}]]], "1": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98]", "list", {"len": 1}]]], "0": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[]", "list", {"len": 0}]]]}, "3": {"5": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list", {"len": 190}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 193}]]], "4": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list", {"len": 190}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 192}]]], "3": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list", {"len": 190}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 191}]]], "2": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list", {"len": 190}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98]", "list", {"len": 2}]]], "1": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list", {"len": 190}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97]", "list", {"len": 1}]]], "0": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list", {"len": 190}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[]", "list", {"len": 0}]]]}, "2": {"3": ["[[], [1, 2], [2, 3, 4]]", "list", {"len": 3}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4]", "list", {"len": 3}]]], "2": ["[[], [1, 2], [2, 3]]", "list", {"len": 3}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3]", "list", {"len": 2}]]], "1": ["[[], [1, 2], [2]]", "list", {"len": 3}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2]", "list", {"len": 1}]]], "0": ["[[], [1, 2], []]", "list", {"len": 3}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[]", "list", {"len": 0}]]]}, "1": {"1": ["[[], [1]]", "list", {"len": 2}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1]", "list", {"len": 1}]]], "0": ["[[], []]", "list", {"len": 2}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[]", "list", {"len": 0}]]]}}, "139": ["True", "bool", {}], "138": ["None", "NoneType", {}], "290": ["<generator object gen at 0xABC>", "generator", {}], "130": ["<tests.golden_script.MyClass object at 0xABC>", "MyClass", {"inner_call": "test_id_5"}], "133": ["None", "NoneType", {}], "132": ["[[0, 1, 2, 3, 4, 5, ...], [1, 2, 3, 4, 5, 6, ...], [2, 3, 4, 5, 6, 7, ...], [3, 4, 5, 6, 7, 8, ...], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 100}, ["0", ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 100}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["97", ["97", "int", {}]], ["98", ["98", "int", {}]], ["99", ["99", "int", {}]]]], ["1", ["[1, 2, 3, 4, 5, 6, ...]", "list", {"len": 100}, ["0", ["1", "int", {}]], ["1", ["2", "int", {}]], ["2", ["3", "int", {}]], ["97", ["98", "int", {}]], ["98", ["99", "int", {}]], ["99", ["100", "int", {}]]]], ["2", ["[2, 3, 4, 5, 6, 7, ...]", "list", {"len": 100}, ["0", ["2", "int", {}]], ["1", ["3", "int", {}]], ["2", ["4", "int", {}]], ["97", ["99", "int", {}]], ["98", ["100", "int", {}]], ["99", ["101", "int", {}]]]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 100}, ["0", ["97", "int", {}]], ["1", ["98", "int", {}]], ["2", ["99", "int", {}]], ["97", ["194", "int", {}]], ["98", ["195", "int", {}]], ["99", ["196", "int", {}]]]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 100}, ["0", ["98", "int", {}]], ["1", ["99", "int", {}]], ["2", ["100", "int", {}]], ["97", ["195", "int", {}]], ["98", ["196", "int", {}]], ["99", ["197", "int", {}]]]], ["99", ["[99, 100, 101, 102, 103, 104, ...]", "list", {"len": 100}, ["0", ["99", "int", {}]], ["1", ["100", "int", {}]], ["2", ["101", "int", {}]], ["97", ["196", "int", {}]], ["98", ["197", "int", {}]], ["99", ["198", "int", {}]]]]], "135": ["None", "NoneType", {}], "134": ["None", "NoneType", {}], "137": true, "136": ["<tests.golden_script.MyClass object at 0xABC>", "MyClass", {}, ["list", ["[[0, 1, 2, 3, 4, 5, ...], [1, 2, 3, 4, 5, 6, ...], [2, 3, 4, 5, 6, 7, ...], [3, 4, 5, 6, 7, 8, ...], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 100}, ["0", ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 100}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["97", ["97", "int", {}]], ["98", ["98", "int", {}]], ["99", ["99", "int", {}]]]], ["1", ["[1, 2, 3, 4, 5, 6, ...]", "list", {"len": 100}, ["0", ["1", "int", {}]], ["1", ["2", "int", {}]], ["2", ["3", "int", {}]], ["97", ["98", "int", {}]], ["98", ["99", "int", {}]], ["99", ["100", "int", {}]]]], ["2", ["[2, 3, 4, 5, 6, 7, ...]", "list", {"len": 100}, ["0", ["2", "int", {}]], ["1", ["3", "int", {}]], ["2", ["4", "int", {}]], ["97", ["99", "int", {}]], ["98", ["100", "int", {}]], ["99", ["101", "int", {}]]]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 100}, ["0", ["97", "int", {}]], ["1", ["98", "int", {}]], ["2", ["99", "int", {}]], ["97", ["194", "int", {}]], ["98", ["195", "int", {}]], ["99", ["196", "int", {}]]]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 100}, ["0", ["98", "int", {}]], ["1", ["99", "int", {}]], ["2", ["100", "int", {}]], ["97", ["195", "int", {}]], ["98", ["196", "int", {}]], ["99", ["197", "int", {}]]]], ["99", ["[99, 100, 101, 102, 103, 104, ...]", "list", {"len": 100}, ["0", ["99", "int", {}]], ["1", ["100", "int", {}]], ["2", ["101", "int", {}]], ["97", ["196", "int", {}]], ["98", ["197", "int", {}]], ["99", ["198", "int", {}]]]]]]], "221": {"5": {"5": true, "4": true, "3": true, "2": true, "1": true, "0": true}, "4": {"5": true, "4": true, "3": true, "2": true, "1": true, "0": true}, "3": {"5": true, "4": true, "3": true, "2": true, "1": true, "0": true}, "2": {"3": true, "2": true, "1": true, "0": true}, "1": {"1": true, "0": true}}, "220": {"5": ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 198}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["195", ["195", "int", {}]], ["196", ["196", "int", {}]], ["197", ["197", "int", {}]]], "4": ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 196}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["193", ["193", "int", {}]], ["194", ["194", "int", {}]], ["195", ["195", "int", {}]]], "3": ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 194}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["191", ["191", "int", {}]], ["192", ["192", "int", {}]], ["193", ["193", "int", {}]]], "2": ["[0, 1, 2, 3]", "list", {"len": 4}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["3", ["3", "int", {}]]], "1": ["[0, 1]", "list", {"len": 2}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]]], "0": ["[]", "list", {"len": 0}]}, "222": {"5": {"5": true, "4": true, "3": true, "2": true, "1": true, "0": true}, "4": {"5": true, "4": true, "3": true, "2": true, "1": true, "0": true}, "3": {"5": true, "4": true, "3": true, "2": true, "1": true, "0": true}, "2": {"3": true, "2": true, "1": true, "0": true}, "1": {"1": true, "0": true}}, "226": {"3": true, "2": true, "1": true, "0": true}, "229": {"3": true}, "228": {"3": ["True", "bool", {}], "1": ["False", "bool", {}]}, "415": {"5": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}, ["0", ["1", "int", {}]], ["1", ["2", "int", {}]]]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}, ["0", ["2", "int", {}]], ["1", ["3", "int", {}]], ["2", ["4", "int", {}]], ["3", ["5", "int", {}]]]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}, ["0", ["96", "int", {}]], ["1", ["97", "int", {}]], ["2", ["98", "int", {}]], ["189", ["285", "int", {}]], ["190", ["286", "int", {}]], ["191", ["287", "int", {}]]]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}, ["0", ["97", "int", {}]], ["1", ["98", "int", {}]], ["2", ["99", "int", {}]], ["191", ["288", "int", {}]], ["192", ["289", "int", {}]], ["193", ["290", "int", {}]]]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 196}, ["0", ["98", "int", {}]], ["1", ["99", "int", {}]], ["2", ["100", "int", {}]], ["193", ["291", "int", {}]], ["194", ["292", "int", {}]], ["195", ["293", "int", {}]]]]], "4": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}, ["0", ["1", "int", {}]], ["1", ["2", "int", {}]]]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}, ["0", ["2", "int", {}]], ["1", ["3", "int", {}]], ["2", ["4", "int", {}]], ["3", ["5", "int", {}]]]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list", {"len": 190}, ["0", ["95", "int", {}]], ["1", ["96", "int", {}]], ["2", ["97", "int", {}]], ["187", ["282", "int", {}]], ["188", ["283", "int", {}]], ["189", ["284", "int", {}]]]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}, ["0", ["96", "int", {}]], ["1", ["97", "int", {}]], ["2", ["98", "int", {}]], ["189", ["285", "int", {}]], ["190", ["286", "int", {}]], ["191", ["287", "int", {}]]]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}, ["0", ["97", "int", {}]], ["1", ["98", "int", {}]], ["2", ["99", "int", {}]], ["191", ["288", "int", {}]], ["192", ["289", "int", {}]], ["193", ["290", "int", {}]]]]], "3": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 97}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}, ["0", ["1", "int", {}]], ["1", ["2", "int", {}]]]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}, ["0", ["2", "int", {}]], ["1", ["3", "int", {}]], ["2", ["4", "int", {}]], ["3", ["5", "int", {}]]]], ["94", ["[94, 95, 96, 97, 98, 99, ...]", "list", {"len": 188}, ["0", ["94", "int", {}]], ["1", ["95", "int", {}]], ["2", ["96", "int", {}]], ["185", ["279", "int", {}]], ["186", ["280", "int", {}]], ["187", ["281", "int", {}]]]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list", {"len": 190}, ["0", ["95", "int", {}]], ["1", ["96", "int", {}]], ["2", ["97", "int", {}]], ["187", ["282", "int", {}]], ["188", ["283", "int", {}]], ["189", ["284", "int", {}]]]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}, ["0", ["96", "int", {}]], ["1", ["97", "int", {}]], ["2", ["98", "int", {}]], ["189", ["285", "int", {}]], ["190", ["286", "int", {}]], ["191", ["287", "int", {}]]]]], "2": ["[[], [1, 2]]", "list", {"len": 2}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}, ["0", ["1", "int", {}]], ["1", ["2", "int", {}]]]]], "1": ["[[]]", "list", {"len": 1}, ["0", ["[]", "list", {"len": 0}]]], "0": ["[]", "list", {"len": 0}]}, "361": ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 1000}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["997", ["997", "int", {}]], ["998", ["998", "int", {}]], ["999", ["999", "int", {}]]], "363": ["{'kwarg1': {'key': 'value'}}", "dict", {"len": 1}, ["'kwarg1'", ["{'key': 'value'}", "dict", {"len": 1}, ["'key'", ["'value'", "str", {"len": 5}]]]]], "365": ["<function complex_args at 0xABC>", "function", {}], "128": {"3": true, "1": true}, "126": ["[0, 1, 2, 3, 4, 5]", "list", {"len": 6}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["3", ["3", "int", {}]], ["4", ["4", "int", {}]], ["5", ["5", "int", {}]]], "127": {"3": true, "2": true, "1": true, "0": true}, "124": {"5": true, "4": true, "3": true, "2": true, "1": true, "0": true}, "396": ["<function <lambda> at 0xABC>", "function", {}], "122": ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 100}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["97", ["97", "int", {}]], ["98", ["98", "int", {}]], ["99", ["99", "int", {}]]], "123": {"5": true, "4": true, "3": true, "2": true, "1": true, "0": true}, "236": {"5": ["[99, 100, 101, 102, 103, 104, ...]", "list", {"len": 100}, ["0", ["99", "int", {}]], ["1", ["100", "int", {}]], ["2", ["101", "int", {}]], ["97", ["196", "int", {}]], ["98", ["197", "int", {}]], ["99", ["198", "int", {}]]], "4": ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 100}, ["0", ["98", "int", {}]], ["1", ["99", "int", {}]], ["2", ["100", "int", {}]], ["97", ["195", "int", {}]], ["98", ["196", "int", {}]], ["99", ["197", "int", {}]]], "3": ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 100}, ["0", ["97", "int", {}]], ["1", ["98", "int", {}]], ["2", ["99", "int", {}]], ["97", ["194", "int", {}]], ["98", ["195", "int", {}]], ["99", ["196", "int", {}]]], "2": ["[2, 3, 4, 5, 6, 7, ...]", "list", {"len": 100}, ["0", ["2", "int", {}]], ["1", ["3", "int", {}]], ["2", ["4", "int", {}]], ["97", ["99", "int", {}]], ["98", ["100", "int", {}]], ["99", ["101", "int", {}]]], "1": ["[1, 2, 3, 4, 5, 6, ...]", "list", {"len": 100}, ["0", ["1", "int", {}]], ["1", ["2", "int", {}]], ["2", ["3", "int", {}]], ["97", ["98", "int", {}]], ["98", ["99", "int", {}]], ["99", ["100", "int", {}]]], "0": ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 100}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["97", ["97", "int", {}]], ["98", ["98", "int", {}]], ["99", ["99", "int", {}]]]}, "237": true, "159": ["True", "bool", {}], "233": ["<tests.golden_script.MyClass object at 0xABC>", "MyClass", {}], "231": ["<tests.golden_script.MyClass object at 0xABC>", "MyClass", {}], "153": true, "152": true, "151": ["True", "bool", {}], "150": ["True", "bool", {}], "156": ["True", "bool", {}], "155": {"0": true}, "239": ["<generator object <genexpr> at 0xABC>", "generator", {}], "355": ["<tests.golden_script.SlotClass object at 0xABC>", "SlotClass", {}, ["slot1", ["3", "int", {}]]], "445": ["[0, 1, 2, 3]", "list", {"len": 4}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["3", ["3", "int", {}]]], "357": ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 1000}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["997", ["997", "int", {}]], ["998", ["998", "int", {}]], ["999", ["999", "int", {}]]], "356": ["<function complex_args at 0xABC>", "function", {}], "351": true, "350": {"0": ["0", "int", {}]}, "353": ["<tests.golden_script.MyClass object at 0xABC>", "MyClass", {}, ["list", ["[[0, 1, 2, 3, 4, 5, ...], [1, 2, 3, 4, 5, 6, ...], [2, 3, 4, 5, 6, 7, ...], [3, 4, 5, 6, 7, 8, ...], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 100}, ["0", ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 100}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["97", ["97", "int", {}]], ["98", ["98", "int", {}]], ["99", ["99", "int", {}]]]], ["1", ["[1, 2, 3, 4, 5, 6, ...]", "list", {"len": 100}, ["0", ["1", "int", {}]], ["1", ["2", "int", {}]], ["2", ["3", "int", {}]], ["97", ["98", "int", {}]], ["98", ["99", "int", {}]], ["99", ["100", "int", {}]]]], ["2", ["[2, 3, 4, 5, 6, 7, ...]", "list", {"len": 100}, ["0", ["2", "int", {}]], ["1", ["3", "int", {}]], ["2", ["4", "int", {}]], ["97", ["99", "int", {}]], ["98", ["100", "int", {}]], ["99", ["101", "int", {}]]]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 100}, ["0", ["97", "int", {}]], ["1", ["98", "int", {}]], ["2", ["99", "int", {}]], ["97", ["194", "int", {}]], ["98", ["195", "int", {}]], ["99", ["196", "int", {}]]]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 100}, ["0", ["98", "int", {}]], ["1", ["99", "int", {}]], ["2", ["100", "int", {}]], ["97", ["195", "int", {}]], ["98", ["196", "int", {}]], ["99", ["197", "int", {}]]]], ["99", ["[99, 100, 101, 102, 103, 104, ...]", "list", {"len": 100}, ["0", ["99", "int", {}]], ["1", ["100", "int", {}]], ["2", ["101", "int", {}]], ["97", ["196", "int", {}]], ["98", ["197", "int", {}]], ["99", ["198", "int", {}]]]]]]], "558": {"3": ["3", "int", {}], "2": ["2", "int", {}], "1": ["1", "int", {}], "0": ["0", "int", {}]}, "53": true, "52": true, "51": true, "50": true, "57": true, "56": true, "55": true, "54": true, "59": true, "58": true, "69": true, "149": ["None", "NoneType", {}], "140": ["True", "bool", {}], "141": ["True", "bool", {}], "147": ["True", "bool", {}], "243": ["{0: 0}", "dict", {"len": 1}, ["0", ["0", "int", {}]]], "242": ["<function dummy at 0xABC>", "function", {}], "241": ["set([0, 1, 2, 3])", "set", {"len": 4}, ["<0>", ["0", "int", {}]], ["<1>", ["1", "int", {}]], ["<2>", ["2", "int", {}]], ["<3>", ["3", "int", {}]]], "240": ["<function dummy at 0xABC>", "function", {}], "247": ["[[0, 1, 2, 3, 4, 5, ...], 'hello', {'kwarg1': {'key': 'value'}}]", "list", {"inner_call": "test_id_9", "len": 3}, ["0", ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 1000}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["997", ["997", "int", {}]], ["998", ["998", "int", {}]], ["999", ["999", "int", {}]]]], ["1", ["'hello'", "str", {"len": 5}]], ["2", ["{'kwarg1': {'key': 'value'}}", "dict", {"len": 1}, ["'kwarg1'", ["{'key': 'value'}", "dict", {"len": 1}, ["'key'", ["'value'", "str", {"len": 5}]]]]]]], "246": ["<tests.golden_script.SlotClass object at 0xABC>", "SlotClass", {"inner_call": "test_id_8"}, ["slot1", ["3", "int", {}]]], "245": ["<function dummy at 0xABC>", "function", {}], "545": {"3": ["1", "int", {}], "2": ["0", "int", {}], "1": ["1", "int", {}], "0": ["0", "int", {}]}, "249": ["[[0, 1, 2, 3, 4, 5, ...], 'hello', {'kwarg1': {'key': 'value'}}]", "list", {"len": 3}, ["0", ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 1000}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["997", ["997", "int", {}]], ["998", ["998", "int", {}]], ["999", ["999", "int", {}]]]], ["1", ["'hello'", "str", {"len": 5}]], ["2", ["{'kwarg1': {'key': 'value'}}", "dict", {"len": 1}, ["'kwarg1'", ["{'key': 'value'}", "dict", {"len": 1}, ["'key'", ["'value'", "str", {"len": 5}]]]]]]], "341": ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 100}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["97", ["97", "int", {}]], ["98", ["98", "int", {}]], ["99", ["99", "int", {}]]], "346": {"3": ["3", "int", {}], "2": ["2", "int", {}], "1": ["1", "int", {}], "0": ["0", "int", {}]}, "347": true, "349": {"0": ["0", "int", {}]}, "48": true, "49": true, "45": true, "46": true, "47": true, "234": ["<tests.golden_script.MyClass object at 0xABC>", "MyClass", {}], "250": ["[1, 2, {'k': 23}]", "list", {"inner_call": "test_id_10", "len": 3}, ["0", ["1", "int", {}]], ["1", ["2", "int", {}]], ["2", ["{'k': 23}", "dict", {"len": 1}, ["'k'", ["23", "int", {}]]]]], "253": ["3", "int", {}], "449": ["[0]", "list", {"len": 1}, ["0", ["0", "int", {}]]], "339": {"5": true, "4": true, "3": true, "2": true, "1": true, "0": true}, "338": {"5": {"5": ["198", "int", {}], "4": ["197", "int", {}], "3": ["196", "int", {}], "2": ["101", "int", {}], "1": ["100", "int", {}], "0": ["99", "int", {}]}, "4": {"5": ["197", "int", {}], "4": ["196", "int", {}], "3": ["195", "int", {}], "2": ["100", "int", {}], "1": ["99", "int", {}], "0": ["98", "int", {}]}, "3": {"5": ["196", "int", {}], "4": ["195", "int", {}], "3": ["194", "int", {}], "2": ["99", "int", {}], "1": ["98", "int", {}], "0": ["97", "int", {}]}, "2": {"5": ["101", "int", {}], "4": ["100", "int", {}], "3": ["99", "int", {}], "2": ["4", "int", {}], "1": ["3", "int", {}], "0": ["2", "int", {}]}, "1": {"5": ["100", "int", {}], "4": ["99", "int", {}], "3": ["98", "int", {}], "2": ["3", "int", {}], "1": ["2", "int", {}], "0": ["1", "int", {}]}, "0": {"5": ["99", "int", {}], "4": ["98", "int", {}], "3": ["97", "int", {}], "2": ["2", "int", {}], "1": ["1", "int", {}], "0": ["0", "int", {}]}}, "258": ["6", "int", {}], "336": ["<class 'tests.golden_script.MyClass'>", "type", {}, ["__add__", ["<function __add__ at 0xABC>", "function", {}]], ["__dict__", ["<attribute '__dict__' of 'MyClass' objects>", "getset_descriptor", {}]], ["__doc__", ["None", "NoneType", {}]], ["__enter__", ["<function __enter__ at 0xABC>", "function", {}]], ["__exit__", ["<function __exit__ at 0xABC>", "function", {}]], ["__module__", ["'tests.golden_script'", "str", {"len": 19}]], ["__weakref__", ["<attribute '__weakref__' of 'MyClass' objects>", "getset_descriptor", {}]]], "335": ["<class 'tests.golden_script.MyClass'>", "type", {}, ["__add__", ["<function __add__ at 0xABC>", "function", {}]], ["__dict__", ["<attribute '__dict__' of 'MyClass' objects>", "getset_descriptor", {}]], ["__doc__", ["None", "NoneType", {}]], ["__enter__", ["<function __enter__ at 0xABC>", "function", {}]], ["__exit__", ["<function __exit__ at 0xABC>", "function", {}]], ["__module__", ["'tests.golden_script'", "str", {"len": 19}]], ["__weakref__", ["<attribute '__weakref__' of 'MyClass' objects>", "getset_descriptor", {}]]], "332": {"3": ["3", "int", {}], "1": ["1", "int", {}]}, "331": {"2": true, "0": true}, "442": ["[0, 1, 2, 3]", "list", {"len": 4}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["3", ["3", "int", {}]]], "71": true, "70": true, "73": true, "72": true, "74": true, "451": ["<class 'tests.golden_script.SlotClass'>", "type", {}, ["__doc__", ["None", "NoneType", {}]], ["__init__", ["<function __init__ at 0xABC>", "function", {}]], ["__module__", ["'tests.golden_script'", "str", {"len": 19}]], ["__slots__", ["('slot1',)", "tuple", {"len": 1}, ["0", ["'slot1'", "str", {"len": 5}]]]], ["slot1", ["<member 'slot1' of 'SlotClass' objects>", "member_descriptor", {}]]], "454": ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 1000}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["997", ["997", "int", {}]], ["998", ["998", "int", {}]], ["999", ["999", "int", {}]]], "458": ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 1000}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["997", ["997", "int", {}]], ["998", ["998", "int", {}]], ["999", ["999", "int", {}]]], "266": ["2", "int", {}], "238": ["<function dummy at 0xABC>", "function", {}], "262": ["<function dummy at 0xABC>", "function", {}], "325": {"5": ["198", "int", {}], "4": ["196", "int", {}], "3": ["194", "int", {}], "2": ["4", "int", {}], "1": ["2", "int", {}], "0": ["0", "int", {}]}, "326": {"5": {"5": ["None", "NoneType", {}], "4": ["None", "NoneType", {}], "3": ["None", "NoneType", {}], "2": ["None", "NoneType", {}], "1": ["None", "NoneType", {}], "0": ["None", "NoneType", {}]}, "4": {"5": ["None", "NoneType", {}], "4": ["None", "NoneType", {}], "3": ["None", "NoneType", {}], "2": ["None", "NoneType", {}], "1": ["None", "NoneType", {}], "0": ["None", "NoneType", {}]}, "3": {"5": ["None", "NoneType", {}], "4": ["None", "NoneType", {}], "3": ["None", "NoneType", {}], "2": ["None", "NoneType", {}], "1": ["None", "NoneType", {}], "0": ["None", "NoneType", {}]}, "2": {"3": ["None", "NoneType", {}], "2": ["None", "NoneType", {}], "1": ["None", "NoneType", {}], "0": ["None", "NoneType", {}]}, "1": {"1": ["None", "NoneType", {}], "0": ["None", "NoneType", {}]}}, "327": {"5": {"5": ["None", "NoneType", {}], "4": ["None", "NoneType", {}], "3": ["None", "NoneType", {}], "2": ["None", "NoneType", {}], "1": ["None", "NoneType", {}], "0": ["None", "NoneType", {}]}, "4": {"5": ["None", "NoneType", {}], "4": ["None", "NoneType", {}], "3": ["None", "NoneType", {}], "2": ["None", "NoneType", {}], "1": ["None", "NoneType", {}], "0": ["None", "NoneType", {}]}, "3": {"5": ["None", "NoneType", {}], "4": ["None", "NoneType", {}], "3": ["None", "NoneType", {}], "2": ["None", "NoneType", {}], "1": ["None", "NoneType", {}], "0": ["None", "NoneType", {}]}, "2": {"3": ["None", "NoneType", {}], "2": ["None", "NoneType", {}], "1": ["None", "NoneType", {}], "0": ["None", "NoneType", {}]}, "1": {"1": ["None", "NoneType", {}], "0": ["None", "NoneType", {}]}}, "269": ["(1, 2)", "tuple", {"len": 2}, ["0", ["1", "int", {}]], ["1", ["2", "int", {}]]], "321": {"5": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "4": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "3": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "2": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "1": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "0": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}]}, "162": ["None", "NoneType", {"inner_call": "test_id_11"}], "163": ["None", "NoneType", {"inner_call": "test_id_13"}], "68": true, "161": ["<generator object gen at 0xABC>", "generator", {}], "62": true, "63": true, "60": true, "61": true, "66": true, "67": true, "64": true, "65": true, "427": {"3": ["11.0", "float", {}], "1": ["11.0", "float", {}]}, "426": {"3": ["<function dummy at 0xABC>", "function", {}], "2": ["<function dummy at 0xABC>", "function", {}], "1": ["<function dummy at 0xABC>", "function", {}], "0": ["<function dummy at 0xABC>", "function", {}]}, "425": {"5": {"5": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 100}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 196}]], ["99", ["[99, 100, 101, 102, 103, 104, ...]", "list", {"len": 198}]]], "4": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 100}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 196}]], ["99", ["[99, 100, 101, 102, 103, 104, ...]", "list", {"len": 197}]]], "3": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 100}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 196}]], ["99", ["[99, 100, 101, 102, 103, 104, ...]", "list", {"len": 196}]]], "2": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 100}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 196}]], ["99", ["[99, 100, 101]", "list", {"len": 3}]]], "1": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 100}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 196}]], ["99", ["[99, 100]", "list", {"len": 2}]]], "0": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 100}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 196}]], ["99", ["[99]", "list", {"len": 1}]]]}, "4": {"5": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 196}]]], "4": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 195}]]], "3": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 194}]]], "2": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100]", "list", {"len": 3}]]], "1": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99]", "list", {"len": 2}]]], "0": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98]", "list", {"len": 1}]]]}, "3": {"5": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list", {"len": 190}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]]], "4": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list", {"len": 190}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 193}]]], "3": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list", {"len": 190}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 192}]]], "2": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list", {"len": 190}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99]", "list", {"len": 3}]]], "1": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list", {"len": 190}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98]", "list", {"len": 2}]]], "0": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list", {"len": 190}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97]", "list", {"len": 1}]]]}, "2": {"3": ["[[], [1, 2], [2, 3, 4, 5]]", "list", {"len": 3}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]]], "2": ["[[], [1, 2], [2, 3, 4]]", "list", {"len": 3}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4]", "list", {"len": 3}]]], "1": ["[[], [1, 2], [2, 3]]", "list", {"len": 3}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3]", "list", {"len": 2}]]], "0": ["[[], [1, 2], [2]]", "list", {"len": 3}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2]", "list", {"len": 1}]]]}, "1": {"1": ["[[], [1, 2]]", "list", {"len": 2}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]]], "0": ["[[], [1]]", "list", {"len": 2}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1]", "list", {"len": 1}]]]}}, "424": {"5": {"5": ["<function dummy at 0xABC>", "function", {}], "4": ["<function dummy at 0xABC>", "function", {}], "3": ["<function dummy at 0xABC>", "function", {}], "2": ["<function dummy at 0xABC>", "function", {}], "1": ["<function dummy at 0xABC>", "function", {}], "0": ["<function dummy at 0xABC>", "function", {}]}, "4": {"5": ["<function dummy at 0xABC>", "function", {}], "4": ["<function dummy at 0xABC>", "function", {}], "3": ["<function dummy at 0xABC>", "function", {}], "2": ["<function dummy at 0xABC>", "function", {}], "1": ["<function dummy at 0xABC>", "function", {}], "0": ["<function dummy at 0xABC>", "function", {}]}, "3": {"5": ["<function dummy at 0xABC>", "function", {}], "4": ["<function dummy at 0xABC>", "function", {}], "3": ["<function dummy at 0xABC>", "function", {}], "2": ["<function dummy at 0xABC>", "function", {}], "1": ["<function dummy at 0xABC>", "function", {}], "0": ["<function dummy at 0xABC>", "function", {}]}, "2": {"3": ["<function dummy at 0xABC>", "function", {}], "2": ["<function dummy at 0xABC>", "function", {}], "1": ["<function dummy at 0xABC>", "function", {}], "0": ["<function dummy at 0xABC>", "function", {}]}, "1": {"1": ["<function dummy at 0xABC>", "function", {}], "0": ["<function dummy at 0xABC>", "function", {}]}}, "423": {"5": {"5": ["296", "int", {}], "4": ["295", "int", {}], "3": ["294", "int", {}], "2": ["101", "int", {}], "1": ["100", "int", {}], "0": ["99", "int", {}]}, "4": {"5": ["293", "int", {}], "4": ["292", "int", {}], "3": ["291", "int", {}], "2": ["100", "int", {}], "1": ["99", "int", {}], "0": ["98", "int", {}]}, "3": {"5": ["290", "int", {}], "4": ["289", "int", {}], "3": ["288", "int", {}], "2": ["99", "int", {}], "1": ["98", "int", {}], "0": ["97", "int", {}]}, "2": {"3": ["5", "int", {}], "2": ["4", "int", {}], "1": ["3", "int", {}], "0": ["2", "int", {}]}, "1": {"1": ["2", "int", {}], "0": ["1", "int", {}]}}, "422": {"5": {"5": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "4": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "3": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "2": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "1": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "0": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}]}, "4": {"5": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "4": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "3": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "2": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "1": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "0": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}]}, "3": {"5": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "4": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "3": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "2": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "1": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "0": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}]}, "2": {"3": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "2": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "1": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "0": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}]}, "1": {"1": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "0": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}]}}, "421": {"5": ["99", "int", {}], "4": ["98", "int", {}], "3": ["97", "int", {}], "2": ["2", "int", {}], "1": ["1", "int", {}], "0": ["0", "int", {}]}, "318": ["<function factorial at 0xABC>", "function", {}], "278": ["8", "int", {}], "272": ["ValueError\n", -1, {}], "276": ["None", "NoneType", {}], "329": {"3": ["None", "NoneType", {}], "1": ["None", "NoneType", {}]}, "395": ["<function dummy at 0xABC>", "function", {}], "394": true, "118": ["True", "bool", {}], "434": {"5": {"5": ["99", "int", {}], "4": ["99", "int", {}], "3": ["99", "int", {}], "2": ["99", "int", {}], "1": ["99", "int", {}], "0": ["99", "int", {}]}, "4": {"5": ["98", "int", {}], "4": ["98", "int", {}], "3": ["98", "int", {}], "2": ["98", "int", {}], "1": ["98", "int", {}], "0": ["98", "int", {}]}, "3": {"5": ["97", "int", {}], "4": ["97", "int", {}], "3": ["97", "int", {}], "2": ["97", "int", {}], "1": ["97", "int", {}], "0": ["97", "int", {}]}, "2": {"5": ["2", "int", {}], "4": ["2", "int", {}], "3": ["2", "int", {}], "2": ["2", "int", {}], "1": ["2", "int", {}], "0": ["2", "int", {}]}, "1": {"5": ["1", "int", {}], "4": ["1", "int", {}], "3": ["1", "int", {}], "2": ["1", "int", {}], "1": ["1", "int", {}], "0": ["1", "int", {}]}, "0": {"5": ["0", "int", {}], "4": ["0", "int", {}], "3": ["0", "int", {}], "2": ["0", "int", {}], "1": ["0", "int", {}], "0": ["0", "int", {}]}}, "436": {"5": ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 100}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["97", ["97", "int", {}]], ["98", ["98", "int", {}]], ["99", ["99", "int", {}]]], "4": ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 100}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["97", ["97", "int", {}]], ["98", ["98", "int", {}]], ["99", ["99", "int", {}]]], "3": ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 100}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["97", ["97", "int", {}]], ["98", ["98", "int", {}]], ["99", ["99", "int", {}]]], "2": ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 100}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["97", ["97", "int", {}]], ["98", ["98", "int", {}]], ["99", ["99", "int", {}]]], "1": ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 100}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["97", ["97", "int", {}]], ["98", ["98", "int", {}]], ["99", ["99", "int", {}]]], "0": ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 100}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["97", ["97", "int", {}]], ["98", ["98", "int", {}]], ["99", ["99", "int", {}]]]}, "432": {"5": {"5": ["99", "int", {}], "4": ["98", "int", {}], "3": ["97", "int", {}], "2": ["2", "int", {}], "1": ["1", "int", {}], "0": ["0", "int", {}]}, "4": {"5": ["99", "int", {}], "4": ["98", "int", {}], "3": ["97", "int", {}], "2": ["2", "int", {}], "1": ["1", "int", {}], "0": ["0", "int", {}]}, "3": {"5": ["99", "int", {}], "4": ["98", "int", {}], "3": ["97", "int", {}], "2": ["2", "int", {}], "1": ["1", "int", {}], "0": ["0", "int", {}]}, "2": {"5": ["99", "int", {}], "4": ["98", "int", {}], "3": ["97", "int", {}], "2": ["2", "int", {}], "1": ["1", "int", {}], "0": ["0", "int", {}]}, "1": {"5": ["99", "int", {}], "4": ["98", "int", {}], "3": ["97", "int", {}], "2": ["2", "int", {}], "1": ["1", "int", {}], "0": ["0", "int", {}]}, "0": {"5": ["99", "int", {}], "4": ["98", "int", {}], "3": ["97", "int", {}], "2": ["2", "int", {}], "1": ["1", "int", {}], "0": ["0", "int", {}]}}, "501": {"3": ["1.0", "float", {}], "2": ["ZeroDivisionError: division by zero\n", -1, {}], "1": ["1.0", "float", {}], "0": ["ZeroDivisionError: division by zero\n", -1, {}]}, "497": {"5": {"5": ["197", "int", {}], "4": ["196", "int", {}], "3": ["195", "int", {}], "2": ["2", "int", {}], "1": ["1", "int", {}], "0": ["0", "int", {}]}, "4": {"5": ["195", "int", {}], "4": ["194", "int", {}], "3": ["193", "int", {}], "2": ["2", "int", {}], "1": ["1", "int", {}], "0": ["0", "int", {}]}, "3": {"5": ["193", "int", {}], "4": ["192", "int", {}], "3": ["191", "int", {}], "2": ["2", "int", {}], "1": ["1", "int", {}], "0": ["0", "int", {}]}, "2": {"3": ["3", "int", {}], "2": ["2", "int", {}], "1": ["1", "int", {}], "0": ["0", "int", {}]}, "1": {"1": ["1", "int", {}], "0": ["0", "int", {}]}}, "287": ["<function use_gen_1 at 0xABC>", "function", {}], "286": ["<function gen at 0xABC>", "function", {}], "495": {"5": {"5": ["99", "int", {}], "4": ["99", "int", {}], "3": ["99", "int", {}], "2": ["99", "int", {}], "1": ["99", "int", {}], "0": ["99", "int", {}]}, "4": {"5": ["98", "int", {}], "4": ["98", "int", {}], "3": ["98", "int", {}], "2": ["98", "int", {}], "1": ["98", "int", {}], "0": ["98", "int", {}]}, "3": {"5": ["97", "int", {}], "4": ["97", "int", {}], "3": ["97", "int", {}], "2": ["97", "int", {}], "1": ["97", "int", {}], "0": ["97", "int", {}]}, "2": {"3": ["2", "int", {}], "2": ["2", "int", {}], "1": ["2", "int", {}], "0": ["2", "int", {}]}, "1": {"1": ["1", "int", {}], "0": ["1", "int", {}]}}, "282": ["4", "int", {}], "388": ["ValueError()", "ValueError", {}], "288": ["<generator object gen at 0xABC>", "generator", {}], "289": ["<function use_gen_2 at 0xABC>", "function", {}], "493": {"5": {"5": ["[99, 100, 101, 102, 103, 104, ...]", "list", {"len": 197}, ["0", ["99", "int", {}]], ["1", ["100", "int", {}]], ["2", ["101", "int", {}]], ["194", ["293", "int", {}]], ["195", ["294", "int", {}]], ["196", ["295", "int", {}]]], "4": ["[99, 100, 101, 102, 103, 104, ...]", "list", {"len": 196}, ["0", ["99", "int", {}]], ["1", ["100", "int", {}]], ["2", ["101", "int", {}]], ["193", ["292", "int", {}]], ["194", ["293", "int", {}]], ["195", ["294", "int", {}]]], "3": ["[99, 100, 101, 102, 103, 104, ...]", "list", {"len": 195}, ["0", ["99", "int", {}]], ["1", ["100", "int", {}]], ["2", ["101", "int", {}]], ["192", ["291", "int", {}]], ["193", ["292", "int", {}]], ["194", ["293", "int", {}]]], "2": ["[99, 100]", "list", {"len": 2}, ["0", ["99", "int", {}]], ["1", ["100", "int", {}]]], "1": ["[99]", "list", {"len": 1}, ["0", ["99", "int", {}]]], "0": ["[]", "list", {"len": 0}]}, "4": {"5": ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 195}, ["0", ["98", "int", {}]], ["1", ["99", "int", {}]], ["2", ["100", "int", {}]], ["192", ["290", "int", {}]], ["193", ["291", "int", {}]], ["194", ["292", "int", {}]]], "4": ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 194}, ["0", ["98", "int", {}]], ["1", ["99", "int", {}]], ["2", ["100", "int", {}]], ["191", ["289", "int", {}]], ["192", ["290", "int", {}]], ["193", ["291", "int", {}]]], "3": ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 193}, ["0", ["98", "int", {}]], ["1", ["99", "int", {}]], ["2", ["100", "int", {}]], ["190", ["288", "int", {}]], ["191", ["289", "int", {}]], ["192", ["290", "int", {}]]], "2": ["[98, 99]", "list", {"len": 2}, ["0", ["98", "int", {}]], ["1", ["99", "int", {}]]], "1": ["[98]", "list", {"len": 1}, ["0", ["98", "int", {}]]], "0": ["[]", "list", {"len": 0}]}, "3": {"5": ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 193}, ["0", ["97", "int", {}]], ["1", ["98", "int", {}]], ["2", ["99", "int", {}]], ["190", ["287", "int", {}]], ["191", ["288", "int", {}]], ["192", ["289", "int", {}]]], "4": ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 192}, ["0", ["97", "int", {}]], ["1", ["98", "int", {}]], ["2", ["99", "int", {}]], ["189", ["286", "int", {}]], ["190", ["287", "int", {}]], ["191", ["288", "int", {}]]], "3": ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 191}, ["0", ["97", "int", {}]], ["1", ["98", "int", {}]], ["2", ["99", "int", {}]], ["188", ["285", "int", {}]], ["189", ["286", "int", {}]], ["190", ["287", "int", {}]]], "2": ["[97, 98]", "list", {"len": 2}, ["0", ["97", "int", {}]], ["1", ["98", "int", {}]]], "1": ["[97]", "list", {"len": 1}, ["0", ["97", "int", {}]]], "0": ["[]", "list", {"len": 0}]}, "2": {"3": ["[2, 3, 4]", "list", {"len": 3}, ["0", ["2", "int", {}]], ["1", ["3", "int", {}]], ["2", ["4", "int", {}]]], "2": ["[2, 3]", "list", {"len": 2}, ["0", ["2", "int", {}]], ["1", ["3", "int", {}]]], "1": ["[2]", "list", {"len": 1}, ["0", ["2", "int", {}]]], "0": ["[]", "list", {"len": 0}]}, "1": {"1": ["[1]", "list", {"len": 1}, ["0", ["1", "int", {}]]], "0": ["[]", "list", {"len": 0}]}}}}, "traceback": null, "function": {"html_body": "<span data-index=\"12\" data-type=\"stmt\">@<span data-index=\"75\" data-type=\"expr\">eye</span>\ndef main():\n    <span data-index=\"45\" data-type=\"stmt\">assert <span data-index=\"118\" data-type=\"expr\"><span data-index=\"210\" data-type=\"expr\"><span data-index=\"318\" data-type=\"expr\">factorial</span>(3)</span> == 6</span></span>\n\n    <span data-index=\"46\" data-type=\"stmt\">vals = []</span>\n<span data-index=\"47\" data-type=\"loop\">    for i in <span data-index=\"122\" data-type=\"expr\"><span data-index=\"216\" data-type=\"expr\">range</span>(100)</span>:\n        <span data-index=\"123\" data-type=\"stmt\"><span data-index=\"218\" data-type=\"expr\"><span data-index=\"321\" data-type=\"expr\"><span data-index=\"415\" data-type=\"expr\">vals</span>.append</span>([])</span></span>\n<span data-index=\"124\" data-type=\"loop\">        for j in <span data-index=\"220\" data-type=\"expr\"><span data-index=\"324\" data-type=\"expr\">range</span>(<span data-index=\"325\" data-type=\"expr\">2 * <span data-index=\"421\" data-type=\"expr\">i</span></span>)</span>:\n            <span data-index=\"221\" data-type=\"stmt\"><span data-index=\"326\" data-type=\"expr\"><span data-index=\"422\" data-type=\"expr\"><span data-index=\"493\" data-type=\"expr\"><span data-index=\"538\" data-type=\"expr\">vals</span>[-1]</span>.append</span>(<span data-index=\"423\" data-type=\"expr\"><span data-index=\"495\" data-type=\"expr\">i</span> + <span data-index=\"497\" data-type=\"expr\">j</span></span>)</span></span>\n            <span data-index=\"222\" data-type=\"stmt\"><span data-index=\"327\" data-type=\"expr\"><span data-index=\"424\" data-type=\"expr\">dummy</span>(<span data-index=\"425\" data-type=\"expr\">vals</span>)</span></span></span></span>\n\n<span data-index=\"48\" data-type=\"loop\">    for i in <span data-index=\"126\" data-type=\"expr\"><span data-index=\"224\" data-type=\"expr\">range</span>(6)</span>:\n<span data-index=\"127\" data-type=\"stmt\">        try:\n            <span data-index=\"226\" data-type=\"stmt\"><span data-index=\"329\" data-type=\"expr\"><span data-index=\"426\" data-type=\"expr\">dummy</span>(<span data-index=\"427\" data-type=\"expr\"><span data-index=\"501\" data-type=\"expr\">1 / (<span data-index=\"545\" data-type=\"expr\"><span data-index=\"558\" data-type=\"expr\">i</span> % 2</span>)</span> + 10</span>)</span></span>\n        except <span data-index=\"330\" data-type=\"expr\">ZeroDivisionError</span>:\n            <span data-index=\"331\" data-type=\"stmt\">continue</span></span>\n<span data-index=\"128\" data-type=\"stmt\">        if <span data-index=\"228\" data-type=\"expr\"><span data-index=\"332\" data-type=\"expr\">i</span> == 3</span>:\n            <span data-index=\"229\" data-type=\"stmt\">break</span></span></span>\n\n    <span data-index=\"49\" data-type=\"stmt\">c = <span data-index=\"130\" data-type=\"expr\"><span data-index=\"231\" data-type=\"expr\"><span data-index=\"335\" data-type=\"expr\">MyClass</span>()</span> + <span data-index=\"233\" data-type=\"expr\"><span data-index=\"336\" data-type=\"expr\">MyClass</span>()</span></span></span>\n    <span data-index=\"50\" data-type=\"stmt\"><span data-index=\"234\" data-type=\"expr\">c</span>.list = <span data-index=\"132\" data-type=\"expr\">[<span data-index=\"236\" data-type=\"expr\">[<span data-index=\"338\" data-type=\"expr\"><span data-index=\"432\" data-type=\"expr\">x</span> + <span data-index=\"434\" data-type=\"expr\">y</span></span> <span data-index=\"339\" data-type=\"loop\">for x in <span data-index=\"436\" data-type=\"expr\"><span data-index=\"507\" data-type=\"expr\">range</span>(100)</span></span>]</span> \n <span data-index=\"237\" data-type=\"loop\">for y in <span data-index=\"341\" data-type=\"expr\"><span data-index=\"438\" data-type=\"expr\">range</span>(100)</span></span>]</span></span>\n    <span data-index=\"51\" data-type=\"stmt\"><span data-index=\"133\" data-type=\"expr\"><span data-index=\"238\" data-type=\"expr\">dummy</span>(<span data-index=\"239\" data-type=\"expr\"><span data-index=\"343\" data-type=\"expr\">n</span> for n in <span data-index=\"442\" data-type=\"expr\"><span data-index=\"511\" data-type=\"expr\">range</span>(4)</span></span>)</span></span>\n    <span data-index=\"52\" data-type=\"stmt\"><span data-index=\"134\" data-type=\"expr\"><span data-index=\"240\" data-type=\"expr\">dummy</span>(<span data-index=\"241\" data-type=\"expr\">{<span data-index=\"346\" data-type=\"expr\">n</span> <span data-index=\"347\" data-type=\"loop\">for n in <span data-index=\"445\" data-type=\"expr\"><span data-index=\"514\" data-type=\"expr\">range</span>(4)</span></span>}</span>)</span></span>\n    <span data-index=\"53\" data-type=\"stmt\"><span data-index=\"135\" data-type=\"expr\"><span data-index=\"242\" data-type=\"expr\">dummy</span>(<span data-index=\"243\" data-type=\"expr\">{<span data-index=\"349\" data-type=\"expr\">n</span>: <span data-index=\"350\" data-type=\"expr\">n</span> <span data-index=\"351\" data-type=\"loop\">for n in <span data-index=\"449\" data-type=\"expr\"><span data-index=\"517\" data-type=\"expr\">range</span>(1)</span></span>}</span>)</span></span>\n<span data-index=\"54\" data-type=\"stmt\">    with <span data-index=\"136\" data-type=\"expr\">c</span>:\n        <span data-index=\"137\" data-type=\"stmt\">pass</span></span>\n    <span data-index=\"55\" data-type=\"stmt\"><span data-index=\"138\" data-type=\"expr\"><span data-index=\"245\" data-type=\"expr\">dummy</span>(<span data-index=\"246\" data-type=\"expr\"><span data-index=\"353\" data-type=\"expr\">c</span> + <span data-index=\"355\" data-type=\"expr\"><span data-index=\"451\" data-type=\"expr\">SlotClass</span>()</span></span>)</span></span>\n\n    <span data-index=\"56\" data-type=\"stmt\">assert <span data-index=\"139\" data-type=\"expr\"><span data-index=\"247\" data-type=\"expr\"><span data-index=\"356\" data-type=\"expr\">complex_args</span>(\n        <span data-index=\"357\" data-type=\"expr\"><span data-index=\"453\" data-type=\"expr\">list</span>(<span data-index=\"454\" data-type=\"expr\"><span data-index=\"521\" data-type=\"expr\">range</span>(1000)</span>)</span>,\n        &quot;hello&quot;,\n        key2=8,\n        kwarg1={&#x27;key&#x27;: &#x27;value&#x27;}\n    )</span> == <span data-index=\"249\" data-type=\"expr\">[<span data-index=\"361\" data-type=\"expr\"><span data-index=\"457\" data-type=\"expr\">list</span>(<span data-index=\"458\" data-type=\"expr\"><span data-index=\"526\" data-type=\"expr\">range</span>(1000)</span>)</span>,\n          &#x27;hello&#x27;,\n          <span data-index=\"363\" data-type=\"expr\"><span data-index=\"459\" data-type=\"expr\">dict</span>(kwarg1={&#x27;key&#x27;: &#x27;value&#x27;})</span>]</span></span></span>\n\n    <span data-index=\"57\" data-type=\"stmt\">assert <span data-index=\"140\" data-type=\"expr\"><span data-index=\"250\" data-type=\"expr\"><span data-index=\"365\" data-type=\"expr\">complex_args</span>(*[1, 2], **{&#x27;k&#x27;: 23})</span> == [1, 2, {&#x27;k&#x27;: 23}]</span></span>\n\n    <span data-index=\"58\" data-type=\"stmt\">assert <span data-index=\"141\" data-type=\"expr\"><span data-index=\"253\" data-type=\"expr\"><span data-index=\"372\" data-type=\"expr\">eval</span>(<span data-index=\"373\" data-type=\"expr\">&#x27;%s + %s&#x27; % (1, 2)</span>)</span> == 3</span></span>\n\n    <span data-index=\"59\" data-type=\"stmt\">x = 1</span>\n    <span data-index=\"60\" data-type=\"stmt\">x += 5</span>\n    <span data-index=\"61\" data-type=\"stmt\">assert <span data-index=\"147\" data-type=\"expr\"><span data-index=\"258\" data-type=\"expr\">x</span> == 6</span></span>\n    <span data-index=\"62\" data-type=\"stmt\">del x</span>\n\n    <span data-index=\"63\" data-type=\"stmt\"><span data-index=\"149\" data-type=\"expr\"><span data-index=\"262\" data-type=\"expr\">dummy</span>(<span data-index=\"263\" data-type=\"expr\">True</span>, <span data-index=\"264\" data-type=\"expr\">False</span>, <span data-index=\"265\" data-type=\"expr\">None</span>)</span></span>\n\n    <span data-index=\"64\" data-type=\"stmt\">assert <span data-index=\"150\" data-type=\"expr\"><span data-index=\"266\" data-type=\"expr\">[1, 2, 3][1]</span> == 2</span></span>\n    <span data-index=\"65\" data-type=\"stmt\">assert <span data-index=\"151\" data-type=\"expr\"><span data-index=\"269\" data-type=\"expr\">(1, 2, 3)[:2]</span> == (1, 2)</span></span>\n\n<span data-index=\"66\" data-type=\"stmt\"><span data-index=\"152\" data-type=\"stmt\">    try:\n        <span data-index=\"272\" data-type=\"stmt\">raise <span data-index=\"388\" data-type=\"expr\"><span data-index=\"483\" data-type=\"expr\">ValueError</span>()</span></span>\n    except <span data-index=\"389\" data-type=\"expr\">AssertionError</span> as e:\n        <span data-index=\"391\" data-type=\"stmt\">pass</span>\n    except <span data-index=\"392\" data-type=\"expr\">TypeError</span>:\n        <span data-index=\"393\" data-type=\"stmt\">pass</span>\n    except:\n        <span data-index=\"394\" data-type=\"stmt\">pass</span></span>\n    finally:\n        <span data-index=\"153\" data-type=\"stmt\"><span data-index=\"276\" data-type=\"expr\"><span data-index=\"395\" data-type=\"expr\">dummy</span>()</span></span></span>\n\n<span data-index=\"67\" data-type=\"loop\">    while <span data-index=\"154\" data-type=\"expr\">True</span>:\n        <span data-index=\"155\" data-type=\"stmt\">break</span></span>\n\n    <span data-index=\"68\" data-type=\"stmt\">assert <span data-index=\"156\" data-type=\"expr\"><span data-index=\"278\" data-type=\"expr\">(<span data-index=\"396\" data-type=\"expr\">lambda <span data-index=\"534\" data-type=\"expr\">x</span>: <span data-index=\"489\" data-type=\"expr\"><span data-index=\"535\" data-type=\"expr\">x</span> * 2</span></span>)(4)</span> == 8</span></span>\n\n    <span data-index=\"69\" data-type=\"stmt\">global G</span>\n    <span data-index=\"70\" data-type=\"stmt\">G = 4</span>\n    <span data-index=\"71\" data-type=\"stmt\">assert <span data-index=\"159\" data-type=\"expr\"><span data-index=\"282\" data-type=\"expr\">G</span> == 4</span></span>\n\n    <span data-index=\"72\" data-type=\"stmt\">g = <span data-index=\"161\" data-type=\"expr\"><span data-index=\"286\" data-type=\"expr\">gen</span>()</span></span>\n    <span data-index=\"73\" data-type=\"stmt\"><span data-index=\"162\" data-type=\"expr\"><span data-index=\"287\" data-type=\"expr\">use_gen_1</span>(<span data-index=\"288\" data-type=\"expr\">g</span>)</span></span>\n    <span data-index=\"74\" data-type=\"stmt\"><span data-index=\"163\" data-type=\"expr\"><span data-index=\"289\" data-type=\"expr\">use_gen_2</span>(<span data-index=\"290\" data-type=\"expr\">g</span>)</span></span></span>", "name": "main", "data": {"node_loops": {"236": [237], "426": [48], "425": [47, 124], "424": [47, 124], "423": [47, 124], "422": [47, 124], "421": [47], "558": [48], "155": [67], "218": [47], "350": [351], "339": [237], "338": [237, 339], "538": [47, 124], "331": [48], "330": [48], "325": [47], "332": [48], "221": [47, 124], "220": [47], "436": [237], "222": [47, 124], "432": [237, 339], "226": [48], "229": [48], "228": [48], "415": [47], "497": [47, 124], "349": [351], "434": [237, 339], "329": [48], "507": [237], "324": [47], "343": [344], "326": [47, 124], "327": [47, 124], "346": [347], "321": [47], "427": [48], "501": [48], "545": [48], "495": [47, 124], "128": [48], "127": [48], "124": [47], "123": [47], "493": [47, 124]}}, "lineno": 61}}, {"return_value": "6", "arguments": [["n", "3"]], "exception": null, "data": {"type_names": ["MyClass", "NoneType", "SlotClass", "ValueError", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "long", "member_descriptor", "set", "str", "tuple", "type", "unicode", "wrapper_descriptor"], "loop_iterations": {}, "num_special_types": 13, "node_values": {"79": ["False", "bool", {}], "20": true, "19": true, "81": ["6", "int", {}], "405": ["3", "int", {}], "171": ["3", "int", {}], "173": ["2", "int", {"inner_call": "test_id_3"}], "294": ["<function factorial at 0xABC>", "function", {}], "295": ["2", "int", {}], "167": ["3", "int", {}]}}, "traceback": null, "function": {"html_body": "<span data-index=\"4\" data-type=\"stmt\">@<span data-index=\"21\" data-type=\"expr\">eye</span>\ndef factorial(<span data-index=\"78\" data-type=\"expr\">n</span>):\n<span data-index=\"19\" data-type=\"stmt\">    if <span data-index=\"79\" data-type=\"expr\"><span data-index=\"167\" data-type=\"expr\">n</span> &lt;= 1</span>:\n        <span data-index=\"80\" data-type=\"stmt\">return 1</span></span>\n    <span data-index=\"20\" data-type=\"stmt\">return <span data-index=\"81\" data-type=\"expr\"><span data-index=\"171\" data-type=\"expr\">n</span> * <span data-index=\"173\" data-type=\"expr\"><span data-index=\"294\" data-type=\"expr\">factorial</span>(<span data-index=\"295\" data-type=\"expr\"><span data-index=\"405\" data-type=\"expr\">n</span> - 1</span>)</span></span></span></span>\n", "name": "factorial", "data": {"node_loops": {}}, "lineno": 8}}, {"return_value": "2", "arguments": [["n", "2"]], "exception": null, "data": {"type_names": ["MyClass", "NoneType", "SlotClass", "ValueError", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "long", "member_descriptor", "set", "str", "tuple", "type", "unicode", "wrapper_descriptor"], "loop_iterations": {}, "num_special_types": 13, "node_values": {"79": ["False", "bool", {}], "20": true, "19": true, "81": ["2", "int", {}], "405": ["2", "int", {}], "171": ["2", "int", {}], "173": ["1", "int", {"inner_call": "test_id_4"}], "294": ["<function factorial at 0xABC>", "function", {}], "295": ["1", "int", {}], "167": ["2", "int", {}]}}, "traceback": null, "function": {"html_body": "<span data-index=\"4\" data-type=\"stmt\">@<span data-index=\"21\" data-type=\"expr\">eye</span>\ndef factorial(<span data-index=\"78\" data-type=\"expr\">n</span>):\n<span data-index=\"19\" data-type=\"stmt\">    if <span data-index=\"79\" data-type=\"expr\"><span data-index=\"167\" data-type=\"expr\">n</span> &lt;= 1</span>:\n        <span data-index=\"80\" data-type=\"stmt\">return 1</span></span>\n    <span data-index=\"20\" data-type=\"stmt\">return <span data-index=\"81\" data-type=\"expr\"><span data-index=\"171\" data-type=\"expr\">n</span> * <span data-index=\"173\" data-type=\"expr\"><span data-index=\"294\" data-type=\"expr\">factorial</span>(<span data-index=\"295\" data-type=\"expr\"><span data-index=\"405\" data-type=\"expr\">n</span> - 1</span>)</span></span></span></span>\n", "name": "factorial", "data": {"node_loops": {}}, "lineno": 8}}, {"return_value": "1", "arguments": [["n", "1"]], "exception": null, "data": {"type_names": ["MyClass", "NoneType", "SlotClass", "ValueError", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "long", "member_descriptor", "set", "str", "tuple", "type", "unicode", "wrapper_descriptor"], "loop_iterations": {}, "num_special_types": 13, "node_values": {"80": true, "79": ["True", "bool", {}], "167": ["1", "int", {}], "19": true}}, "traceback": null, "function": {"html_body": "<span data-index=\"4\" data-type=\"stmt\">@<span data-index=\"21\" data-type=\"expr\">eye</span>\ndef factorial(<span data-index=\"78\" data-type=\"expr\">n</span>):\n<span data-index=\"19\" data-type=\"stmt\">    if <span data-index=\"79\" data-type=\"expr\"><span data-index=\"167\" data-type=\"expr\">n</span> &lt;= 1</span>:\n        <span data-index=\"80\" data-type=\"stmt\">return 1</span></span>\n    <span data-index=\"20\" data-type=\"stmt\">return <span data-index=\"81\" data-type=\"expr\"><span data-index=\"171\" data-type=\"expr\">n</span> * <span data-index=\"173\" data-type=\"expr\"><span data-index=\"294\" data-type=\"expr\">factorial</span>(<span data-index=\"295\" data-type=\"expr\"><span data-index=\"405\" data-type=\"expr\">n</span> - 1</span>)</span></span></span></span>\n", "name": "factorial", "data": {"node_loops": {}}, "lineno": 8}}, {"return_value": "<tests.golden_script.MyClass object at 0xABC>", "arguments": [["self", "<tests.golden_script.MyClass object at 0xABC>"], ["other", "<tests.golden_script.MyClass object at 0xABC>"]], "exception": null, "data": {"type_names": ["MyClass", "NoneType", "SlotClass", "ValueError", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "long", "member_descriptor", "set", "str", "tuple", "type", "unicode", "wrapper_descriptor"], "loop_iterations": {}, "num_special_types": 13, "node_values": {"204": ["<tests.golden_script.MyClass object at 0xABC>", "MyClass", {}], "112": true}}, "traceback": null, "function": {"html_body": "<span data-index=\"40\" data-type=\"stmt\">    def __add__(<span data-index=\"202\" data-type=\"expr\">self</span>, <span data-index=\"203\" data-type=\"expr\">other</span>):\n        <span data-index=\"112\" data-type=\"stmt\">return <span data-index=\"204\" data-type=\"expr\">other</span></span></span>\n", "name": "MyClass.__add__", "data": {"node_loops": {}}, "lineno": 51}}, {"return_value": "None", "arguments": [["self", "<tests.golden_script.MyClass object at 0xABC>"]], "exception": null, "data": {"type_names": ["MyClass", "NoneType", "SlotClass", "ValueError", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "long", "member_descriptor", "set", "str", "tuple", "type", "unicode", "wrapper_descriptor"], "loop_iterations": {}, "num_special_types": 13, "node_values": {"114": true}}, "traceback": null, "function": {"html_body": "<span data-index=\"41\" data-type=\"stmt\">    def __enter__(<span data-index=\"205\" data-type=\"expr\">self</span>):\n        <span data-index=\"114\" data-type=\"stmt\">pass</span></span>\n", "name": "MyClass.__enter__", "data": {"node_loops": {}}, "lineno": 54}}, {"return_value": "None", "arguments": [["self", "<tests.golden_script.MyClass object at 0xABC>"], ["exc_type", "None"], ["exc_val", "None"], ["exc_tb", "None"]], "exception": null, "data": {"type_names": ["MyClass", "NoneType", "SlotClass", "ValueError", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "long", "member_descriptor", "set", "str", "tuple", "type", "unicode", "wrapper_descriptor"], "loop_iterations": {}, "num_special_types": 13, "node_values": {"116": true}}, "traceback": null, "function": {"html_body": "<span data-index=\"42\" data-type=\"stmt\">    def __exit__(<span data-index=\"206\" data-type=\"expr\">self</span>, <span data-index=\"207\" data-type=\"expr\">exc_type</span>, <span data-index=\"208\" data-type=\"expr\">exc_val</span>, <span data-index=\"209\" data-type=\"expr\">exc_tb</span>):\n        <span data-index=\"116\" data-type=\"stmt\">pass</span></span>\n", "name": "MyClass.__exit__", "data": {"node_loops": {}}, "lineno": 57}}, {"return_value": "<tests.golden_script.SlotClass object at 0xABC>", "arguments": [["self", "<tests.golden_script.MyClass object at 0xABC>"], ["other", "<tests.golden_script.SlotClass object at 0xABC>"]], "exception": null, "data": {"type_names": ["MyClass", "NoneType", "SlotClass", "ValueError", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "long", "member_descriptor", "set", "str", "tuple", "type", "unicode", "wrapper_descriptor"], "loop_iterations": {}, "num_special_types": 13, "node_values": {"204": ["<tests.golden_script.SlotClass object at 0xABC>", "SlotClass", {}, ["slot1", ["3", "int", {}]]], "112": true}}, "traceback": null, "function": {"html_body": "<span data-index=\"40\" data-type=\"stmt\">    def __add__(<span data-index=\"202\" data-type=\"expr\">self</span>, <span data-index=\"203\" data-type=\"expr\">other</span>):\n        <span data-index=\"112\" data-type=\"stmt\">return <span data-index=\"204\" data-type=\"expr\">other</span></span></span>\n", "name": "MyClass.__add__", "data": {"node_loops": {}}, "lineno": 51}}, {"return_value": "[[0, 1, 2, 3, 4, 5, ...], 'hello', {'kwarg1': {'key': 'value'}}]", "arguments": [["pos1", "[0, 1, 2, 3, 4, 5, ...]"], ["pos2", "'hello'"], ["key1", "3"], ["key2", "8"], ["args", "()"], ["kwargs", "{'kwarg1': {'key': 'value'}}"]], "exception": null, "data": {"type_names": ["MyClass", "NoneType", "SlotClass", "ValueError", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "long", "member_descriptor", "set", "str", "tuple", "type", "unicode", "wrapper_descriptor"], "loop_iterations": {}, "num_special_types": 13, "node_values": {"184": ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 1000}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["997", ["997", "int", {}]], ["998", ["998", "int", {}]], ["999", ["999", "int", {}]]], "185": ["'hello'", "str", {"len": 5}], "186": ["{'kwarg1': {'key': 'value'}}", "dict", {"len": 1}, ["'kwarg1'", ["{'key': 'value'}", "dict", {"len": 1}, ["'key'", ["'value'", "str", {"len": 5}]]]]], "94": ["[[0, 1, 2, 3, 4, 5, ...], 'hello', {'kwarg1': {'key': 'value'}}]", "list", {"len": 3}, ["0", ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 1000}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["997", ["997", "int", {}]], ["998", ["998", "int", {}]], ["999", ["999", "int", {}]]]], ["1", ["'hello'", "str", {"len": 5}]], ["2", ["{'kwarg1': {'key': 'value'}}", "dict", {"len": 1}, ["'kwarg1'", ["{'key': 'value'}", "dict", {"len": 1}, ["'key'", ["'value'", "str", {"len": 5}]]]]]]], "28": true}}, "traceback": null, "function": {"html_body": "<span data-index=\"7\" data-type=\"stmt\">@<span data-index=\"29\" data-type=\"expr\">eye</span>\ndef complex_args(<span data-index=\"88\" data-type=\"expr\">pos1</span>, <span data-index=\"89\" data-type=\"expr\">pos2</span>, <span data-index=\"90\" data-type=\"expr\">key1</span>=3, <span data-index=\"91\" data-type=\"expr\">key2</span>=4, *args, **kwargs):\n    <span data-index=\"28\" data-type=\"stmt\">return <span data-index=\"94\" data-type=\"expr\">[<span data-index=\"184\" data-type=\"expr\">pos1</span>, <span data-index=\"185\" data-type=\"expr\">pos2</span>, <span data-index=\"186\" data-type=\"expr\">kwargs</span>]</span></span></span>\n", "name": "complex_args", "data": {"node_loops": {}}, "lineno": 26}}, {"return_value": "[1, 2, {'k': 23}]", "arguments": [["pos1", "1"], ["pos2", "2"], ["key1", "3"], ["key2", "4"], ["args", "()"], ["kwargs", "{'k': 23}"]], "exception": null, "data": {"type_names": ["MyClass", "NoneType", "SlotClass", "ValueError", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "long", "member_descriptor", "set", "str", "tuple", "type", "unicode", "wrapper_descriptor"], "loop_iterations": {}, "num_special_types": 13, "node_values": {"184": ["1", "int", {}], "185": ["2", "int", {}], "186": ["{'k': 23}", "dict", {"len": 1}, ["'k'", ["23", "int", {}]]], "94": ["[1, 2, {'k': 23}]", "list", {"len": 3}, ["0", ["1", "int", {}]], ["1", ["2", "int", {}]], ["2", ["{'k': 23}", "dict", {"len": 1}, ["'k'", ["23", "int", {}]]]]], "28": true}}, "traceback": null, "function": {"html_body": "<span data-index=\"7\" data-type=\"stmt\">@<span data-index=\"29\" data-type=\"expr\">eye</span>\ndef complex_args(<span data-index=\"88\" data-type=\"expr\">pos1</span>, <span data-index=\"89\" data-type=\"expr\">pos2</span>, <span data-index=\"90\" data-type=\"expr\">key1</span>=3, <span data-index=\"91\" data-type=\"expr\">key2</span>=4, *args, **kwargs):\n    <span data-index=\"28\" data-type=\"stmt\">return <span data-index=\"94\" data-type=\"expr\">[<span data-index=\"184\" data-type=\"expr\">pos1</span>, <span data-index=\"185\" data-type=\"expr\">pos2</span>, <span data-index=\"186\" data-type=\"expr\">kwargs</span>]</span></span></span>\n", "name": "complex_args", "data": {"node_loops": {}}, "lineno": 26}}, {"return_value": "None", "arguments": [["g", "<generator object gen at 0xABC>"]], "exception": null, "data": {"type_names": ["MyClass", "NoneType", "SlotClass", "ValueError", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "long", "member_descriptor", "set", "str", "tuple", "type", "unicode", "wrapper_descriptor"], "loop_iterations": {"34": [{"loops": {}, "index": 0}, {"loops": {}, "index": 1}, {"loops": {}, "index": 2}]}, "num_special_types": 13, "node_values": {"306": {"2": ["<function dummy at 0xABC>", "function", {}], "1": ["<function dummy at 0xABC>", "function", {}], "0": ["<function dummy at 0xABC>", "function", {}]}, "34": true, "307": {"2": ["2", "int", {}], "1": ["1", "int", {}], "0": ["0", "int", {}]}, "102": ["<itertools.islice object at 0xABC>", "islice", {}], "103": {"2": true, "1": true, "0": true}, "197": {"2": ["None", "NoneType", {}], "1": ["None", "NoneType", {}], "0": ["None", "NoneType", {}]}, "195": ["<generator object gen at 0xABC>", "generator", {}], "194": ["<type 'itertools.islice'>", "type", {}, ["__doc__", ["'islice(iterab...s an iterator.'", "str", {"len": 416}]], ["__getattribute__", ["<slot wrapper '__getattribut...f 'itertools.islice' objects>", "wrapper_descriptor", {}]], ["__iter__", ["<slot wrapper '__iter__' of 'itertools.islice' objects>", "wrapper_descriptor", {}]], ["__new__", ["<built-in method __new__ of type object at 0xABC>", "builtin_function_or_method", {}]], ["next", ["<slot wrapper 'next' of 'itertools.islice' objects>", "wrapper_descriptor", {}]]]}}, "traceback": null, "function": {"html_body": "<span data-index=\"9\" data-type=\"stmt\">@<span data-index=\"35\" data-type=\"expr\">eye</span>\ndef use_gen_1(<span data-index=\"100\" data-type=\"expr\">g</span>):\n<span data-index=\"34\" data-type=\"loop\">    for x in <span data-index=\"102\" data-type=\"expr\"><span data-index=\"194\" data-type=\"expr\">islice</span>(<span data-index=\"195\" data-type=\"expr\">g</span>, 3)</span>:\n        <span data-index=\"103\" data-type=\"stmt\"><span data-index=\"197\" data-type=\"expr\"><span data-index=\"306\" data-type=\"expr\">dummy</span>(<span data-index=\"307\" data-type=\"expr\">x</span>)</span></span></span></span>\n", "name": "use_gen_1", "data": {"node_loops": {"197": [34], "306": [34], "103": [34], "307": [34]}}, "lineno": 37}}, {"return_value": "None", "arguments": [], "exception": null, "data": {"type_names": ["MyClass", "NoneType", "SlotClass", "ValueError", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "long", "member_descriptor", "set", "str", "tuple", "type", "unicode", "wrapper_descriptor"], "loop_iterations": {"31": [{"loops": {}, "index": 0}, {"loops": {}, "index": 1}, {"loops": {}, "index": 2}, {"loops": {}, "index": 3}, {"loops": {}, "index": 4}, {"loops": {}, "index": 5}]}, "num_special_types": 13, "node_values": {"97": ["[0, 1, 2, 3, 4, 5]", "list", {"len": 6}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["3", ["3", "int", {}]], ["4", ["4", "int", {}]], ["5", ["5", "int", {}]]], "31": true, "303": {"5": ["5", "int", {}], "4": ["4", "int", {}], "3": ["3", "int", {}], "2": ["2", "int", {}], "1": ["1", "int", {}], "0": ["0", "int", {}]}, "191": {"5": ["None", "NoneType", {}], "4": ["None", "NoneType", {}], "3": ["None", "NoneType", {}], "2": ["None", "NoneType", {}], "1": ["None", "NoneType", {}], "0": ["None", "NoneType", {}]}, "98": {"5": true, "4": true, "3": true, "2": true, "1": true, "0": true}}}, "traceback": null, "function": {"html_body": "<span data-index=\"8\" data-type=\"stmt\">@<span data-index=\"32\" data-type=\"expr\">eye</span>\ndef gen():\n<span data-index=\"31\" data-type=\"loop\">    for i in <span data-index=\"97\" data-type=\"expr\"><span data-index=\"189\" data-type=\"expr\">range</span>(6)</span>:\n        <span data-index=\"98\" data-type=\"stmt\"><span data-index=\"191\" data-type=\"expr\">yield <span data-index=\"303\" data-type=\"expr\">i</span></span></span></span></span>\n", "name": "gen", "data": {"node_loops": {"303": [31], "191": [31], "98": [31]}}, "lineno": 31}}, {"return_value": "None", "arguments": [["g", "<generator object gen at 0xABC>"]], "exception": null, "data": {"type_names": ["MyClass", "NoneType", "SlotClass", "ValueError", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "long", "member_descriptor", "set", "str", "tuple", "type", "unicode", "wrapper_descriptor"], "loop_iterations": {"37": [{"loops": {}, "index": 0}, {"loops": {}, "index": 1}, {"loops": {}, "index": 2}]}, "num_special_types": 13, "node_values": {"37": true, "308": {"2": ["<function dummy at 0xABC>", "function", {}], "1": ["<function dummy at 0xABC>", "function", {}], "0": ["<function dummy at 0xABC>", "function", {}]}, "309": {"2": ["5", "int", {}], "1": ["4", "int", {}], "0": ["3", "int", {}]}, "107": ["<generator object gen at 0xABC>", "generator", {}], "108": {"2": true, "1": true, "0": true}, "201": {"2": ["None", "NoneType", {}], "1": ["None", "NoneType", {}], "0": ["None", "NoneType", {}]}}}, "traceback": null, "function": {"html_body": "<span data-index=\"10\" data-type=\"stmt\">@<span data-index=\"38\" data-type=\"expr\">eye</span>\ndef use_gen_2(<span data-index=\"105\" data-type=\"expr\">g</span>):\n<span data-index=\"37\" data-type=\"loop\">    for y in <span data-index=\"107\" data-type=\"expr\">g</span>:\n        <span data-index=\"108\" data-type=\"stmt\"><span data-index=\"201\" data-type=\"expr\"><span data-index=\"308\" data-type=\"expr\">dummy</span>(<span data-index=\"309\" data-type=\"expr\">y</span>)</span></span></span></span>\n", "name": "use_gen_2", "data": {"node_loops": {"108": [37], "201": [37], "308": [37], "309": [37]}}, "lineno": 43}}]