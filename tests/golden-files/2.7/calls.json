[{"function": {"name": "main", "html_body": "<span data-index=\"12\" class=\"stmt\">@<span data-index=\"75\" class=\"\">eye</span>\ndef main():\n    <span data-index=\"45\" class=\"stmt\">assert <span data-index=\"118\" class=\"\"><span data-index=\"210\" class=\"\"><span data-index=\"318\" class=\"\">factorial</span>(3)</span> == 6</span></span>\n\n    <span data-index=\"46\" class=\"stmt\">vals = []</span>\n<span data-index=\"47\" class=\"loop stmt\">    for i in <span data-index=\"122\" class=\"\"><span data-index=\"216\" class=\"\">range</span>(100)</span>:\n        <span data-index=\"123\" class=\"stmt\"><span data-index=\"218\" class=\"\"><span data-index=\"321\" class=\"\"><span data-index=\"415\" class=\"\">vals</span>.append</span>([])</span></span>\n<span data-index=\"124\" class=\"loop stmt\">        for j in <span data-index=\"220\" class=\"\"><span data-index=\"324\" class=\"\">range</span>(<span data-index=\"325\" class=\"\">2 * <span data-index=\"421\" class=\"\">i</span></span>)</span>:\n            <span data-index=\"221\" class=\"stmt\"><span data-index=\"326\" class=\"\"><span data-index=\"422\" class=\"\"><span data-index=\"493\" class=\"\"><span data-index=\"538\" class=\"\">vals</span>[-1]</span>.append</span>(<span data-index=\"423\" class=\"\"><span data-index=\"495\" class=\"\">i</span> + <span data-index=\"497\" class=\"\">j</span></span>)</span></span>\n            <span data-index=\"222\" class=\"stmt\"><span data-index=\"327\" class=\"\"><span data-index=\"424\" class=\"\">dummy</span>(<span data-index=\"425\" class=\"\">vals</span>)</span></span></span></span>\n\n<span data-index=\"48\" class=\"loop stmt\">    for i in <span data-index=\"126\" class=\"\"><span data-index=\"224\" class=\"\">range</span>(6)</span>:\n<span data-index=\"127\" class=\"stmt\">        try:\n            <span data-index=\"226\" class=\"stmt\"><span data-index=\"329\" class=\"\"><span data-index=\"426\" class=\"\">dummy</span>(<span data-index=\"427\" class=\"\"><span data-index=\"501\" class=\"\">1 / (<span data-index=\"545\" class=\"\"><span data-index=\"558\" class=\"\">i</span> % 2</span>)</span> + 10</span>)</span></span>\n        except <span data-index=\"330\" class=\"\">ZeroDivisionError</span>:\n            <span data-index=\"331\" class=\"stmt\">continue</span></span>\n<span data-index=\"128\" class=\"stmt\">        if <span data-index=\"228\" class=\"\"><span data-index=\"332\" class=\"\">i</span> == 3</span>:\n            <span data-index=\"229\" class=\"stmt\">break</span></span></span>\n\n    <span data-index=\"49\" class=\"stmt\">c = <span data-index=\"130\" class=\"\"><span data-index=\"231\" class=\"\"><span data-index=\"335\" class=\"\">MyClass</span>()</span> + <span data-index=\"233\" class=\"\"><span data-index=\"336\" class=\"\">MyClass</span>()</span></span></span>\n    <span data-index=\"50\" class=\"stmt\"><span data-index=\"234\" class=\"\">c</span>.list = <span data-index=\"132\" class=\"\">[<span data-index=\"236\" class=\"\">[<span data-index=\"338\" class=\"\"><span data-index=\"432\" class=\"\">x</span> + <span data-index=\"434\" class=\"\">y</span></span> <span data-index=\"339\" class=\"loop\">for x in <span data-index=\"436\" class=\"\"><span data-index=\"507\" class=\"\">range</span>(100)</span></span>]</span> \n <span data-index=\"237\" class=\"loop\">for y in <span data-index=\"341\" class=\"\"><span data-index=\"438\" class=\"\">range</span>(100)</span></span>]</span></span>\n    <span data-index=\"51\" class=\"stmt\"><span data-index=\"133\" class=\"\"><span data-index=\"238\" class=\"\">dummy</span>(<span data-index=\"239\" class=\"\"><span data-index=\"343\" class=\"\">n</span> for n in <span data-index=\"442\" class=\"\"><span data-index=\"511\" class=\"\">range</span>(4)</span></span>)</span></span>\n    <span data-index=\"52\" class=\"stmt\"><span data-index=\"134\" class=\"\"><span data-index=\"240\" class=\"\">dummy</span>(<span data-index=\"241\" class=\"\">{<span data-index=\"346\" class=\"\">n</span> <span data-index=\"347\" class=\"loop\">for n in <span data-index=\"445\" class=\"\"><span data-index=\"514\" class=\"\">range</span>(4)</span></span>}</span>)</span></span>\n    <span data-index=\"53\" class=\"stmt\"><span data-index=\"135\" class=\"\"><span data-index=\"242\" class=\"\">dummy</span>(<span data-index=\"243\" class=\"\">{<span data-index=\"349\" class=\"\">n</span>: <span data-index=\"350\" class=\"\">n</span> <span data-index=\"351\" class=\"loop\">for n in <span data-index=\"449\" class=\"\"><span data-index=\"517\" class=\"\">range</span>(1)</span></span>}</span>)</span></span>\n<span data-index=\"54\" class=\"stmt\">    with <span data-index=\"136\" class=\"\">c</span>:\n        <span data-index=\"137\" class=\"stmt\">pass</span></span>\n    <span data-index=\"55\" class=\"stmt\"><span data-index=\"138\" class=\"\"><span data-index=\"245\" class=\"\">dummy</span>(<span data-index=\"246\" class=\"\"><span data-index=\"353\" class=\"\">c</span> + <span data-index=\"355\" class=\"\"><span data-index=\"451\" class=\"\">SlotClass</span>()</span></span>)</span></span>\n\n    <span data-index=\"56\" class=\"stmt\">assert <span data-index=\"139\" class=\"\"><span data-index=\"247\" class=\"\"><span data-index=\"356\" class=\"\">complex_args</span>(\n        <span data-index=\"357\" class=\"\"><span data-index=\"453\" class=\"\">list</span>(<span data-index=\"454\" class=\"\"><span data-index=\"521\" class=\"\">range</span>(1000)</span>)</span>,\n        &quot;hello&quot;,\n        key2=8,\n        kwarg1={&#x27;key&#x27;: &#x27;value&#x27;}\n    )</span> == <span data-index=\"249\" class=\"\">[<span data-index=\"361\" class=\"\"><span data-index=\"457\" class=\"\">list</span>(<span data-index=\"458\" class=\"\"><span data-index=\"526\" class=\"\">range</span>(1000)</span>)</span>,\n          &#x27;hello&#x27;,\n          <span data-index=\"363\" class=\"\"><span data-index=\"459\" class=\"\">dict</span>(kwarg1={&#x27;key&#x27;: &#x27;value&#x27;})</span>]</span></span></span>\n\n    <span data-index=\"57\" class=\"stmt\">assert <span data-index=\"140\" class=\"\"><span data-index=\"250\" class=\"\"><span data-index=\"365\" class=\"\">complex_args</span>(*[1, 2], **{&#x27;k&#x27;: 23})</span> == [1, 2, {&#x27;k&#x27;: 23}]</span></span>\n\n    <span data-index=\"58\" class=\"stmt\">assert <span data-index=\"141\" class=\"\"><span data-index=\"253\" class=\"\"><span data-index=\"372\" class=\"\">eval</span>(<span data-index=\"373\" class=\"\">&#x27;%s + %s&#x27; % (1, 2)</span>)</span> == 3</span></span>\n\n    <span data-index=\"59\" class=\"stmt\">x = 1</span>\n    <span data-index=\"60\" class=\"stmt\">x += 5</span>\n    <span data-index=\"61\" class=\"stmt\">assert <span data-index=\"147\" class=\"\"><span data-index=\"258\" class=\"\">x</span> == 6</span></span>\n    <span data-index=\"62\" class=\"stmt\">del x</span>\n\n    <span data-index=\"63\" class=\"stmt\"><span data-index=\"149\" class=\"\"><span data-index=\"262\" class=\"\">dummy</span>(<span data-index=\"263\" class=\"\">True</span>, <span data-index=\"264\" class=\"\">False</span>, <span data-index=\"265\" class=\"\">None</span>)</span></span>\n\n    <span data-index=\"64\" class=\"stmt\">assert <span data-index=\"150\" class=\"\"><span data-index=\"266\" class=\"\">[1, 2, 3][1]</span> == 2</span></span>\n    <span data-index=\"65\" class=\"stmt\">assert <span data-index=\"151\" class=\"\"><span data-index=\"269\" class=\"\">(1, 2, 3)[:2]</span> == (1, 2)</span></span>\n\n<span data-index=\"66\" class=\"stmt\"><span data-index=\"152\" class=\"stmt\">    try:\n        <span data-index=\"272\" class=\"stmt\">raise <span data-index=\"388\" class=\"\"><span data-index=\"483\" class=\"\">ValueError</span>()</span></span>\n    except <span data-index=\"389\" class=\"\">AssertionError</span> as e:\n        <span data-index=\"391\" class=\"stmt\">pass</span>\n    except <span data-index=\"392\" class=\"\">TypeError</span>:\n        <span data-index=\"393\" class=\"stmt\">pass</span>\n    except:\n        <span data-index=\"394\" class=\"stmt\">pass</span></span>\n    finally:\n        <span data-index=\"153\" class=\"stmt\"><span data-index=\"276\" class=\"\"><span data-index=\"395\" class=\"\">dummy</span>()</span></span></span>\n\n<span data-index=\"67\" class=\"loop stmt\">    while <span data-index=\"154\" class=\"\">True</span>:\n        <span data-index=\"155\" class=\"stmt\">break</span></span>\n\n    <span data-index=\"68\" class=\"stmt\">assert <span data-index=\"156\" class=\"\"><span data-index=\"278\" class=\"\">(<span data-index=\"396\" class=\"\">lambda <span data-index=\"534\" class=\"\">x</span>: <span data-index=\"489\" class=\"\"><span data-index=\"535\" class=\"\">x</span> * 2</span></span>)(4)</span> == 8</span></span>\n\n    <span data-index=\"69\" class=\"stmt\">global G</span>\n    <span data-index=\"70\" class=\"stmt\">G = 4</span>\n    <span data-index=\"71\" class=\"stmt\">assert <span data-index=\"159\" class=\"\"><span data-index=\"282\" class=\"\">G</span> == 4</span></span>\n\n    <span data-index=\"72\" class=\"stmt\">g = <span data-index=\"161\" class=\"\"><span data-index=\"286\" class=\"\">gen</span>()</span></span>\n    <span data-index=\"73\" class=\"stmt\"><span data-index=\"162\" class=\"\"><span data-index=\"287\" class=\"\">use_gen_1</span>(<span data-index=\"288\" class=\"\">g</span>)</span></span>\n    <span data-index=\"74\" class=\"stmt\"><span data-index=\"163\" class=\"\"><span data-index=\"289\" class=\"\">use_gen_2</span>(<span data-index=\"290\" class=\"\">g</span>)</span></span></span>", "lineno": 61, "data": {"node_loops": {"415": [47], "228": [48], "229": [48], "222": [47, 124], "436": [237], "220": [47], "221": [47, 124], "226": [48], "432": [237, 339], "124": [47], "127": [48], "123": [47], "128": [48], "343": [344], "327": [47, 124], "326": [47, 124], "325": [47], "324": [47], "321": [47], "346": [347], "349": [351], "497": [47, 124], "507": [237], "493": [47, 124], "331": [48], "434": [237, 339], "155": [67], "545": [48], "424": [47, 124], "425": [47, 124], "426": [48], "427": [48], "421": [47], "236": [237], "423": [47, 124], "495": [47, 124], "422": [47, 124], "501": [48], "338": [237, 339], "332": [48], "330": [48], "329": [48], "538": [47, 124], "558": [48], "339": [237], "350": [351], "218": [47]}}}, "traceback": null, "arguments": [], "return_value": "None", "exception": null, "data": {"type_names": ["MyClass", "NoneType", "SlotClass", "ValueError", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "long", "member_descriptor", "set", "str", "tuple", "type", "unicode", "wrapper_descriptor"], "loop_iterations": {"67": [{"index": 0, "loops": {}}], "237": [{"index": 0, "loops": {"339": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}, {"index": 2, "loops": {}}, {"index": 97, "loops": {}}, {"index": 98, "loops": {}}, {"index": 99, "loops": {}}]}}, {"index": 1, "loops": {"339": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}, {"index": 2, "loops": {}}, {"index": 97, "loops": {}}, {"index": 98, "loops": {}}, {"index": 99, "loops": {}}]}}, {"index": 2, "loops": {"339": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}, {"index": 2, "loops": {}}, {"index": 97, "loops": {}}, {"index": 98, "loops": {}}, {"index": 99, "loops": {}}]}}, {"index": 97, "loops": {"339": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}, {"index": 2, "loops": {}}, {"index": 97, "loops": {}}, {"index": 98, "loops": {}}, {"index": 99, "loops": {}}]}}, {"index": 98, "loops": {"339": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}, {"index": 2, "loops": {}}, {"index": 97, "loops": {}}, {"index": 98, "loops": {}}, {"index": 99, "loops": {}}]}}, {"index": 99, "loops": {"339": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}, {"index": 2, "loops": {}}, {"index": 97, "loops": {}}, {"index": 98, "loops": {}}, {"index": 99, "loops": {}}]}}], "47": [{"index": 0, "loops": {}}, {"index": 1, "loops": {"124": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}]}}, {"index": 2, "loops": {"124": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}, {"index": 2, "loops": {}}, {"index": 3, "loops": {}}]}}, {"index": 97, "loops": {"124": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}, {"index": 2, "loops": {}}, {"index": 191, "loops": {}}, {"index": 192, "loops": {}}, {"index": 193, "loops": {}}]}}, {"index": 98, "loops": {"124": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}, {"index": 2, "loops": {}}, {"index": 193, "loops": {}}, {"index": 194, "loops": {}}, {"index": 195, "loops": {}}]}}, {"index": 99, "loops": {"124": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}, {"index": 2, "loops": {}}, {"index": 195, "loops": {}}, {"index": 196, "loops": {}}, {"index": 197, "loops": {}}]}}], "347": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}, {"index": 2, "loops": {}}, {"index": 3, "loops": {}}], "48": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}, {"index": 2, "loops": {}}, {"index": 3, "loops": {}}], "351": [{"index": 0, "loops": {}}]}, "num_special_types": 13, "node_values": {"228": {"1": ["False", "bool", {}], "3": ["True", "bool", {}]}, "229": {"3": ["", -2, {}]}, "222": {"4": {"4": ["", -2, {}], "5": ["", -2, {}], "0": ["", -2, {}], "1": ["", -2, {}], "2": ["", -2, {}], "3": ["", -2, {}]}, "5": {"4": ["", -2, {}], "5": ["", -2, {}], "0": ["", -2, {}], "1": ["", -2, {}], "2": ["", -2, {}], "3": ["", -2, {}]}, "1": {"0": ["", -2, {}], "1": ["", -2, {}]}, "2": {"0": ["", -2, {}], "1": ["", -2, {}], "2": ["", -2, {}], "3": ["", -2, {}]}, "3": {"4": ["", -2, {}], "5": ["", -2, {}], "0": ["", -2, {}], "1": ["", -2, {}], "2": ["", -2, {}], "3": ["", -2, {}]}}, "436": {"4": ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 100}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["97", ["97", "int", {}]], ["98", ["98", "int", {}]], ["99", ["99", "int", {}]]], "5": ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 100}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["97", ["97", "int", {}]], ["98", ["98", "int", {}]], ["99", ["99", "int", {}]]], "0": ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 100}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["97", ["97", "int", {}]], ["98", ["98", "int", {}]], ["99", ["99", "int", {}]]], "1": ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 100}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["97", ["97", "int", {}]], ["98", ["98", "int", {}]], ["99", ["99", "int", {}]]], "2": ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 100}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["97", ["97", "int", {}]], ["98", ["98", "int", {}]], ["99", ["99", "int", {}]]], "3": ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 100}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["97", ["97", "int", {}]], ["98", ["98", "int", {}]], ["99", ["99", "int", {}]]]}, "220": {"4": ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 196}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["193", ["193", "int", {}]], ["194", ["194", "int", {}]], ["195", ["195", "int", {}]]], "5": ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 198}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["195", ["195", "int", {}]], ["196", ["196", "int", {}]], ["197", ["197", "int", {}]]], "0": ["[]", "list", {"len": 0}], "1": ["[0, 1]", "list", {"len": 2}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]]], "2": ["[0, 1, 2, 3]", "list", {"len": 4}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["3", ["3", "int", {}]]], "3": ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 194}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["191", ["191", "int", {}]], ["192", ["192", "int", {}]], ["193", ["193", "int", {}]]]}, "434": {"4": {"4": ["98", "int", {}], "5": ["98", "int", {}], "0": ["98", "int", {}], "1": ["98", "int", {}], "2": ["98", "int", {}], "3": ["98", "int", {}]}, "5": {"4": ["99", "int", {}], "5": ["99", "int", {}], "0": ["99", "int", {}], "1": ["99", "int", {}], "2": ["99", "int", {}], "3": ["99", "int", {}]}, "0": {"4": ["0", "int", {}], "5": ["0", "int", {}], "0": ["0", "int", {}], "1": ["0", "int", {}], "2": ["0", "int", {}], "3": ["0", "int", {}]}, "1": {"4": ["1", "int", {}], "5": ["1", "int", {}], "0": ["1", "int", {}], "1": ["1", "int", {}], "2": ["1", "int", {}], "3": ["1", "int", {}]}, "2": {"4": ["2", "int", {}], "5": ["2", "int", {}], "0": ["2", "int", {}], "1": ["2", "int", {}], "2": ["2", "int", {}], "3": ["2", "int", {}]}, "3": {"4": ["97", "int", {}], "5": ["97", "int", {}], "0": ["97", "int", {}], "1": ["97", "int", {}], "2": ["97", "int", {}], "3": ["97", "int", {}]}}, "226": {"0": ["", -2, {}], "1": ["", -2, {}], "2": ["", -2, {}], "3": ["", -2, {}]}, "432": {"4": {"4": ["98", "int", {}], "5": ["99", "int", {}], "0": ["0", "int", {}], "1": ["1", "int", {}], "2": ["2", "int", {}], "3": ["97", "int", {}]}, "5": {"4": ["98", "int", {}], "5": ["99", "int", {}], "0": ["0", "int", {}], "1": ["1", "int", {}], "2": ["2", "int", {}], "3": ["97", "int", {}]}, "0": {"4": ["98", "int", {}], "5": ["99", "int", {}], "0": ["0", "int", {}], "1": ["1", "int", {}], "2": ["2", "int", {}], "3": ["97", "int", {}]}, "1": {"4": ["98", "int", {}], "5": ["99", "int", {}], "0": ["0", "int", {}], "1": ["1", "int", {}], "2": ["2", "int", {}], "3": ["97", "int", {}]}, "2": {"4": ["98", "int", {}], "5": ["99", "int", {}], "0": ["0", "int", {}], "1": ["1", "int", {}], "2": ["2", "int", {}], "3": ["97", "int", {}]}, "3": {"4": ["98", "int", {}], "5": ["99", "int", {}], "0": ["0", "int", {}], "1": ["1", "int", {}], "2": ["2", "int", {}], "3": ["97", "int", {}]}}, "161": ["<generator object gen at 0xABC>", "generator", {}], "163": ["None", "NoneType", {"inner_call": "test_id_13"}], "162": ["None", "NoneType", {"inner_call": "test_id_11"}], "495": {"4": {"4": ["98", "int", {}], "5": ["98", "int", {}], "0": ["98", "int", {}], "1": ["98", "int", {}], "2": ["98", "int", {}], "3": ["98", "int", {}]}, "5": {"4": ["99", "int", {}], "5": ["99", "int", {}], "0": ["99", "int", {}], "1": ["99", "int", {}], "2": ["99", "int", {}], "3": ["99", "int", {}]}, "1": {"0": ["1", "int", {}], "1": ["1", "int", {}]}, "2": {"0": ["2", "int", {}], "1": ["2", "int", {}], "2": ["2", "int", {}], "3": ["2", "int", {}]}, "3": {"4": ["97", "int", {}], "5": ["97", "int", {}], "0": ["97", "int", {}], "1": ["97", "int", {}], "2": ["97", "int", {}], "3": ["97", "int", {}]}}, "327": {"4": {"4": ["None", "NoneType", {}], "5": ["None", "NoneType", {}], "0": ["None", "NoneType", {}], "1": ["None", "NoneType", {}], "2": ["None", "NoneType", {}], "3": ["None", "NoneType", {}]}, "5": {"4": ["None", "NoneType", {}], "5": ["None", "NoneType", {}], "0": ["None", "NoneType", {}], "1": ["None", "NoneType", {}], "2": ["None", "NoneType", {}], "3": ["None", "NoneType", {}]}, "1": {"0": ["None", "NoneType", {}], "1": ["None", "NoneType", {}]}, "2": {"0": ["None", "NoneType", {}], "1": ["None", "NoneType", {}], "2": ["None", "NoneType", {}], "3": ["None", "NoneType", {}]}, "3": {"4": ["None", "NoneType", {}], "5": ["None", "NoneType", {}], "0": ["None", "NoneType", {}], "1": ["None", "NoneType", {}], "2": ["None", "NoneType", {}], "3": ["None", "NoneType", {}]}}, "326": {"4": {"4": ["None", "NoneType", {}], "5": ["None", "NoneType", {}], "0": ["None", "NoneType", {}], "1": ["None", "NoneType", {}], "2": ["None", "NoneType", {}], "3": ["None", "NoneType", {}]}, "5": {"4": ["None", "NoneType", {}], "5": ["None", "NoneType", {}], "0": ["None", "NoneType", {}], "1": ["None", "NoneType", {}], "2": ["None", "NoneType", {}], "3": ["None", "NoneType", {}]}, "1": {"0": ["None", "NoneType", {}], "1": ["None", "NoneType", {}]}, "2": {"0": ["None", "NoneType", {}], "1": ["None", "NoneType", {}], "2": ["None", "NoneType", {}], "3": ["None", "NoneType", {}]}, "3": {"4": ["None", "NoneType", {}], "5": ["None", "NoneType", {}], "0": ["None", "NoneType", {}], "1": ["None", "NoneType", {}], "2": ["None", "NoneType", {}], "3": ["None", "NoneType", {}]}}, "325": {"4": ["196", "int", {}], "5": ["198", "int", {}], "0": ["0", "int", {}], "1": ["2", "int", {}], "2": ["4", "int", {}], "3": ["194", "int", {}]}, "321": {"4": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "5": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "0": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "1": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "2": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "3": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}]}, "290": ["<generator object gen at 0xABC>", "generator", {}], "329": {"1": ["None", "NoneType", {}], "3": ["None", "NoneType", {}]}, "221": {"4": {"4": ["", -2, {}], "5": ["", -2, {}], "0": ["", -2, {}], "1": ["", -2, {}], "2": ["", -2, {}], "3": ["", -2, {}]}, "5": {"4": ["", -2, {}], "5": ["", -2, {}], "0": ["", -2, {}], "1": ["", -2, {}], "2": ["", -2, {}], "3": ["", -2, {}]}, "1": {"0": ["", -2, {}], "1": ["", -2, {}]}, "2": {"0": ["", -2, {}], "1": ["", -2, {}], "2": ["", -2, {}], "3": ["", -2, {}]}, "3": {"4": ["", -2, {}], "5": ["", -2, {}], "0": ["", -2, {}], "1": ["", -2, {}], "2": ["", -2, {}], "3": ["", -2, {}]}}, "424": {"4": {"4": ["<function dummy at 0xABC>", "function", {}], "5": ["<function dummy at 0xABC>", "function", {}], "0": ["<function dummy at 0xABC>", "function", {}], "1": ["<function dummy at 0xABC>", "function", {}], "2": ["<function dummy at 0xABC>", "function", {}], "3": ["<function dummy at 0xABC>", "function", {}]}, "5": {"4": ["<function dummy at 0xABC>", "function", {}], "5": ["<function dummy at 0xABC>", "function", {}], "0": ["<function dummy at 0xABC>", "function", {}], "1": ["<function dummy at 0xABC>", "function", {}], "2": ["<function dummy at 0xABC>", "function", {}], "3": ["<function dummy at 0xABC>", "function", {}]}, "1": {"0": ["<function dummy at 0xABC>", "function", {}], "1": ["<function dummy at 0xABC>", "function", {}]}, "2": {"0": ["<function dummy at 0xABC>", "function", {}], "1": ["<function dummy at 0xABC>", "function", {}], "2": ["<function dummy at 0xABC>", "function", {}], "3": ["<function dummy at 0xABC>", "function", {}]}, "3": {"4": ["<function dummy at 0xABC>", "function", {}], "5": ["<function dummy at 0xABC>", "function", {}], "0": ["<function dummy at 0xABC>", "function", {}], "1": ["<function dummy at 0xABC>", "function", {}], "2": ["<function dummy at 0xABC>", "function", {}], "3": ["<function dummy at 0xABC>", "function", {}]}}, "425": {"4": {"4": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 195}]]], "5": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 196}]]], "0": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98]", "list", {"len": 1}]]], "1": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99]", "list", {"len": 2}]]], "2": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100]", "list", {"len": 3}]]], "3": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 194}]]]}, "5": {"4": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 100}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 196}]], ["99", ["[99, 100, 101, 102, 103, 104, ...]", "list", {"len": 197}]]], "5": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 100}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 196}]], ["99", ["[99, 100, 101, 102, 103, 104, ...]", "list", {"len": 198}]]], "0": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 100}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 196}]], ["99", ["[99]", "list", {"len": 1}]]], "1": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 100}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 196}]], ["99", ["[99, 100]", "list", {"len": 2}]]], "2": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 100}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 196}]], ["99", ["[99, 100, 101]", "list", {"len": 3}]]], "3": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 100}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 196}]], ["99", ["[99, 100, 101, 102, 103, 104, ...]", "list", {"len": 196}]]]}, "1": {"0": ["[[], [1]]", "list", {"len": 2}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1]", "list", {"len": 1}]]], "1": ["[[], [1, 2]]", "list", {"len": 2}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]]]}, "2": {"0": ["[[], [1, 2], [2]]", "list", {"len": 3}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2]", "list", {"len": 1}]]], "1": ["[[], [1, 2], [2, 3]]", "list", {"len": 3}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3]", "list", {"len": 2}]]], "2": ["[[], [1, 2], [2, 3, 4]]", "list", {"len": 3}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4]", "list", {"len": 3}]]], "3": ["[[], [1, 2], [2, 3, 4, 5]]", "list", {"len": 3}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]]]}, "3": {"4": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list", {"len": 190}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 193}]]], "5": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list", {"len": 190}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]]], "0": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list", {"len": 190}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97]", "list", {"len": 1}]]], "1": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list", {"len": 190}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98]", "list", {"len": 2}]]], "2": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list", {"len": 190}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99]", "list", {"len": 3}]]], "3": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list", {"len": 190}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 192}]]]}}, "426": {"0": ["<function dummy at 0xABC>", "function", {}], "1": ["<function dummy at 0xABC>", "function", {}], "2": ["<function dummy at 0xABC>", "function", {}], "3": ["<function dummy at 0xABC>", "function", {}]}, "427": {"1": ["11", "int", {}], "3": ["11", "int", {}]}, "421": {"4": ["98", "int", {}], "5": ["99", "int", {}], "0": ["0", "int", {}], "1": ["1", "int", {}], "2": ["2", "int", {}], "3": ["97", "int", {}]}, "422": {"4": {"4": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "5": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "0": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "1": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "2": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "3": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}]}, "5": {"4": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "5": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "0": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "1": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "2": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "3": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}]}, "1": {"0": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "1": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}]}, "2": {"0": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "1": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "2": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "3": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}]}, "3": {"4": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "5": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "0": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "1": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "2": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}], "3": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method", {}]}}, "423": {"4": {"4": ["292", "int", {}], "5": ["293", "int", {}], "0": ["98", "int", {}], "1": ["99", "int", {}], "2": ["100", "int", {}], "3": ["291", "int", {}]}, "5": {"4": ["295", "int", {}], "5": ["296", "int", {}], "0": ["99", "int", {}], "1": ["100", "int", {}], "2": ["101", "int", {}], "3": ["294", "int", {}]}, "1": {"0": ["1", "int", {}], "1": ["2", "int", {}]}, "2": {"0": ["2", "int", {}], "1": ["3", "int", {}], "2": ["4", "int", {}], "3": ["5", "int", {}]}, "3": {"4": ["289", "int", {}], "5": ["290", "int", {}], "0": ["97", "int", {}], "1": ["98", "int", {}], "2": ["99", "int", {}], "3": ["288", "int", {}]}}, "47": ["", -2, {}], "46": ["", -2, {}], "45": ["", -2, {}], "357": ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 1000}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["997", ["997", "int", {}]], ["998", ["998", "int", {}]], ["999", ["999", "int", {}]]], "242": ["<function dummy at 0xABC>", "function", {}], "49": ["", -2, {}], "48": ["", -2, {}], "124": {"4": ["", -2, {}], "5": ["", -2, {}], "0": ["", -2, {}], "1": ["", -2, {}], "2": ["", -2, {}], "3": ["", -2, {}]}, "127": {"0": ["", -2, {}], "1": ["", -2, {}], "2": ["", -2, {}], "3": ["", -2, {}]}, "335": ["<class 'tests.golden_script.MyClass'>", "type", {}, ["__add__", ["<function __add__ at 0xABC>", "function", {}]], ["__dict__", ["<attribute '__dict__' of 'MyClass' objects>", "getset_descriptor", {}]], ["__doc__", ["None", "NoneType", {}]], ["__enter__", ["<function __enter__ at 0xABC>", "function", {}]], ["__exit__", ["<function __exit__ at 0xABC>", "function", {}]], ["__module__", ["'tests.golden_script'", "str", {"len": 19}]], ["__weakref__", ["<attribute '__weakref__' of 'MyClass' objects>", "getset_descriptor", {}]]], "336": ["<class 'tests.golden_script.MyClass'>", "type", {}, ["__add__", ["<function __add__ at 0xABC>", "function", {}]], ["__dict__", ["<attribute '__dict__' of 'MyClass' objects>", "getset_descriptor", {}]], ["__doc__", ["None", "NoneType", {}]], ["__enter__", ["<function __enter__ at 0xABC>", "function", {}]], ["__exit__", ["<function __exit__ at 0xABC>", "function", {}]], ["__module__", ["'tests.golden_script'", "str", {"len": 19}]], ["__weakref__", ["<attribute '__weakref__' of 'MyClass' objects>", "getset_descriptor", {}]]], "126": ["[0, 1, 2, 3, 4, 5]", "list", {"len": 6}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["3", ["3", "int", {}]], ["4", ["4", "int", {}]], ["5", ["5", "int", {}]]], "331": {"0": ["", -2, {}], "2": ["", -2, {}]}, "332": {"1": ["1", "int", {}], "3": ["3", "int", {}]}, "210": ["6", "int", {"inner_call": "test_id_2"}], "338": {"4": {"4": ["196", "int", {}], "5": ["197", "int", {}], "0": ["98", "int", {}], "1": ["99", "int", {}], "2": ["100", "int", {}], "3": ["195", "int", {}]}, "5": {"4": ["197", "int", {}], "5": ["198", "int", {}], "0": ["99", "int", {}], "1": ["100", "int", {}], "2": ["101", "int", {}], "3": ["196", "int", {}]}, "0": {"4": ["98", "int", {}], "5": ["99", "int", {}], "0": ["0", "int", {}], "1": ["1", "int", {}], "2": ["2", "int", {}], "3": ["97", "int", {}]}, "1": {"4": ["99", "int", {}], "5": ["100", "int", {}], "0": ["1", "int", {}], "1": ["2", "int", {}], "2": ["3", "int", {}], "3": ["98", "int", {}]}, "2": {"4": ["100", "int", {}], "5": ["101", "int", {}], "0": ["2", "int", {}], "1": ["3", "int", {}], "2": ["4", "int", {}], "3": ["99", "int", {}]}, "3": {"4": ["195", "int", {}], "5": ["196", "int", {}], "0": ["97", "int", {}], "1": ["98", "int", {}], "2": ["99", "int", {}], "3": ["194", "int", {}]}}, "339": {"4": ["", -2, {}], "5": ["", -2, {}], "0": ["", -2, {}], "1": ["", -2, {}], "2": ["", -2, {}], "3": ["", -2, {}]}, "218": {"4": ["None", "NoneType", {}], "5": ["None", "NoneType", {}], "0": ["None", "NoneType", {}], "1": ["None", "NoneType", {}], "2": ["None", "NoneType", {}], "3": ["None", "NoneType", {}]}, "458": ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 1000}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["997", ["997", "int", {}]], ["998", ["998", "int", {}]], ["999", ["999", "int", {}]]], "141": ["True", "bool", {}], "140": ["True", "bool", {}], "147": ["True", "bool", {}], "74": ["", -2, {}], "451": ["<class 'tests.golden_script.SlotClass'>", "type", {}, ["__doc__", ["None", "NoneType", {}]], ["__init__", ["<function __init__ at 0xABC>", "function", {}]], ["__module__", ["'tests.golden_script'", "str", {"len": 19}]], ["__slots__", ["('slot1',)", "tuple", {"len": 1}, ["0", ["'slot1'", "str", {"len": 5}]]]], ["slot1", ["<member 'slot1' of 'SlotClass' objects>", "member_descriptor", {}]]], "149": ["None", "NoneType", {}], "454": ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 1000}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["997", ["997", "int", {}]], ["998", ["998", "int", {}]], ["999", ["999", "int", {}]]], "288": ["<generator object gen at 0xABC>", "generator", {}], "289": ["<function use_gen_2 at 0xABC>", "function", {}], "286": ["<function gen at 0xABC>", "function", {}], "287": ["<function use_gen_1 at 0xABC>", "function", {}], "282": ["4", "int", {}], "341": ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 100}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["97", ["97", "int", {}]], ["98", ["98", "int", {}]], ["99", ["99", "int", {}]]], "545": {"0": ["0", "int", {}], "1": ["1", "int", {}], "2": ["0", "int", {}], "3": ["1", "int", {}]}, "347": ["", -2, {}], "346": {"0": ["0", "int", {}], "1": ["1", "int", {}], "2": ["2", "int", {}], "3": ["3", "int", {}]}, "349": {"0": ["0", "int", {}]}, "150": ["True", "bool", {}], "151": ["True", "bool", {}], "152": ["", -2, {}], "153": ["", -2, {}], "155": {"0": ["", -2, {}]}, "156": ["True", "bool", {}], "159": ["True", "bool", {}], "373": ["'1 + 2'", "str", {"len": 5}], "272": ["ValueError\n", -1, {}], "442": ["[0, 1, 2, 3]", "list", {"len": 4}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["3", ["3", "int", {}]]], "276": ["None", "NoneType", {}], "356": ["<function complex_args at 0xABC>", "function", {}], "278": ["8", "int", {}], "355": ["<tests.golden_script.SlotClass object at 0xABC>", "SlotClass", {}, ["slot1", ["3", "int", {}]]], "558": {"0": ["0", "int", {}], "1": ["1", "int", {}], "2": ["2", "int", {}], "3": ["3", "int", {}]}, "353": ["<tests.golden_script.MyClass object at 0xABC>", "MyClass", {}, ["list", ["[[0, 1, 2, 3, 4, 5, ...], [1, 2, 3, 4, 5, 6, ...], [2, 3, 4, 5, 6, 7, ...], [3, 4, 5, 6, 7, 8, ...], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 100}, ["0", ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 100}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["97", ["97", "int", {}]], ["98", ["98", "int", {}]], ["99", ["99", "int", {}]]]], ["1", ["[1, 2, 3, 4, 5, 6, ...]", "list", {"len": 100}, ["0", ["1", "int", {}]], ["1", ["2", "int", {}]], ["2", ["3", "int", {}]], ["97", ["98", "int", {}]], ["98", ["99", "int", {}]], ["99", ["100", "int", {}]]]], ["2", ["[2, 3, 4, 5, 6, 7, ...]", "list", {"len": 100}, ["0", ["2", "int", {}]], ["1", ["3", "int", {}]], ["2", ["4", "int", {}]], ["97", ["99", "int", {}]], ["98", ["100", "int", {}]], ["99", ["101", "int", {}]]]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 100}, ["0", ["97", "int", {}]], ["1", ["98", "int", {}]], ["2", ["99", "int", {}]], ["97", ["194", "int", {}]], ["98", ["195", "int", {}]], ["99", ["196", "int", {}]]]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 100}, ["0", ["98", "int", {}]], ["1", ["99", "int", {}]], ["2", ["100", "int", {}]], ["97", ["195", "int", {}]], ["98", ["196", "int", {}]], ["99", ["197", "int", {}]]]], ["99", ["[99, 100, 101, 102, 103, 104, ...]", "list", {"len": 100}, ["0", ["99", "int", {}]], ["1", ["100", "int", {}]], ["2", ["101", "int", {}]], ["97", ["196", "int", {}]], ["98", ["197", "int", {}]], ["99", ["198", "int", {}]]]]]]], "350": {"0": ["0", "int", {}]}, "351": ["", -2, {}], "394": ["", -2, {}], "395": ["<function dummy at 0xABC>", "function", {}], "72": ["", -2, {}], "73": ["", -2, {}], "70": ["", -2, {}], "71": ["", -2, {}], "123": {"4": ["", -2, {}], "5": ["", -2, {}], "0": ["", -2, {}], "1": ["", -2, {}], "2": ["", -2, {}], "3": ["", -2, {}]}, "122": ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 100}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["97", ["97", "int", {}]], ["98", ["98", "int", {}]], ["99", ["99", "int", {}]]], "128": {"1": ["", -2, {}], "3": ["", -2, {}]}, "497": {"4": {"4": ["194", "int", {}], "5": ["195", "int", {}], "0": ["0", "int", {}], "1": ["1", "int", {}], "2": ["2", "int", {}], "3": ["193", "int", {}]}, "5": {"4": ["196", "int", {}], "5": ["197", "int", {}], "0": ["0", "int", {}], "1": ["1", "int", {}], "2": ["2", "int", {}], "3": ["195", "int", {}]}, "1": {"0": ["0", "int", {}], "1": ["1", "int", {}]}, "2": {"0": ["0", "int", {}], "1": ["1", "int", {}], "2": ["2", "int", {}], "3": ["3", "int", {}]}, "3": {"4": ["192", "int", {}], "5": ["193", "int", {}], "0": ["0", "int", {}], "1": ["1", "int", {}], "2": ["2", "int", {}], "3": ["191", "int", {}]}}, "269": ["(1, 2)", "tuple", {"len": 2}, ["0", ["1", "int", {}]], ["1", ["2", "int", {}]]], "266": ["2", "int", {}], "361": ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 1000}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["997", ["997", "int", {}]], ["998", ["998", "int", {}]], ["999", ["999", "int", {}]]], "262": ["<function dummy at 0xABC>", "function", {}], "365": ["<function complex_args at 0xABC>", "function", {}], "118": ["True", "bool", {}], "132": ["[[0, 1, 2, 3, 4, 5, ...], [1, 2, 3, 4, 5, 6, ...], [2, 3, 4, 5, 6, 7, ...], [3, 4, 5, 6, 7, 8, ...], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 100}, ["0", ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 100}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["97", ["97", "int", {}]], ["98", ["98", "int", {}]], ["99", ["99", "int", {}]]]], ["1", ["[1, 2, 3, 4, 5, 6, ...]", "list", {"len": 100}, ["0", ["1", "int", {}]], ["1", ["2", "int", {}]], ["2", ["3", "int", {}]], ["97", ["98", "int", {}]], ["98", ["99", "int", {}]], ["99", ["100", "int", {}]]]], ["2", ["[2, 3, 4, 5, 6, 7, ...]", "list", {"len": 100}, ["0", ["2", "int", {}]], ["1", ["3", "int", {}]], ["2", ["4", "int", {}]], ["97", ["99", "int", {}]], ["98", ["100", "int", {}]], ["99", ["101", "int", {}]]]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 100}, ["0", ["97", "int", {}]], ["1", ["98", "int", {}]], ["2", ["99", "int", {}]], ["97", ["194", "int", {}]], ["98", ["195", "int", {}]], ["99", ["196", "int", {}]]]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 100}, ["0", ["98", "int", {}]], ["1", ["99", "int", {}]], ["2", ["100", "int", {}]], ["97", ["195", "int", {}]], ["98", ["196", "int", {}]], ["99", ["197", "int", {}]]]], ["99", ["[99, 100, 101, 102, 103, 104, ...]", "list", {"len": 100}, ["0", ["99", "int", {}]], ["1", ["100", "int", {}]], ["2", ["101", "int", {}]], ["97", ["196", "int", {}]], ["98", ["197", "int", {}]], ["99", ["198", "int", {}]]]]], "133": ["None", "NoneType", {}], "130": ["<tests.golden_script.MyClass object at 0xABC>", "MyClass", {"inner_call": "test_id_5"}], "136": ["<tests.golden_script.MyClass object at 0xABC>", "MyClass", {}, ["list", ["[[0, 1, 2, 3, 4, 5, ...], [1, 2, 3, 4, 5, 6, ...], [2, 3, 4, 5, 6, 7, ...], [3, 4, 5, 6, 7, 8, ...], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 100}, ["0", ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 100}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["97", ["97", "int", {}]], ["98", ["98", "int", {}]], ["99", ["99", "int", {}]]]], ["1", ["[1, 2, 3, 4, 5, 6, ...]", "list", {"len": 100}, ["0", ["1", "int", {}]], ["1", ["2", "int", {}]], ["2", ["3", "int", {}]], ["97", ["98", "int", {}]], ["98", ["99", "int", {}]], ["99", ["100", "int", {}]]]], ["2", ["[2, 3, 4, 5, 6, 7, ...]", "list", {"len": 100}, ["0", ["2", "int", {}]], ["1", ["3", "int", {}]], ["2", ["4", "int", {}]], ["97", ["99", "int", {}]], ["98", ["100", "int", {}]], ["99", ["101", "int", {}]]]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 100}, ["0", ["97", "int", {}]], ["1", ["98", "int", {}]], ["2", ["99", "int", {}]], ["97", ["194", "int", {}]], ["98", ["195", "int", {}]], ["99", ["196", "int", {}]]]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 100}, ["0", ["98", "int", {}]], ["1", ["99", "int", {}]], ["2", ["100", "int", {}]], ["97", ["195", "int", {}]], ["98", ["196", "int", {}]], ["99", ["197", "int", {}]]]], ["99", ["[99, 100, 101, 102, 103, 104, ...]", "list", {"len": 100}, ["0", ["99", "int", {}]], ["1", ["100", "int", {}]], ["2", ["101", "int", {}]], ["97", ["196", "int", {}]], ["98", ["197", "int", {}]], ["99", ["198", "int", {}]]]]]]], "137": ["", -2, {}], "134": ["None", "NoneType", {}], "135": ["None", "NoneType", {}], "138": ["None", "NoneType", {}], "139": ["True", "bool", {}], "363": ["{'kwarg1': {'key': 'value'}}", "dict", {"len": 1}, ["'kwarg1'", ["{'key': 'value'}", "dict", {"len": 1}, ["'key'", ["'value'", "str", {"len": 5}]]]]], "58": ["", -2, {}], "59": ["", -2, {}], "50": ["", -2, {}], "51": ["", -2, {}], "52": ["", -2, {}], "53": ["", -2, {}], "54": ["", -2, {}], "55": ["", -2, {}], "56": ["", -2, {}], "57": ["", -2, {}], "258": ["6", "int", {}], "538": {"4": {"4": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 194}]]], "5": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 195}]]], "0": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[]", "list", {"len": 0}]]], "1": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98]", "list", {"len": 1}]]], "2": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99]", "list", {"len": 2}]]], "3": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 193}]]]}, "5": {"4": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 100}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 196}]], ["99", ["[99, 100, 101, 102, 103, 104, ...]", "list", {"len": 196}]]], "5": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 100}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 196}]], ["99", ["[99, 100, 101, 102, 103, 104, ...]", "list", {"len": 197}]]], "0": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 100}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 196}]], ["99", ["[]", "list", {"len": 0}]]], "1": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 100}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 196}]], ["99", ["[99]", "list", {"len": 1}]]], "2": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 100}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 196}]], ["99", ["[99, 100]", "list", {"len": 2}]]], "3": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 100}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 196}]], ["99", ["[99, 100, 101, 102, 103, 104, ...]", "list", {"len": 195}]]]}, "1": {"0": ["[[], []]", "list", {"len": 2}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[]", "list", {"len": 0}]]], "1": ["[[], [1]]", "list", {"len": 2}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1]", "list", {"len": 1}]]]}, "2": {"0": ["[[], [1, 2], []]", "list", {"len": 3}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[]", "list", {"len": 0}]]], "1": ["[[], [1, 2], [2]]", "list", {"len": 3}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2]", "list", {"len": 1}]]], "2": ["[[], [1, 2], [2, 3]]", "list", {"len": 3}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3]", "list", {"len": 2}]]], "3": ["[[], [1, 2], [2, 3, 4]]", "list", {"len": 3}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4]", "list", {"len": 3}]]]}, "3": {"4": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list", {"len": 190}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 192}]]], "5": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list", {"len": 190}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 193}]]], "0": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list", {"len": 190}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[]", "list", {"len": 0}]]], "1": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list", {"len": 190}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97]", "list", {"len": 1}]]], "2": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list", {"len": 190}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98]", "list", {"len": 2}]]], "3": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list", {"len": 190}]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 191}]]]}}, "253": ["3", "int", {}], "250": ["[1, 2, {'k': 23}]", "list", {"inner_call": "test_id_10", "len": 3}, ["0", ["1", "int", {}]], ["1", ["2", "int", {}]], ["2", ["{'k': 23}", "dict", {"len": 1}, ["'k'", ["23", "int", {}]]]]], "415": {"4": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 98}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}, ["0", ["1", "int", {}]], ["1", ["2", "int", {}]]]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}, ["0", ["2", "int", {}]], ["1", ["3", "int", {}]], ["2", ["4", "int", {}]], ["3", ["5", "int", {}]]]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list", {"len": 190}, ["0", ["95", "int", {}]], ["1", ["96", "int", {}]], ["2", ["97", "int", {}]], ["187", ["282", "int", {}]], ["188", ["283", "int", {}]], ["189", ["284", "int", {}]]]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}, ["0", ["96", "int", {}]], ["1", ["97", "int", {}]], ["2", ["98", "int", {}]], ["189", ["285", "int", {}]], ["190", ["286", "int", {}]], ["191", ["287", "int", {}]]]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}, ["0", ["97", "int", {}]], ["1", ["98", "int", {}]], ["2", ["99", "int", {}]], ["191", ["288", "int", {}]], ["192", ["289", "int", {}]], ["193", ["290", "int", {}]]]]], "5": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 99}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}, ["0", ["1", "int", {}]], ["1", ["2", "int", {}]]]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}, ["0", ["2", "int", {}]], ["1", ["3", "int", {}]], ["2", ["4", "int", {}]], ["3", ["5", "int", {}]]]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}, ["0", ["96", "int", {}]], ["1", ["97", "int", {}]], ["2", ["98", "int", {}]], ["189", ["285", "int", {}]], ["190", ["286", "int", {}]], ["191", ["287", "int", {}]]]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 194}, ["0", ["97", "int", {}]], ["1", ["98", "int", {}]], ["2", ["99", "int", {}]], ["191", ["288", "int", {}]], ["192", ["289", "int", {}]], ["193", ["290", "int", {}]]]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 196}, ["0", ["98", "int", {}]], ["1", ["99", "int", {}]], ["2", ["100", "int", {}]], ["193", ["291", "int", {}]], ["194", ["292", "int", {}]], ["195", ["293", "int", {}]]]]], "0": ["[]", "list", {"len": 0}], "1": ["[[]]", "list", {"len": 1}, ["0", ["[]", "list", {"len": 0}]]], "2": ["[[], [1, 2]]", "list", {"len": 2}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}, ["0", ["1", "int", {}]], ["1", ["2", "int", {}]]]]], "3": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", {"len": 97}, ["0", ["[]", "list", {"len": 0}]], ["1", ["[1, 2]", "list", {"len": 2}, ["0", ["1", "int", {}]], ["1", ["2", "int", {}]]]], ["2", ["[2, 3, 4, 5]", "list", {"len": 4}, ["0", ["2", "int", {}]], ["1", ["3", "int", {}]], ["2", ["4", "int", {}]], ["3", ["5", "int", {}]]]], ["94", ["[94, 95, 96, 97, 98, 99, ...]", "list", {"len": 188}, ["0", ["94", "int", {}]], ["1", ["95", "int", {}]], ["2", ["96", "int", {}]], ["185", ["279", "int", {}]], ["186", ["280", "int", {}]], ["187", ["281", "int", {}]]]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list", {"len": 190}, ["0", ["95", "int", {}]], ["1", ["96", "int", {}]], ["2", ["97", "int", {}]], ["187", ["282", "int", {}]], ["188", ["283", "int", {}]], ["189", ["284", "int", {}]]]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", {"len": 192}, ["0", ["96", "int", {}]], ["1", ["97", "int", {}]], ["2", ["98", "int", {}]], ["189", ["285", "int", {}]], ["190", ["286", "int", {}]], ["191", ["287", "int", {}]]]]]}, "388": ["ValueError()", "ValueError", {}], "493": {"4": {"4": ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 194}, ["0", ["98", "int", {}]], ["1", ["99", "int", {}]], ["2", ["100", "int", {}]], ["191", ["289", "int", {}]], ["192", ["290", "int", {}]], ["193", ["291", "int", {}]]], "5": ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 195}, ["0", ["98", "int", {}]], ["1", ["99", "int", {}]], ["2", ["100", "int", {}]], ["192", ["290", "int", {}]], ["193", ["291", "int", {}]], ["194", ["292", "int", {}]]], "0": ["[]", "list", {"len": 0}], "1": ["[98]", "list", {"len": 1}, ["0", ["98", "int", {}]]], "2": ["[98, 99]", "list", {"len": 2}, ["0", ["98", "int", {}]], ["1", ["99", "int", {}]]], "3": ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 193}, ["0", ["98", "int", {}]], ["1", ["99", "int", {}]], ["2", ["100", "int", {}]], ["190", ["288", "int", {}]], ["191", ["289", "int", {}]], ["192", ["290", "int", {}]]]}, "5": {"4": ["[99, 100, 101, 102, 103, 104, ...]", "list", {"len": 196}, ["0", ["99", "int", {}]], ["1", ["100", "int", {}]], ["2", ["101", "int", {}]], ["193", ["292", "int", {}]], ["194", ["293", "int", {}]], ["195", ["294", "int", {}]]], "5": ["[99, 100, 101, 102, 103, 104, ...]", "list", {"len": 197}, ["0", ["99", "int", {}]], ["1", ["100", "int", {}]], ["2", ["101", "int", {}]], ["194", ["293", "int", {}]], ["195", ["294", "int", {}]], ["196", ["295", "int", {}]]], "0": ["[]", "list", {"len": 0}], "1": ["[99]", "list", {"len": 1}, ["0", ["99", "int", {}]]], "2": ["[99, 100]", "list", {"len": 2}, ["0", ["99", "int", {}]], ["1", ["100", "int", {}]]], "3": ["[99, 100, 101, 102, 103, 104, ...]", "list", {"len": 195}, ["0", ["99", "int", {}]], ["1", ["100", "int", {}]], ["2", ["101", "int", {}]], ["192", ["291", "int", {}]], ["193", ["292", "int", {}]], ["194", ["293", "int", {}]]]}, "1": {"0": ["[]", "list", {"len": 0}], "1": ["[1]", "list", {"len": 1}, ["0", ["1", "int", {}]]]}, "2": {"0": ["[]", "list", {"len": 0}], "1": ["[2]", "list", {"len": 1}, ["0", ["2", "int", {}]]], "2": ["[2, 3]", "list", {"len": 2}, ["0", ["2", "int", {}]], ["1", ["3", "int", {}]]], "3": ["[2, 3, 4]", "list", {"len": 3}, ["0", ["2", "int", {}]], ["1", ["3", "int", {}]], ["2", ["4", "int", {}]]]}, "3": {"4": ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 192}, ["0", ["97", "int", {}]], ["1", ["98", "int", {}]], ["2", ["99", "int", {}]], ["189", ["286", "int", {}]], ["190", ["287", "int", {}]], ["191", ["288", "int", {}]]], "5": ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 193}, ["0", ["97", "int", {}]], ["1", ["98", "int", {}]], ["2", ["99", "int", {}]], ["190", ["287", "int", {}]], ["191", ["288", "int", {}]], ["192", ["289", "int", {}]]], "0": ["[]", "list", {"len": 0}], "1": ["[97]", "list", {"len": 1}, ["0", ["97", "int", {}]]], "2": ["[97, 98]", "list", {"len": 2}, ["0", ["97", "int", {}]], ["1", ["98", "int", {}]]], "3": ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 191}, ["0", ["97", "int", {}]], ["1", ["98", "int", {}]], ["2", ["99", "int", {}]], ["188", ["285", "int", {}]], ["189", ["286", "int", {}]], ["190", ["287", "int", {}]]]}}, "249": ["[[0, 1, 2, 3, 4, 5, ...], 'hello', {'kwarg1': {'key': 'value'}}]", "list", {"len": 3}, ["0", ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 1000}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["997", ["997", "int", {}]], ["998", ["998", "int", {}]], ["999", ["999", "int", {}]]]], ["1", ["'hello'", "str", {"len": 5}]], ["2", ["{'kwarg1': {'key': 'value'}}", "dict", {"len": 1}, ["'kwarg1'", ["{'key': 'value'}", "dict", {"len": 1}, ["'key'", ["'value'", "str", {"len": 5}]]]]]]], "445": ["[0, 1, 2, 3]", "list", {"len": 4}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["3", ["3", "int", {}]]], "240": ["<function dummy at 0xABC>", "function", {}], "241": ["set([0, 1, 2, 3])", "set", {"len": 4}, ["<0>", ["0", "int", {}]], ["<1>", ["1", "int", {}]], ["<2>", ["2", "int", {}]], ["<3>", ["3", "int", {}]]], "501": {"0": ["ZeroDivisionError: integer division or modulo by zero\n", -1, {}], "1": ["1", "int", {}], "2": ["ZeroDivisionError: integer division or modulo by zero\n", -1, {}], "3": ["1", "int", {}]}, "243": ["{0: 0}", "dict", {"len": 1}, ["0", ["0", "int", {}]]], "245": ["<function dummy at 0xABC>", "function", {}], "246": ["<tests.golden_script.SlotClass object at 0xABC>", "SlotClass", {"inner_call": "test_id_8"}, ["slot1", ["3", "int", {}]]], "247": ["[[0, 1, 2, 3, 4, 5, ...], 'hello', {'kwarg1': {'key': 'value'}}]", "list", {"inner_call": "test_id_9", "len": 3}, ["0", ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 1000}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["997", ["997", "int", {}]], ["998", ["998", "int", {}]], ["999", ["999", "int", {}]]]], ["1", ["'hello'", "str", {"len": 5}]], ["2", ["{'kwarg1': {'key': 'value'}}", "dict", {"len": 1}, ["'kwarg1'", ["{'key': 'value'}", "dict", {"len": 1}, ["'key'", ["'value'", "str", {"len": 5}]]]]]]], "318": ["<function factorial at 0xABC>", "function", {}], "239": ["<generator object <genexpr> at 0xABC>", "generator", {}], "238": ["<function dummy at 0xABC>", "function", {}], "234": ["<tests.golden_script.MyClass object at 0xABC>", "MyClass", {}], "237": ["", -2, {}], "236": {"4": ["[98, 99, 100, 101, 102, 103, ...]", "list", {"len": 100}, ["0", ["98", "int", {}]], ["1", ["99", "int", {}]], ["2", ["100", "int", {}]], ["97", ["195", "int", {}]], ["98", ["196", "int", {}]], ["99", ["197", "int", {}]]], "5": ["[99, 100, 101, 102, 103, 104, ...]", "list", {"len": 100}, ["0", ["99", "int", {}]], ["1", ["100", "int", {}]], ["2", ["101", "int", {}]], ["97", ["196", "int", {}]], ["98", ["197", "int", {}]], ["99", ["198", "int", {}]]], "0": ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 100}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["97", ["97", "int", {}]], ["98", ["98", "int", {}]], ["99", ["99", "int", {}]]], "1": ["[1, 2, 3, 4, 5, 6, ...]", "list", {"len": 100}, ["0", ["1", "int", {}]], ["1", ["2", "int", {}]], ["2", ["3", "int", {}]], ["97", ["98", "int", {}]], ["98", ["99", "int", {}]], ["99", ["100", "int", {}]]], "2": ["[2, 3, 4, 5, 6, 7, ...]", "list", {"len": 100}, ["0", ["2", "int", {}]], ["1", ["3", "int", {}]], ["2", ["4", "int", {}]], ["97", ["99", "int", {}]], ["98", ["100", "int", {}]], ["99", ["101", "int", {}]]], "3": ["[97, 98, 99, 100, 101, 102, ...]", "list", {"len": 100}, ["0", ["97", "int", {}]], ["1", ["98", "int", {}]], ["2", ["99", "int", {}]], ["97", ["194", "int", {}]], ["98", ["195", "int", {}]], ["99", ["196", "int", {}]]]}, "231": ["<tests.golden_script.MyClass object at 0xABC>", "MyClass", {}], "233": ["<tests.golden_script.MyClass object at 0xABC>", "MyClass", {}], "61": ["", -2, {}], "60": ["", -2, {}], "63": ["", -2, {}], "62": ["", -2, {}], "396": ["<function <lambda> at 0xABC>", "function", {}], "64": ["", -2, {}], "67": ["", -2, {}], "66": ["", -2, {}], "69": ["", -2, {}], "68": ["", -2, {}], "65": ["", -2, {}], "449": ["[0]", "list", {"len": 1}, ["0", ["0", "int", {}]]]}}}, {"function": {"name": "factorial", "html_body": "<span data-index=\"4\" class=\"stmt\">@<span data-index=\"21\" class=\"\">eye</span>\ndef factorial(<span data-index=\"78\" class=\"\">n</span>):\n<span data-index=\"19\" class=\"stmt\">    if <span data-index=\"79\" class=\"\"><span data-index=\"167\" class=\"\">n</span> &lt;= 1</span>:\n        <span data-index=\"80\" class=\"stmt\">return 1</span></span>\n    <span data-index=\"20\" class=\"stmt\">return <span data-index=\"81\" class=\"\"><span data-index=\"171\" class=\"\">n</span> * <span data-index=\"173\" class=\"\"><span data-index=\"294\" class=\"\">factorial</span>(<span data-index=\"295\" class=\"\"><span data-index=\"405\" class=\"\">n</span> - 1</span>)</span></span></span></span>\n", "lineno": 8, "data": {"node_loops": {}}}, "traceback": null, "arguments": [["n", "3"]], "return_value": "6", "exception": null, "data": {"type_names": ["MyClass", "NoneType", "SlotClass", "ValueError", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "long", "member_descriptor", "set", "str", "tuple", "type", "unicode", "wrapper_descriptor"], "loop_iterations": {}, "num_special_types": 13, "node_values": {"294": ["<function factorial at 0xABC>", "function", {}], "173": ["2", "int", {"inner_call": "test_id_3"}], "171": ["3", "int", {}], "405": ["3", "int", {}], "19": ["", -2, {}], "20": ["", -2, {}], "295": ["2", "int", {}], "79": ["False", "bool", {}], "81": ["6", "int", {}], "167": ["3", "int", {}]}}}, {"function": {"name": "factorial", "html_body": "<span data-index=\"4\" class=\"stmt\">@<span data-index=\"21\" class=\"\">eye</span>\ndef factorial(<span data-index=\"78\" class=\"\">n</span>):\n<span data-index=\"19\" class=\"stmt\">    if <span data-index=\"79\" class=\"\"><span data-index=\"167\" class=\"\">n</span> &lt;= 1</span>:\n        <span data-index=\"80\" class=\"stmt\">return 1</span></span>\n    <span data-index=\"20\" class=\"stmt\">return <span data-index=\"81\" class=\"\"><span data-index=\"171\" class=\"\">n</span> * <span data-index=\"173\" class=\"\"><span data-index=\"294\" class=\"\">factorial</span>(<span data-index=\"295\" class=\"\"><span data-index=\"405\" class=\"\">n</span> - 1</span>)</span></span></span></span>\n", "lineno": 8, "data": {"node_loops": {}}}, "traceback": null, "arguments": [["n", "2"]], "return_value": "2", "exception": null, "data": {"type_names": ["MyClass", "NoneType", "SlotClass", "ValueError", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "long", "member_descriptor", "set", "str", "tuple", "type", "unicode", "wrapper_descriptor"], "loop_iterations": {}, "num_special_types": 13, "node_values": {"294": ["<function factorial at 0xABC>", "function", {}], "173": ["1", "int", {"inner_call": "test_id_4"}], "171": ["2", "int", {}], "405": ["2", "int", {}], "19": ["", -2, {}], "20": ["", -2, {}], "295": ["1", "int", {}], "79": ["False", "bool", {}], "81": ["2", "int", {}], "167": ["2", "int", {}]}}}, {"function": {"name": "factorial", "html_body": "<span data-index=\"4\" class=\"stmt\">@<span data-index=\"21\" class=\"\">eye</span>\ndef factorial(<span data-index=\"78\" class=\"\">n</span>):\n<span data-index=\"19\" class=\"stmt\">    if <span data-index=\"79\" class=\"\"><span data-index=\"167\" class=\"\">n</span> &lt;= 1</span>:\n        <span data-index=\"80\" class=\"stmt\">return 1</span></span>\n    <span data-index=\"20\" class=\"stmt\">return <span data-index=\"81\" class=\"\"><span data-index=\"171\" class=\"\">n</span> * <span data-index=\"173\" class=\"\"><span data-index=\"294\" class=\"\">factorial</span>(<span data-index=\"295\" class=\"\"><span data-index=\"405\" class=\"\">n</span> - 1</span>)</span></span></span></span>\n", "lineno": 8, "data": {"node_loops": {}}}, "traceback": null, "arguments": [["n", "1"]], "return_value": "1", "exception": null, "data": {"type_names": ["MyClass", "NoneType", "SlotClass", "ValueError", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "long", "member_descriptor", "set", "str", "tuple", "type", "unicode", "wrapper_descriptor"], "loop_iterations": {}, "num_special_types": 13, "node_values": {"79": ["True", "bool", {}], "80": ["", -2, {}], "19": ["", -2, {}], "167": ["1", "int", {}]}}}, {"function": {"name": "MyClass.__add__", "html_body": "<span data-index=\"40\" class=\"stmt\">    def __add__(<span data-index=\"202\" class=\"\">self</span>, <span data-index=\"203\" class=\"\">other</span>):\n        <span data-index=\"112\" class=\"stmt\">return <span data-index=\"204\" class=\"\">other</span></span></span>\n", "lineno": 51, "data": {"node_loops": {}}}, "traceback": null, "arguments": [["self", "<tests.golden_script.MyClass object at 0xABC>"], ["other", "<tests.golden_script.MyClass object at 0xABC>"]], "return_value": "<tests.golden_script.MyClass object at 0xABC>", "exception": null, "data": {"type_names": ["MyClass", "NoneType", "SlotClass", "ValueError", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "long", "member_descriptor", "set", "str", "tuple", "type", "unicode", "wrapper_descriptor"], "loop_iterations": {}, "num_special_types": 13, "node_values": {"204": ["<tests.golden_script.MyClass object at 0xABC>", "MyClass", {}], "112": ["", -2, {}]}}}, {"function": {"name": "MyClass.__enter__", "html_body": "<span data-index=\"41\" class=\"stmt\">    def __enter__(<span data-index=\"205\" class=\"\">self</span>):\n        <span data-index=\"114\" class=\"stmt\">pass</span></span>\n", "lineno": 54, "data": {"node_loops": {}}}, "traceback": null, "arguments": [["self", "<tests.golden_script.MyClass object at 0xABC>"]], "return_value": "None", "exception": null, "data": {"type_names": ["MyClass", "NoneType", "SlotClass", "ValueError", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "long", "member_descriptor", "set", "str", "tuple", "type", "unicode", "wrapper_descriptor"], "loop_iterations": {}, "num_special_types": 13, "node_values": {"114": ["", -2, {}]}}}, {"function": {"name": "MyClass.__exit__", "html_body": "<span data-index=\"42\" class=\"stmt\">    def __exit__(<span data-index=\"206\" class=\"\">self</span>, <span data-index=\"207\" class=\"\">exc_type</span>, <span data-index=\"208\" class=\"\">exc_val</span>, <span data-index=\"209\" class=\"\">exc_tb</span>):\n        <span data-index=\"116\" class=\"stmt\">pass</span></span>\n", "lineno": 57, "data": {"node_loops": {}}}, "traceback": null, "arguments": [["self", "<tests.golden_script.MyClass object at 0xABC>"], ["exc_type", "None"], ["exc_val", "None"], ["exc_tb", "None"]], "return_value": "None", "exception": null, "data": {"type_names": ["MyClass", "NoneType", "SlotClass", "ValueError", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "long", "member_descriptor", "set", "str", "tuple", "type", "unicode", "wrapper_descriptor"], "loop_iterations": {}, "num_special_types": 13, "node_values": {"116": ["", -2, {}]}}}, {"function": {"name": "MyClass.__add__", "html_body": "<span data-index=\"40\" class=\"stmt\">    def __add__(<span data-index=\"202\" class=\"\">self</span>, <span data-index=\"203\" class=\"\">other</span>):\n        <span data-index=\"112\" class=\"stmt\">return <span data-index=\"204\" class=\"\">other</span></span></span>\n", "lineno": 51, "data": {"node_loops": {}}}, "traceback": null, "arguments": [["self", "<tests.golden_script.MyClass object at 0xABC>"], ["other", "<tests.golden_script.SlotClass object at 0xABC>"]], "return_value": "<tests.golden_script.SlotClass object at 0xABC>", "exception": null, "data": {"type_names": ["MyClass", "NoneType", "SlotClass", "ValueError", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "long", "member_descriptor", "set", "str", "tuple", "type", "unicode", "wrapper_descriptor"], "loop_iterations": {}, "num_special_types": 13, "node_values": {"204": ["<tests.golden_script.SlotClass object at 0xABC>", "SlotClass", {}, ["slot1", ["3", "int", {}]]], "112": ["", -2, {}]}}}, {"function": {"name": "complex_args", "html_body": "<span data-index=\"7\" class=\"stmt\">@<span data-index=\"29\" class=\"\">eye</span>\ndef complex_args(<span data-index=\"88\" class=\"\">pos1</span>, <span data-index=\"89\" class=\"\">pos2</span>, <span data-index=\"90\" class=\"\">key1</span>=3, <span data-index=\"91\" class=\"\">key2</span>=4, *args, **kwargs):\n    <span data-index=\"28\" class=\"stmt\">return <span data-index=\"94\" class=\"\">[<span data-index=\"184\" class=\"\">pos1</span>, <span data-index=\"185\" class=\"\">pos2</span>, <span data-index=\"186\" class=\"\">kwargs</span>]</span></span></span>\n", "lineno": 26, "data": {"node_loops": {}}}, "traceback": null, "arguments": [["pos1", "[0, 1, 2, 3, 4, 5, ...]"], ["pos2", "'hello'"], ["key1", "3"], ["key2", "8"], ["args", "()"], ["kwargs", "{'kwarg1': {'key': 'value'}}"]], "return_value": "[[0, 1, 2, 3, 4, 5, ...], 'hello', {'kwarg1': {'key': 'value'}}]", "exception": null, "data": {"type_names": ["MyClass", "NoneType", "SlotClass", "ValueError", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "long", "member_descriptor", "set", "str", "tuple", "type", "unicode", "wrapper_descriptor"], "loop_iterations": {}, "num_special_types": 13, "node_values": {"94": ["[[0, 1, 2, 3, 4, 5, ...], 'hello', {'kwarg1': {'key': 'value'}}]", "list", {"len": 3}, ["0", ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 1000}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["997", ["997", "int", {}]], ["998", ["998", "int", {}]], ["999", ["999", "int", {}]]]], ["1", ["'hello'", "str", {"len": 5}]], ["2", ["{'kwarg1': {'key': 'value'}}", "dict", {"len": 1}, ["'kwarg1'", ["{'key': 'value'}", "dict", {"len": 1}, ["'key'", ["'value'", "str", {"len": 5}]]]]]]], "186": ["{'kwarg1': {'key': 'value'}}", "dict", {"len": 1}, ["'kwarg1'", ["{'key': 'value'}", "dict", {"len": 1}, ["'key'", ["'value'", "str", {"len": 5}]]]]], "185": ["'hello'", "str", {"len": 5}], "184": ["[0, 1, 2, 3, 4, 5, ...]", "list", {"len": 1000}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["997", ["997", "int", {}]], ["998", ["998", "int", {}]], ["999", ["999", "int", {}]]], "28": ["", -2, {}]}}}, {"function": {"name": "complex_args", "html_body": "<span data-index=\"7\" class=\"stmt\">@<span data-index=\"29\" class=\"\">eye</span>\ndef complex_args(<span data-index=\"88\" class=\"\">pos1</span>, <span data-index=\"89\" class=\"\">pos2</span>, <span data-index=\"90\" class=\"\">key1</span>=3, <span data-index=\"91\" class=\"\">key2</span>=4, *args, **kwargs):\n    <span data-index=\"28\" class=\"stmt\">return <span data-index=\"94\" class=\"\">[<span data-index=\"184\" class=\"\">pos1</span>, <span data-index=\"185\" class=\"\">pos2</span>, <span data-index=\"186\" class=\"\">kwargs</span>]</span></span></span>\n", "lineno": 26, "data": {"node_loops": {}}}, "traceback": null, "arguments": [["pos1", "1"], ["pos2", "2"], ["key1", "3"], ["key2", "4"], ["args", "()"], ["kwargs", "{'k': 23}"]], "return_value": "[1, 2, {'k': 23}]", "exception": null, "data": {"type_names": ["MyClass", "NoneType", "SlotClass", "ValueError", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "long", "member_descriptor", "set", "str", "tuple", "type", "unicode", "wrapper_descriptor"], "loop_iterations": {}, "num_special_types": 13, "node_values": {"94": ["[1, 2, {'k': 23}]", "list", {"len": 3}, ["0", ["1", "int", {}]], ["1", ["2", "int", {}]], ["2", ["{'k': 23}", "dict", {"len": 1}, ["'k'", ["23", "int", {}]]]]], "186": ["{'k': 23}", "dict", {"len": 1}, ["'k'", ["23", "int", {}]]], "185": ["2", "int", {}], "184": ["1", "int", {}], "28": ["", -2, {}]}}}, {"function": {"name": "use_gen_1", "html_body": "<span data-index=\"9\" class=\"stmt\">@<span data-index=\"35\" class=\"\">eye</span>\ndef use_gen_1(<span data-index=\"100\" class=\"\">g</span>):\n<span data-index=\"34\" class=\"loop stmt\">    for x in <span data-index=\"102\" class=\"\"><span data-index=\"194\" class=\"\">islice</span>(<span data-index=\"195\" class=\"\">g</span>, 3)</span>:\n        <span data-index=\"103\" class=\"stmt\"><span data-index=\"197\" class=\"\"><span data-index=\"306\" class=\"\">dummy</span>(<span data-index=\"307\" class=\"\">x</span>)</span></span></span></span>\n", "lineno": 37, "data": {"node_loops": {"307": [34], "197": [34], "103": [34], "306": [34]}}}, "traceback": null, "arguments": [["g", "<generator object gen at 0xABC>"]], "return_value": "None", "exception": null, "data": {"type_names": ["MyClass", "NoneType", "SlotClass", "ValueError", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "long", "member_descriptor", "set", "str", "tuple", "type", "unicode", "wrapper_descriptor"], "loop_iterations": {"34": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}, {"index": 2, "loops": {}}]}, "num_special_types": 13, "node_values": {"34": ["", -2, {}], "306": {"0": ["<function dummy at 0xABC>", "function", {}], "1": ["<function dummy at 0xABC>", "function", {}], "2": ["<function dummy at 0xABC>", "function", {}]}, "307": {"0": ["0", "int", {}], "1": ["1", "int", {}], "2": ["2", "int", {}]}, "194": ["<type 'itertools.islice'>", "type", {}, ["__doc__", ["'islice(iterab...s an iterator.'", "str", {"len": 416}]], ["__getattribute__", ["<slot wrapper '__getattribut...f 'itertools.islice' objects>", "wrapper_descriptor", {}]], ["__iter__", ["<slot wrapper '__iter__' of 'itertools.islice' objects>", "wrapper_descriptor", {}]], ["__new__", ["<built-in method __new__ of type object at 0xABC>", "builtin_function_or_method", {}]], ["next", ["<slot wrapper 'next' of 'itertools.islice' objects>", "wrapper_descriptor", {}]]], "195": ["<generator object gen at 0xABC>", "generator", {}], "197": {"0": ["None", "NoneType", {}], "1": ["None", "NoneType", {}], "2": ["None", "NoneType", {}]}, "103": {"0": ["", -2, {}], "1": ["", -2, {}], "2": ["", -2, {}]}, "102": ["<itertools.islice object at 0xABC>", "islice", {}]}}}, {"function": {"name": "gen", "html_body": "<span data-index=\"8\" class=\"stmt\">@<span data-index=\"32\" class=\"\">eye</span>\ndef gen():\n<span data-index=\"31\" class=\"loop stmt\">    for i in <span data-index=\"97\" class=\"\"><span data-index=\"189\" class=\"\">range</span>(6)</span>:\n        <span data-index=\"98\" class=\"stmt\"><span data-index=\"191\" class=\"\">yield <span data-index=\"303\" class=\"\">i</span></span></span></span></span>\n", "lineno": 31, "data": {"node_loops": {"98": [31], "191": [31], "303": [31]}}}, "traceback": null, "arguments": [], "return_value": "None", "exception": null, "data": {"type_names": ["MyClass", "NoneType", "SlotClass", "ValueError", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "long", "member_descriptor", "set", "str", "tuple", "type", "unicode", "wrapper_descriptor"], "loop_iterations": {"31": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}, {"index": 2, "loops": {}}, {"index": 3, "loops": {}}, {"index": 4, "loops": {}}, {"index": 5, "loops": {}}]}, "num_special_types": 13, "node_values": {"97": ["[0, 1, 2, 3, 4, 5]", "list", {"len": 6}, ["0", ["0", "int", {}]], ["1", ["1", "int", {}]], ["2", ["2", "int", {}]], ["3", ["3", "int", {}]], ["4", ["4", "int", {}]], ["5", ["5", "int", {}]]], "98": {"4": ["", -2, {}], "5": ["", -2, {}], "0": ["", -2, {}], "1": ["", -2, {}], "2": ["", -2, {}], "3": ["", -2, {}]}, "191": {"4": ["None", "NoneType", {}], "5": ["None", "NoneType", {}], "0": ["None", "NoneType", {}], "1": ["None", "NoneType", {}], "2": ["None", "NoneType", {}], "3": ["None", "NoneType", {}]}, "303": {"4": ["4", "int", {}], "5": ["5", "int", {}], "0": ["0", "int", {}], "1": ["1", "int", {}], "2": ["2", "int", {}], "3": ["3", "int", {}]}, "31": ["", -2, {}]}}}, {"function": {"name": "use_gen_2", "html_body": "<span data-index=\"10\" class=\"stmt\">@<span data-index=\"38\" class=\"\">eye</span>\ndef use_gen_2(<span data-index=\"105\" class=\"\">g</span>):\n<span data-index=\"37\" class=\"loop stmt\">    for y in <span data-index=\"107\" class=\"\">g</span>:\n        <span data-index=\"108\" class=\"stmt\"><span data-index=\"201\" class=\"\"><span data-index=\"308\" class=\"\">dummy</span>(<span data-index=\"309\" class=\"\">y</span>)</span></span></span></span>\n", "lineno": 43, "data": {"node_loops": {"108": [37], "309": [37], "308": [37], "201": [37]}}}, "traceback": null, "arguments": [["g", "<generator object gen at 0xABC>"]], "return_value": "None", "exception": null, "data": {"type_names": ["MyClass", "NoneType", "SlotClass", "ValueError", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "long", "member_descriptor", "set", "str", "tuple", "type", "unicode", "wrapper_descriptor"], "loop_iterations": {"37": [{"index": 0, "loops": {}}, {"index": 1, "loops": {}}, {"index": 2, "loops": {}}]}, "num_special_types": 13, "node_values": {"309": {"0": ["3", "int", {}], "1": ["4", "int", {}], "2": ["5", "int", {}]}, "308": {"0": ["<function dummy at 0xABC>", "function", {}], "1": ["<function dummy at 0xABC>", "function", {}], "2": ["<function dummy at 0xABC>", "function", {}]}, "37": ["", -2, {}], "201": {"0": ["None", "NoneType", {}], "1": ["None", "NoneType", {}], "2": ["None", "NoneType", {}]}, "108": {"0": ["", -2, {}], "1": ["", -2, {}], "2": ["", -2, {}]}, "107": ["<generator object gen at 0xABC>", "generator", {}]}}}]