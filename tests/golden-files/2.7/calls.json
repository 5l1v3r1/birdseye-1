[{"function": {"html_body": "<span data-index=\"13\" data-type=\"stmt\">@<span data-index=\"55\" data-type=\"expr\">eye</span>\ndef main():\n    <span data-index=\"44\" data-type=\"stmt\"><span data-index=\"94\" data-type=\"expr\"><span data-index=\"156\" data-type=\"expr\">factorial</span>(5)</span></span>\n\n    <span data-index=\"45\" data-type=\"stmt\">vals = []</span>\n<span data-index=\"46\" data-type=\"loop\">    for i in <span data-index=\"98\" data-type=\"expr\"><span data-index=\"161\" data-type=\"expr\">range</span>(100)</span>:\n        <span data-index=\"99\" data-type=\"stmt\"><span data-index=\"163\" data-type=\"expr\"><span data-index=\"217\" data-type=\"expr\"><span data-index=\"259\" data-type=\"expr\">vals</span>.append</span>([])</span></span>\n<span data-index=\"100\" data-type=\"loop\">        for j in <span data-index=\"165\" data-type=\"expr\"><span data-index=\"220\" data-type=\"expr\">range</span>(<span data-index=\"221\" data-type=\"expr\">2 * <span data-index=\"265\" data-type=\"expr\">i</span></span>)</span>:\n            <span data-index=\"166\" data-type=\"stmt\"><span data-index=\"222\" data-type=\"expr\"><span data-index=\"266\" data-type=\"expr\"><span data-index=\"287\" data-type=\"expr\"><span data-index=\"305\" data-type=\"expr\">vals</span>[-1]</span>.append</span>(<span data-index=\"267\" data-type=\"expr\"><span data-index=\"289\" data-type=\"expr\">i</span> + <span data-index=\"291\" data-type=\"expr\">j</span></span>)</span></span>\n            <span data-index=\"167\" data-type=\"stmt\"><span data-index=\"223\" data-type=\"expr\"><span data-index=\"268\" data-type=\"expr\">dummy</span>(<span data-index=\"269\" data-type=\"expr\">vals</span>)</span></span></span></span>\n\n<span data-index=\"47\" data-type=\"loop\">    for i in <span data-index=\"102\" data-type=\"expr\"><span data-index=\"169\" data-type=\"expr\">range</span>(6)</span>:\n<span data-index=\"103\" data-type=\"stmt\">        try:\n            <span data-index=\"171\" data-type=\"stmt\"><span data-index=\"225\" data-type=\"expr\"><span data-index=\"270\" data-type=\"expr\">dummy</span>(<span data-index=\"271\" data-type=\"expr\"><span data-index=\"295\" data-type=\"expr\">1 / (<span data-index=\"312\" data-type=\"expr\"><span data-index=\"316\" data-type=\"expr\">i</span> % 2</span>)</span> + 10</span>)</span></span>\n        except <span data-index=\"226\" data-type=\"expr\">ZeroDivisionError</span>:\n            <span data-index=\"227\" data-type=\"stmt\">pass</span></span></span>\n\n    <span data-index=\"48\" data-type=\"stmt\">c = <span data-index=\"105\" data-type=\"expr\"><span data-index=\"174\" data-type=\"expr\">MyClass</span>()</span></span>\n    <span data-index=\"49\" data-type=\"stmt\"><span data-index=\"175\" data-type=\"expr\">c</span>.list = <span data-index=\"107\" data-type=\"expr\">[<span data-index=\"177\" data-type=\"expr\">[<span data-index=\"230\" data-type=\"expr\"><span data-index=\"273\" data-type=\"expr\">x</span> + <span data-index=\"275\" data-type=\"expr\">y</span></span> <span data-index=\"231\" data-type=\"loop\">for x in <span data-index=\"277\" data-type=\"expr\"><span data-index=\"301\" data-type=\"expr\">range</span>(100)</span></span>]</span> \n <span data-index=\"178\" data-type=\"loop\">for y in <span data-index=\"233\" data-type=\"expr\"><span data-index=\"279\" data-type=\"expr\">range</span>(100)</span></span>]</span></span>\n    <span data-index=\"50\" data-type=\"stmt\"><span data-index=\"108\" data-type=\"expr\"><span data-index=\"179\" data-type=\"expr\">dummy</span>(<span data-index=\"180\" data-type=\"expr\">c</span>)</span></span>\n\n    <span data-index=\"51\" data-type=\"stmt\"><span data-index=\"109\" data-type=\"expr\"><span data-index=\"181\" data-type=\"expr\">complex_args</span>(<span data-index=\"182\" data-type=\"expr\"><span data-index=\"237\" data-type=\"expr\">list</span>(<span data-index=\"238\" data-type=\"expr\"><span data-index=\"282\" data-type=\"expr\">range</span>(1000)</span>)</span>,\n                 &quot;hello&quot;,\n                 key2=8,\n                 kwarg1={})</span></span>\n\n    <span data-index=\"52\" data-type=\"stmt\">g = <span data-index=\"111\" data-type=\"expr\"><span data-index=\"187\" data-type=\"expr\">gen</span>()</span></span>\n    <span data-index=\"53\" data-type=\"stmt\"><span data-index=\"112\" data-type=\"expr\"><span data-index=\"188\" data-type=\"expr\">use_gen_1</span>(<span data-index=\"189\" data-type=\"expr\">g</span>)</span></span>\n    <span data-index=\"54\" data-type=\"stmt\"><span data-index=\"113\" data-type=\"expr\"><span data-index=\"190\" data-type=\"expr\">use_gen_2</span>(<span data-index=\"191\" data-type=\"expr\">g</span>)</span></span></span>", "data": {"node_loops": {"231": [178], "269": [46, 100], "99": [46], "268": [46, 100], "259": [46], "291": [46, 100], "226": [47], "277": [178], "275": [178, 231], "273": [178, 231], "270": [47], "271": [47], "171": [47], "230": [178, 231], "217": [46], "177": [178], "316": [47], "305": [46, 100], "225": [47], "289": [46, 100], "301": [178], "287": [46, 100], "312": [47], "100": [46], "103": [47], "265": [46], "267": [46, 100], "266": [46, 100], "295": [47], "221": [46], "163": [46], "223": [46, 100], "222": [46, 100], "166": [46, 100], "167": [46, 100], "227": [47], "165": [46], "220": [46]}}, "lineno": 59, "name": "main"}, "traceback": null, "arguments": [], "return_value": "None", "data": {"num_special_types": 13, "node_values": {"45": true, "191": ["<generator object gen at 0xABC>", "generator"], "190": ["<function use_gen_2 at 0xABC>", "function"], "166": {"3": {"3": true, "2": true, "1": true, "0": true, "5": true, "4": true}, "2": {"3": true, "2": true, "1": true, "0": true}, "1": {"1": true, "0": true}, "5": {"3": true, "2": true, "1": true, "0": true, "5": true, "4": true}, "4": {"3": true, "2": true, "1": true, "0": true, "5": true, "4": true}}, "182": ["[0, 1, 2, 3, 4, 5, ...]", "list", "len() = 1000", ["0", ["0", "int"]], ["1", ["1", "int"]], ["2", ["2", "int"]], ["997", ["997", "int"]], ["998", ["998", "int"]], ["999", ["999", "int"]]], "268": {"3": {"3": ["<function dummy at 0xABC>", "function"], "2": ["<function dummy at 0xABC>", "function"], "1": ["<function dummy at 0xABC>", "function"], "0": ["<function dummy at 0xABC>", "function"], "5": ["<function dummy at 0xABC>", "function"], "4": ["<function dummy at 0xABC>", "function"]}, "2": {"3": ["<function dummy at 0xABC>", "function"], "2": ["<function dummy at 0xABC>", "function"], "1": ["<function dummy at 0xABC>", "function"], "0": ["<function dummy at 0xABC>", "function"]}, "1": {"1": ["<function dummy at 0xABC>", "function"], "0": ["<function dummy at 0xABC>", "function"]}, "5": {"3": ["<function dummy at 0xABC>", "function"], "2": ["<function dummy at 0xABC>", "function"], "1": ["<function dummy at 0xABC>", "function"], "0": ["<function dummy at 0xABC>", "function"], "5": ["<function dummy at 0xABC>", "function"], "4": ["<function dummy at 0xABC>", "function"]}, "4": {"3": ["<function dummy at 0xABC>", "function"], "2": ["<function dummy at 0xABC>", "function"], "1": ["<function dummy at 0xABC>", "function"], "0": ["<function dummy at 0xABC>", "function"], "5": ["<function dummy at 0xABC>", "function"], "4": ["<function dummy at 0xABC>", "function"]}}, "295": {"3": ["1.0", "float"], "2": ["ZeroDivisionError: division by zero\n", -1], "1": ["1.0", "float"], "0": ["ZeroDivisionError: division by zero\n", -1], "5": ["1.0", "float"], "4": ["ZeroDivisionError: division by zero\n", -1]}, "291": {"3": {"3": ["191", "int"], "2": ["2", "int"], "1": ["1", "int"], "0": ["0", "int"], "5": ["193", "int"], "4": ["192", "int"]}, "2": {"3": ["3", "int"], "2": ["2", "int"], "1": ["1", "int"], "0": ["0", "int"]}, "1": {"1": ["1", "int"], "0": ["0", "int"]}, "5": {"3": ["195", "int"], "2": ["2", "int"], "1": ["1", "int"], "0": ["0", "int"], "5": ["197", "int"], "4": ["196", "int"]}, "4": {"3": ["193", "int"], "2": ["2", "int"], "1": ["1", "int"], "0": ["0", "int"], "5": ["195", "int"], "4": ["194", "int"]}}, "305": {"3": {"3": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", "len() = 98", ["0", ["[]", "list"]], ["1", ["[1, 2]", "list"]], ["2", ["[2, 3, 4, 5]", "list"]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list"]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list"]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list"]]], "2": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", "len() = 98", ["0", ["[]", "list"]], ["1", ["[1, 2]", "list"]], ["2", ["[2, 3, 4, 5]", "list"]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list"]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list"]], ["97", ["[97, 98]", "list"]]], "1": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", "len() = 98", ["0", ["[]", "list"]], ["1", ["[1, 2]", "list"]], ["2", ["[2, 3, 4, 5]", "list"]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list"]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list"]], ["97", ["[97]", "list"]]], "0": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", "len() = 98", ["0", ["[]", "list"]], ["1", ["[1, 2]", "list"]], ["2", ["[2, 3, 4, 5]", "list"]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list"]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list"]], ["97", ["[]", "list"]]], "5": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", "len() = 98", ["0", ["[]", "list"]], ["1", ["[1, 2]", "list"]], ["2", ["[2, 3, 4, 5]", "list"]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list"]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list"]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list"]]], "4": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", "len() = 98", ["0", ["[]", "list"]], ["1", ["[1, 2]", "list"]], ["2", ["[2, 3, 4, 5]", "list"]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list"]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list"]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list"]]]}, "2": {"3": ["[[], [1, 2], [2, 3, 4]]", "list", "len() = 3", ["0", ["[]", "list"]], ["1", ["[1, 2]", "list"]], ["2", ["[2, 3, 4]", "list"]]], "2": ["[[], [1, 2], [2, 3]]", "list", "len() = 3", ["0", ["[]", "list"]], ["1", ["[1, 2]", "list"]], ["2", ["[2, 3]", "list"]]], "1": ["[[], [1, 2], [2]]", "list", "len() = 3", ["0", ["[]", "list"]], ["1", ["[1, 2]", "list"]], ["2", ["[2]", "list"]]], "0": ["[[], [1, 2], []]", "list", "len() = 3", ["0", ["[]", "list"]], ["1", ["[1, 2]", "list"]], ["2", ["[]", "list"]]]}, "1": {"1": ["[[], [1]]", "list", "len() = 2", ["0", ["[]", "list"]], ["1", ["[1]", "list"]]], "0": ["[[], []]", "list", "len() = 2", ["0", ["[]", "list"]], ["1", ["[]", "list"]]]}, "5": {"3": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", "len() = 100", ["0", ["[]", "list"]], ["1", ["[1, 2]", "list"]], ["2", ["[2, 3, 4, 5]", "list"]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list"]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list"]], ["99", ["[99, 100, 101, 102, 103, 104, ...]", "list"]]], "2": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", "len() = 100", ["0", ["[]", "list"]], ["1", ["[1, 2]", "list"]], ["2", ["[2, 3, 4, 5]", "list"]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list"]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list"]], ["99", ["[99, 100]", "list"]]], "1": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", "len() = 100", ["0", ["[]", "list"]], ["1", ["[1, 2]", "list"]], ["2", ["[2, 3, 4, 5]", "list"]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list"]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list"]], ["99", ["[99]", "list"]]], "0": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", "len() = 100", ["0", ["[]", "list"]], ["1", ["[1, 2]", "list"]], ["2", ["[2, 3, 4, 5]", "list"]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list"]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list"]], ["99", ["[]", "list"]]], "5": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", "len() = 100", ["0", ["[]", "list"]], ["1", ["[1, 2]", "list"]], ["2", ["[2, 3, 4, 5]", "list"]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list"]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list"]], ["99", ["[99, 100, 101, 102, 103, 104, ...]", "list"]]], "4": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", "len() = 100", ["0", ["[]", "list"]], ["1", ["[1, 2]", "list"]], ["2", ["[2, 3, 4, 5]", "list"]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list"]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list"]], ["99", ["[99, 100, 101, 102, 103, 104, ...]", "list"]]]}, "4": {"3": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", "len() = 99", ["0", ["[]", "list"]], ["1", ["[1, 2]", "list"]], ["2", ["[2, 3, 4, 5]", "list"]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list"]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list"]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list"]]], "2": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", "len() = 99", ["0", ["[]", "list"]], ["1", ["[1, 2]", "list"]], ["2", ["[2, 3, 4, 5]", "list"]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list"]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list"]], ["98", ["[98, 99]", "list"]]], "1": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", "len() = 99", ["0", ["[]", "list"]], ["1", ["[1, 2]", "list"]], ["2", ["[2, 3, 4, 5]", "list"]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list"]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list"]], ["98", ["[98]", "list"]]], "0": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", "len() = 99", ["0", ["[]", "list"]], ["1", ["[1, 2]", "list"]], ["2", ["[2, 3, 4, 5]", "list"]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list"]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list"]], ["98", ["[]", "list"]]], "5": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", "len() = 99", ["0", ["[]", "list"]], ["1", ["[1, 2]", "list"]], ["2", ["[2, 3, 4, 5]", "list"]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list"]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list"]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list"]]], "4": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", "len() = 99", ["0", ["[]", "list"]], ["1", ["[1, 2]", "list"]], ["2", ["[2, 3, 4, 5]", "list"]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list"]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list"]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list"]]]}}, "113": ["None", "NoneType", {"inner_call": "test_id_10"}], "112": ["None", "NoneType", {"inner_call": "test_id_8"}], "111": ["<generator object gen at 0xABC>", "generator"], "179": ["<function dummy at 0xABC>", "function"], "178": true, "238": ["[0, 1, 2, 3, 4, 5, ...]", "list", "len() = 1000", ["0", ["0", "int"]], ["1", ["1", "int"]], ["2", ["2", "int"]], ["997", ["997", "int"]], ["998", ["998", "int"]], ["999", ["999", "int"]]], "275": {"3": {"3": ["97", "int"], "2": ["97", "int"], "1": ["97", "int"], "0": ["97", "int"], "5": ["97", "int"], "4": ["97", "int"]}, "2": {"3": ["2", "int"], "2": ["2", "int"], "1": ["2", "int"], "0": ["2", "int"], "5": ["2", "int"], "4": ["2", "int"]}, "1": {"3": ["1", "int"], "2": ["1", "int"], "1": ["1", "int"], "0": ["1", "int"], "5": ["1", "int"], "4": ["1", "int"]}, "0": {"3": ["0", "int"], "2": ["0", "int"], "1": ["0", "int"], "0": ["0", "int"], "5": ["0", "int"], "4": ["0", "int"]}, "5": {"3": ["99", "int"], "2": ["99", "int"], "1": ["99", "int"], "0": ["99", "int"], "5": ["99", "int"], "4": ["99", "int"]}, "4": {"3": ["98", "int"], "2": ["98", "int"], "1": ["98", "int"], "0": ["98", "int"], "5": ["98", "int"], "4": ["98", "int"]}}, "273": {"3": {"3": ["97", "int"], "2": ["2", "int"], "1": ["1", "int"], "0": ["0", "int"], "5": ["99", "int"], "4": ["98", "int"]}, "2": {"3": ["97", "int"], "2": ["2", "int"], "1": ["1", "int"], "0": ["0", "int"], "5": ["99", "int"], "4": ["98", "int"]}, "1": {"3": ["97", "int"], "2": ["2", "int"], "1": ["1", "int"], "0": ["0", "int"], "5": ["99", "int"], "4": ["98", "int"]}, "0": {"3": ["97", "int"], "2": ["2", "int"], "1": ["1", "int"], "0": ["0", "int"], "5": ["99", "int"], "4": ["98", "int"]}, "5": {"3": ["97", "int"], "2": ["2", "int"], "1": ["1", "int"], "0": ["0", "int"], "5": ["99", "int"], "4": ["98", "int"]}, "4": {"3": ["97", "int"], "2": ["2", "int"], "1": ["1", "int"], "0": ["0", "int"], "5": ["99", "int"], "4": ["98", "int"]}}, "270": {"3": ["<function dummy at 0xABC>", "function"], "2": ["<function dummy at 0xABC>", "function"], "1": ["<function dummy at 0xABC>", "function"], "0": ["<function dummy at 0xABC>", "function"], "5": ["<function dummy at 0xABC>", "function"], "4": ["<function dummy at 0xABC>", "function"]}, "49": true, "46": true, "47": true, "230": {"3": {"3": ["194", "int"], "2": ["99", "int"], "1": ["98", "int"], "0": ["97", "int"], "5": ["196", "int"], "4": ["195", "int"]}, "2": {"3": ["99", "int"], "2": ["4", "int"], "1": ["3", "int"], "0": ["2", "int"], "5": ["101", "int"], "4": ["100", "int"]}, "1": {"3": ["98", "int"], "2": ["3", "int"], "1": ["2", "int"], "0": ["1", "int"], "5": ["100", "int"], "4": ["99", "int"]}, "0": {"3": ["97", "int"], "2": ["2", "int"], "1": ["1", "int"], "0": ["0", "int"], "5": ["99", "int"], "4": ["98", "int"]}, "5": {"3": ["196", "int"], "2": ["101", "int"], "1": ["100", "int"], "0": ["99", "int"], "5": ["198", "int"], "4": ["197", "int"]}, "4": {"3": ["195", "int"], "2": ["100", "int"], "1": ["99", "int"], "0": ["98", "int"], "5": ["197", "int"], "4": ["196", "int"]}}, "231": {"3": true, "2": true, "1": true, "0": true, "5": true, "4": true}, "175": ["<tests.golden_script.MyClass object at 0xABC>", "MyClass"], "174": ["<class 'tests.golden_script.MyClass'>", "type", ["__dict__", ["<attribute '__dict__' of 'MyClass' objects>", "getset_descriptor"]], ["__doc__", ["None", "NoneType"]], ["__module__", ["'tests.golden_script'", "str", "len() = 19"]], ["__weakref__", ["<attribute '__weakref__' of 'MyClass' objects>", "getset_descriptor"]]], "177": {"3": ["[97, 98, 99, 100, 101, 102, ...]", "list", "len() = 100", ["0", ["97", "int"]], ["1", ["98", "int"]], ["2", ["99", "int"]], ["97", ["194", "int"]], ["98", ["195", "int"]], ["99", ["196", "int"]]], "2": ["[2, 3, 4, 5, 6, 7, ...]", "list", "len() = 100", ["0", ["2", "int"]], ["1", ["3", "int"]], ["2", ["4", "int"]], ["97", ["99", "int"]], ["98", ["100", "int"]], ["99", ["101", "int"]]], "1": ["[1, 2, 3, 4, 5, 6, ...]", "list", "len() = 100", ["0", ["1", "int"]], ["1", ["2", "int"]], ["2", ["3", "int"]], ["97", ["98", "int"]], ["98", ["99", "int"]], ["99", ["100", "int"]]], "0": ["[0, 1, 2, 3, 4, 5, ...]", "list", "len() = 100", ["0", ["0", "int"]], ["1", ["1", "int"]], ["2", ["2", "int"]], ["97", ["97", "int"]], ["98", ["98", "int"]], ["99", ["99", "int"]]], "5": ["[99, 100, 101, 102, 103, 104, ...]", "list", "len() = 100", ["0", ["99", "int"]], ["1", ["100", "int"]], ["2", ["101", "int"]], ["97", ["196", "int"]], ["98", ["197", "int"]], ["99", ["198", "int"]]], "4": ["[98, 99, 100, 101, 102, 103, ...]", "list", "len() = 100", ["0", ["98", "int"]], ["1", ["99", "int"]], ["2", ["100", "int"]], ["97", ["195", "int"]], ["98", ["196", "int"]], ["99", ["197", "int"]]]}, "316": {"3": ["3", "int"], "2": ["2", "int"], "1": ["1", "int"], "0": ["0", "int"], "5": ["5", "int"], "4": ["4", "int"]}, "217": {"3": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method"], "2": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method"], "1": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method"], "0": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method"], "5": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method"], "4": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method"]}, "52": true, "107": ["[[0, 1, 2, 3, 4, 5, ...], [1, 2, 3, 4, 5, 6, ...], [2, 3, 4, 5, 6, 7, ...], [3, 4, 5, 6, 7, 8, ...], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", "len() = 100", ["0", ["[0, 1, 2, 3, 4, 5, ...]", "list", "len() = 100", ["0", ["0", "int"]], ["1", ["1", "int"]], ["2", ["2", "int"]], ["97", ["97", "int"]], ["98", ["98", "int"]], ["99", ["99", "int"]]]], ["1", ["[1, 2, 3, 4, 5, 6, ...]", "list", "len() = 100", ["0", ["1", "int"]], ["1", ["2", "int"]], ["2", ["3", "int"]], ["97", ["98", "int"]], ["98", ["99", "int"]], ["99", ["100", "int"]]]], ["2", ["[2, 3, 4, 5, 6, 7, ...]", "list", "len() = 100", ["0", ["2", "int"]], ["1", ["3", "int"]], ["2", ["4", "int"]], ["97", ["99", "int"]], ["98", ["100", "int"]], ["99", ["101", "int"]]]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", "len() = 100", ["0", ["97", "int"]], ["1", ["98", "int"]], ["2", ["99", "int"]], ["97", ["194", "int"]], ["98", ["195", "int"]], ["99", ["196", "int"]]]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", "len() = 100", ["0", ["98", "int"]], ["1", ["99", "int"]], ["2", ["100", "int"]], ["97", ["195", "int"]], ["98", ["196", "int"]], ["99", ["197", "int"]]]], ["99", ["[99, 100, 101, 102, 103, 104, ...]", "list", "len() = 100", ["0", ["99", "int"]], ["1", ["100", "int"]], ["2", ["101", "int"]], ["97", ["196", "int"]], ["98", ["197", "int"]], ["99", ["198", "int"]]]]], "225": {"3": ["None", "NoneType"], "1": ["None", "NoneType"], "5": ["None", "NoneType"]}, "44": true, "180": ["<tests.golden_script.MyClass object at 0xABC>", "MyClass", ["list", ["[[0, 1, 2, 3, 4, 5, ...], [1, 2, 3, 4, 5, 6, ...], [2, 3, 4, 5, 6, 7, ...], [3, 4, 5, 6, 7, 8, ...], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", "len() = 100", ["0", ["[0, 1, 2, 3, 4, 5, ...]", "list", "len() = 100", ["0", ["0", "int"]], ["1", ["1", "int"]], ["2", ["2", "int"]], ["97", ["97", "int"]], ["98", ["98", "int"]], ["99", ["99", "int"]]]], ["1", ["[1, 2, 3, 4, 5, 6, ...]", "list", "len() = 100", ["0", ["1", "int"]], ["1", ["2", "int"]], ["2", ["3", "int"]], ["97", ["98", "int"]], ["98", ["99", "int"]], ["99", ["100", "int"]]]], ["2", ["[2, 3, 4, 5, 6, 7, ...]", "list", "len() = 100", ["0", ["2", "int"]], ["1", ["3", "int"]], ["2", ["4", "int"]], ["97", ["99", "int"]], ["98", ["100", "int"]], ["99", ["101", "int"]]]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", "len() = 100", ["0", ["97", "int"]], ["1", ["98", "int"]], ["2", ["99", "int"]], ["97", ["194", "int"]], ["98", ["195", "int"]], ["99", ["196", "int"]]]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", "len() = 100", ["0", ["98", "int"]], ["1", ["99", "int"]], ["2", ["100", "int"]], ["97", ["195", "int"]], ["98", ["196", "int"]], ["99", ["197", "int"]]]], ["99", ["[99, 100, 101, 102, 103, 104, ...]", "list", "len() = 100", ["0", ["99", "int"]], ["1", ["100", "int"]], ["2", ["101", "int"]], ["97", ["196", "int"]], ["98", ["197", "int"]], ["99", ["198", "int"]]]]]]], "181": ["<function complex_args at 0xABC>", "function"], "289": {"3": {"3": ["97", "int"], "2": ["97", "int"], "1": ["97", "int"], "0": ["97", "int"], "5": ["97", "int"], "4": ["97", "int"]}, "2": {"3": ["2", "int"], "2": ["2", "int"], "1": ["2", "int"], "0": ["2", "int"]}, "1": {"1": ["1", "int"], "0": ["1", "int"]}, "5": {"3": ["99", "int"], "2": ["99", "int"], "1": ["99", "int"], "0": ["99", "int"], "5": ["99", "int"], "4": ["99", "int"]}, "4": {"3": ["98", "int"], "2": ["98", "int"], "1": ["98", "int"], "0": ["98", "int"], "5": ["98", "int"], "4": ["98", "int"]}}, "167": {"3": {"3": true, "2": true, "1": true, "0": true, "5": true, "4": true}, "2": {"3": true, "2": true, "1": true, "0": true}, "1": {"1": true, "0": true}, "5": {"3": true, "2": true, "1": true, "0": true, "5": true, "4": true}, "4": {"3": true, "2": true, "1": true, "0": true, "5": true, "4": true}}, "187": ["<function gen at 0xABC>", "function"], "188": ["<function use_gen_1 at 0xABC>", "function"], "189": ["<generator object gen at 0xABC>", "generator"], "287": {"3": {"3": ["[97, 98, 99, 100, 101, 102, ...]", "list", "len() = 191", ["0", ["97", "int"]], ["1", ["98", "int"]], ["2", ["99", "int"]], ["188", ["285", "int"]], ["189", ["286", "int"]], ["190", ["287", "int"]]], "2": ["[97, 98]", "list", "len() = 2", ["0", ["97", "int"]], ["1", ["98", "int"]]], "1": ["[97]", "list", "len() = 1", ["0", ["97", "int"]]], "0": ["[]", "list", "len() = 0"], "5": ["[97, 98, 99, 100, 101, 102, ...]", "list", "len() = 193", ["0", ["97", "int"]], ["1", ["98", "int"]], ["2", ["99", "int"]], ["190", ["287", "int"]], ["191", ["288", "int"]], ["192", ["289", "int"]]], "4": ["[97, 98, 99, 100, 101, 102, ...]", "list", "len() = 192", ["0", ["97", "int"]], ["1", ["98", "int"]], ["2", ["99", "int"]], ["189", ["286", "int"]], ["190", ["287", "int"]], ["191", ["288", "int"]]]}, "2": {"3": ["[2, 3, 4]", "list", "len() = 3", ["0", ["2", "int"]], ["1", ["3", "int"]], ["2", ["4", "int"]]], "2": ["[2, 3]", "list", "len() = 2", ["0", ["2", "int"]], ["1", ["3", "int"]]], "1": ["[2]", "list", "len() = 1", ["0", ["2", "int"]]], "0": ["[]", "list", "len() = 0"]}, "1": {"1": ["[1]", "list", "len() = 1", ["0", ["1", "int"]]], "0": ["[]", "list", "len() = 0"]}, "5": {"3": ["[99, 100, 101, 102, 103, 104, ...]", "list", "len() = 195", ["0", ["99", "int"]], ["1", ["100", "int"]], ["2", ["101", "int"]], ["192", ["291", "int"]], ["193", ["292", "int"]], ["194", ["293", "int"]]], "2": ["[99, 100]", "list", "len() = 2", ["0", ["99", "int"]], ["1", ["100", "int"]]], "1": ["[99]", "list", "len() = 1", ["0", ["99", "int"]]], "0": ["[]", "list", "len() = 0"], "5": ["[99, 100, 101, 102, 103, 104, ...]", "list", "len() = 197", ["0", ["99", "int"]], ["1", ["100", "int"]], ["2", ["101", "int"]], ["194", ["293", "int"]], ["195", ["294", "int"]], ["196", ["295", "int"]]], "4": ["[99, 100, 101, 102, 103, 104, ...]", "list", "len() = 196", ["0", ["99", "int"]], ["1", ["100", "int"]], ["2", ["101", "int"]], ["193", ["292", "int"]], ["194", ["293", "int"]], ["195", ["294", "int"]]]}, "4": {"3": ["[98, 99, 100, 101, 102, 103, ...]", "list", "len() = 193", ["0", ["98", "int"]], ["1", ["99", "int"]], ["2", ["100", "int"]], ["190", ["288", "int"]], ["191", ["289", "int"]], ["192", ["290", "int"]]], "2": ["[98, 99]", "list", "len() = 2", ["0", ["98", "int"]], ["1", ["99", "int"]]], "1": ["[98]", "list", "len() = 1", ["0", ["98", "int"]]], "0": ["[]", "list", "len() = 0"], "5": ["[98, 99, 100, 101, 102, 103, ...]", "list", "len() = 195", ["0", ["98", "int"]], ["1", ["99", "int"]], ["2", ["100", "int"]], ["192", ["290", "int"]], ["193", ["291", "int"]], ["194", ["292", "int"]]], "4": ["[98, 99, 100, 101, 102, 103, ...]", "list", "len() = 194", ["0", ["98", "int"]], ["1", ["99", "int"]], ["2", ["100", "int"]], ["191", ["289", "int"]], ["192", ["290", "int"]], ["193", ["291", "int"]]]}}, "108": ["None", "NoneType"], "109": ["None", "NoneType", {"inner_call": "test_id_7"}], "51": true, "312": {"3": ["1", "int"], "2": ["0", "int"], "1": ["1", "int"], "0": ["0", "int"], "5": ["1", "int"], "4": ["0", "int"]}, "100": {"3": true, "2": true, "1": true, "0": true, "5": true, "4": true}, "102": ["[0, 1, 2, 3, 4, 5]", "list", "len() = 6", ["0", ["0", "int"]], ["1", ["1", "int"]], ["2", ["2", "int"]], ["3", ["3", "int"]], ["4", ["4", "int"]], ["5", ["5", "int"]]], "103": {"3": true, "2": true, "1": true, "0": true, "5": true, "4": true}, "277": {"3": ["[0, 1, 2, 3, 4, 5, ...]", "list", "len() = 100", ["0", ["0", "int"]], ["1", ["1", "int"]], ["2", ["2", "int"]], ["97", ["97", "int"]], ["98", ["98", "int"]], ["99", ["99", "int"]]], "2": ["[0, 1, 2, 3, 4, 5, ...]", "list", "len() = 100", ["0", ["0", "int"]], ["1", ["1", "int"]], ["2", ["2", "int"]], ["97", ["97", "int"]], ["98", ["98", "int"]], ["99", ["99", "int"]]], "1": ["[0, 1, 2, 3, 4, 5, ...]", "list", "len() = 100", ["0", ["0", "int"]], ["1", ["1", "int"]], ["2", ["2", "int"]], ["97", ["97", "int"]], ["98", ["98", "int"]], ["99", ["99", "int"]]], "0": ["[0, 1, 2, 3, 4, 5, ...]", "list", "len() = 100", ["0", ["0", "int"]], ["1", ["1", "int"]], ["2", ["2", "int"]], ["97", ["97", "int"]], ["98", ["98", "int"]], ["99", ["99", "int"]]], "5": ["[0, 1, 2, 3, 4, 5, ...]", "list", "len() = 100", ["0", ["0", "int"]], ["1", ["1", "int"]], ["2", ["2", "int"]], ["97", ["97", "int"]], ["98", ["98", "int"]], ["99", ["99", "int"]]], "4": ["[0, 1, 2, 3, 4, 5, ...]", "list", "len() = 100", ["0", ["0", "int"]], ["1", ["1", "int"]], ["2", ["2", "int"]], ["97", ["97", "int"]], ["98", ["98", "int"]], ["99", ["99", "int"]]]}, "105": ["<tests.golden_script.MyClass object at 0xABC>", "MyClass"], "54": true, "156": ["<function factorial at 0xABC>", "function"], "265": {"3": ["97", "int"], "2": ["2", "int"], "1": ["1", "int"], "0": ["0", "int"], "5": ["99", "int"], "4": ["98", "int"]}, "94": ["120", "int", {"inner_call": "test_id_2"}], "267": {"3": {"3": ["288", "int"], "2": ["99", "int"], "1": ["98", "int"], "0": ["97", "int"], "5": ["290", "int"], "4": ["289", "int"]}, "2": {"3": ["5", "int"], "2": ["4", "int"], "1": ["3", "int"], "0": ["2", "int"]}, "1": {"1": ["2", "int"], "0": ["1", "int"]}, "5": {"3": ["294", "int"], "2": ["101", "int"], "1": ["100", "int"], "0": ["99", "int"], "5": ["296", "int"], "4": ["295", "int"]}, "4": {"3": ["291", "int"], "2": ["100", "int"], "1": ["99", "int"], "0": ["98", "int"], "5": ["293", "int"], "4": ["292", "int"]}}, "266": {"3": {"3": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method"], "2": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method"], "1": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method"], "0": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method"], "5": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method"], "4": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method"]}, "2": {"3": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method"], "2": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method"], "1": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method"], "0": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method"]}, "1": {"1": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method"], "0": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method"]}, "5": {"3": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method"], "2": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method"], "1": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method"], "0": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method"], "5": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method"], "4": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method"]}, "4": {"3": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method"], "2": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method"], "1": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method"], "0": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method"], "5": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method"], "4": ["<built-in method append of list object at 0xABC>", "builtin_function_or_method"]}}, "48": true, "99": {"3": true, "2": true, "1": true, "0": true, "5": true, "4": true}, "259": {"3": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", "len() = 97", ["0", ["[]", "list", "len() = 0"]], ["1", ["[1, 2]", "list", "len() = 2", ["0", ["1", "int"]], ["1", ["2", "int"]]]], ["2", ["[2, 3, 4, 5]", "list", "len() = 4", ["0", ["2", "int"]], ["1", ["3", "int"]], ["2", ["4", "int"]], ["3", ["5", "int"]]]], ["94", ["[94, 95, 96, 97, 98, 99, ...]", "list", "len() = 188", ["0", ["94", "int"]], ["1", ["95", "int"]], ["2", ["96", "int"]], ["185", ["279", "int"]], ["186", ["280", "int"]], ["187", ["281", "int"]]]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list", "len() = 190", ["0", ["95", "int"]], ["1", ["96", "int"]], ["2", ["97", "int"]], ["187", ["282", "int"]], ["188", ["283", "int"]], ["189", ["284", "int"]]]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", "len() = 192", ["0", ["96", "int"]], ["1", ["97", "int"]], ["2", ["98", "int"]], ["189", ["285", "int"]], ["190", ["286", "int"]], ["191", ["287", "int"]]]]], "2": ["[[], [1, 2]]", "list", "len() = 2", ["0", ["[]", "list", "len() = 0"]], ["1", ["[1, 2]", "list", "len() = 2", ["0", ["1", "int"]], ["1", ["2", "int"]]]]], "1": ["[[]]", "list", "len() = 1", ["0", ["[]", "list", "len() = 0"]]], "0": ["[]", "list", "len() = 0"], "5": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", "len() = 99", ["0", ["[]", "list", "len() = 0"]], ["1", ["[1, 2]", "list", "len() = 2", ["0", ["1", "int"]], ["1", ["2", "int"]]]], ["2", ["[2, 3, 4, 5]", "list", "len() = 4", ["0", ["2", "int"]], ["1", ["3", "int"]], ["2", ["4", "int"]], ["3", ["5", "int"]]]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", "len() = 192", ["0", ["96", "int"]], ["1", ["97", "int"]], ["2", ["98", "int"]], ["189", ["285", "int"]], ["190", ["286", "int"]], ["191", ["287", "int"]]]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", "len() = 194", ["0", ["97", "int"]], ["1", ["98", "int"]], ["2", ["99", "int"]], ["191", ["288", "int"]], ["192", ["289", "int"]], ["193", ["290", "int"]]]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list", "len() = 196", ["0", ["98", "int"]], ["1", ["99", "int"]], ["2", ["100", "int"]], ["193", ["291", "int"]], ["194", ["292", "int"]], ["195", ["293", "int"]]]]], "4": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", "len() = 98", ["0", ["[]", "list", "len() = 0"]], ["1", ["[1, 2]", "list", "len() = 2", ["0", ["1", "int"]], ["1", ["2", "int"]]]], ["2", ["[2, 3, 4, 5]", "list", "len() = 4", ["0", ["2", "int"]], ["1", ["3", "int"]], ["2", ["4", "int"]], ["3", ["5", "int"]]]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list", "len() = 190", ["0", ["95", "int"]], ["1", ["96", "int"]], ["2", ["97", "int"]], ["187", ["282", "int"]], ["188", ["283", "int"]], ["189", ["284", "int"]]]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list", "len() = 192", ["0", ["96", "int"]], ["1", ["97", "int"]], ["2", ["98", "int"]], ["189", ["285", "int"]], ["190", ["286", "int"]], ["191", ["287", "int"]]]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list", "len() = 194", ["0", ["97", "int"]], ["1", ["98", "int"]], ["2", ["99", "int"]], ["191", ["288", "int"]], ["192", ["289", "int"]], ["193", ["290", "int"]]]]]}, "221": {"3": ["194", "int"], "2": ["4", "int"], "1": ["2", "int"], "0": ["0", "int"], "5": ["198", "int"], "4": ["196", "int"]}, "50": true, "223": {"3": {"3": ["None", "NoneType"], "2": ["None", "NoneType"], "1": ["None", "NoneType"], "0": ["None", "NoneType"], "5": ["None", "NoneType"], "4": ["None", "NoneType"]}, "2": {"3": ["None", "NoneType"], "2": ["None", "NoneType"], "1": ["None", "NoneType"], "0": ["None", "NoneType"]}, "1": {"1": ["None", "NoneType"], "0": ["None", "NoneType"]}, "5": {"3": ["None", "NoneType"], "2": ["None", "NoneType"], "1": ["None", "NoneType"], "0": ["None", "NoneType"], "5": ["None", "NoneType"], "4": ["None", "NoneType"]}, "4": {"3": ["None", "NoneType"], "2": ["None", "NoneType"], "1": ["None", "NoneType"], "0": ["None", "NoneType"], "5": ["None", "NoneType"], "4": ["None", "NoneType"]}}, "222": {"3": {"3": ["None", "NoneType"], "2": ["None", "NoneType"], "1": ["None", "NoneType"], "0": ["None", "NoneType"], "5": ["None", "NoneType"], "4": ["None", "NoneType"]}, "2": {"3": ["None", "NoneType"], "2": ["None", "NoneType"], "1": ["None", "NoneType"], "0": ["None", "NoneType"]}, "1": {"1": ["None", "NoneType"], "0": ["None", "NoneType"]}, "5": {"3": ["None", "NoneType"], "2": ["None", "NoneType"], "1": ["None", "NoneType"], "0": ["None", "NoneType"], "5": ["None", "NoneType"], "4": ["None", "NoneType"]}, "4": {"3": ["None", "NoneType"], "2": ["None", "NoneType"], "1": ["None", "NoneType"], "0": ["None", "NoneType"], "5": ["None", "NoneType"], "4": ["None", "NoneType"]}}, "269": {"3": {"3": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", "len() = 98", ["0", ["[]", "list"]], ["1", ["[1, 2]", "list"]], ["2", ["[2, 3, 4, 5]", "list"]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list"]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list"]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list"]]], "2": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", "len() = 98", ["0", ["[]", "list"]], ["1", ["[1, 2]", "list"]], ["2", ["[2, 3, 4, 5]", "list"]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list"]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list"]], ["97", ["[97, 98, 99]", "list"]]], "1": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", "len() = 98", ["0", ["[]", "list"]], ["1", ["[1, 2]", "list"]], ["2", ["[2, 3, 4, 5]", "list"]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list"]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list"]], ["97", ["[97, 98]", "list"]]], "0": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", "len() = 98", ["0", ["[]", "list"]], ["1", ["[1, 2]", "list"]], ["2", ["[2, 3, 4, 5]", "list"]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list"]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list"]], ["97", ["[97]", "list"]]], "5": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", "len() = 98", ["0", ["[]", "list"]], ["1", ["[1, 2]", "list"]], ["2", ["[2, 3, 4, 5]", "list"]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list"]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list"]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list"]]], "4": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", "len() = 98", ["0", ["[]", "list"]], ["1", ["[1, 2]", "list"]], ["2", ["[2, 3, 4, 5]", "list"]], ["95", ["[95, 96, 97, 98, 99, 100, ...]", "list"]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list"]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list"]]]}, "2": {"3": ["[[], [1, 2], [2, 3, 4, 5]]", "list", "len() = 3", ["0", ["[]", "list"]], ["1", ["[1, 2]", "list"]], ["2", ["[2, 3, 4, 5]", "list"]]], "2": ["[[], [1, 2], [2, 3, 4]]", "list", "len() = 3", ["0", ["[]", "list"]], ["1", ["[1, 2]", "list"]], ["2", ["[2, 3, 4]", "list"]]], "1": ["[[], [1, 2], [2, 3]]", "list", "len() = 3", ["0", ["[]", "list"]], ["1", ["[1, 2]", "list"]], ["2", ["[2, 3]", "list"]]], "0": ["[[], [1, 2], [2]]", "list", "len() = 3", ["0", ["[]", "list"]], ["1", ["[1, 2]", "list"]], ["2", ["[2]", "list"]]]}, "1": {"1": ["[[], [1, 2]]", "list", "len() = 2", ["0", ["[]", "list"]], ["1", ["[1, 2]", "list"]]], "0": ["[[], [1]]", "list", "len() = 2", ["0", ["[]", "list"]], ["1", ["[1]", "list"]]]}, "5": {"3": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", "len() = 100", ["0", ["[]", "list"]], ["1", ["[1, 2]", "list"]], ["2", ["[2, 3, 4, 5]", "list"]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list"]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list"]], ["99", ["[99, 100, 101, 102, 103, 104, ...]", "list"]]], "2": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", "len() = 100", ["0", ["[]", "list"]], ["1", ["[1, 2]", "list"]], ["2", ["[2, 3, 4, 5]", "list"]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list"]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list"]], ["99", ["[99, 100, 101]", "list"]]], "1": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", "len() = 100", ["0", ["[]", "list"]], ["1", ["[1, 2]", "list"]], ["2", ["[2, 3, 4, 5]", "list"]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list"]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list"]], ["99", ["[99, 100]", "list"]]], "0": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", "len() = 100", ["0", ["[]", "list"]], ["1", ["[1, 2]", "list"]], ["2", ["[2, 3, 4, 5]", "list"]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list"]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list"]], ["99", ["[99]", "list"]]], "5": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", "len() = 100", ["0", ["[]", "list"]], ["1", ["[1, 2]", "list"]], ["2", ["[2, 3, 4, 5]", "list"]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list"]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list"]], ["99", ["[99, 100, 101, 102, 103, 104, ...]", "list"]]], "4": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", "len() = 100", ["0", ["[]", "list"]], ["1", ["[1, 2]", "list"]], ["2", ["[2, 3, 4, 5]", "list"]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list"]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list"]], ["99", ["[99, 100, 101, 102, 103, 104, ...]", "list"]]]}, "4": {"3": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", "len() = 99", ["0", ["[]", "list"]], ["1", ["[1, 2]", "list"]], ["2", ["[2, 3, 4, 5]", "list"]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list"]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list"]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list"]]], "2": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", "len() = 99", ["0", ["[]", "list"]], ["1", ["[1, 2]", "list"]], ["2", ["[2, 3, 4, 5]", "list"]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list"]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list"]], ["98", ["[98, 99, 100]", "list"]]], "1": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", "len() = 99", ["0", ["[]", "list"]], ["1", ["[1, 2]", "list"]], ["2", ["[2, 3, 4, 5]", "list"]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list"]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list"]], ["98", ["[98, 99]", "list"]]], "0": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", "len() = 99", ["0", ["[]", "list"]], ["1", ["[1, 2]", "list"]], ["2", ["[2, 3, 4, 5]", "list"]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list"]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list"]], ["98", ["[98]", "list"]]], "5": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", "len() = 99", ["0", ["[]", "list"]], ["1", ["[1, 2]", "list"]], ["2", ["[2, 3, 4, 5]", "list"]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list"]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list"]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list"]]], "4": ["[[], [1, 2], [2, 3, 4, 5], [3, 4, 5, 6, 7, 8], [4, 5, 6, 7, 8, 9, ...], [5, 6, 7, 8, 9, 10, ...], ...]", "list", "len() = 99", ["0", ["[]", "list"]], ["1", ["[1, 2]", "list"]], ["2", ["[2, 3, 4, 5]", "list"]], ["96", ["[96, 97, 98, 99, 100, 101, ...]", "list"]], ["97", ["[97, 98, 99, 100, 101, 102, ...]", "list"]], ["98", ["[98, 99, 100, 101, 102, 103, ...]", "list"]]]}}, "98": ["[0, 1, 2, 3, 4, 5, ...]", "list", "len() = 100", ["0", ["0", "int"]], ["1", ["1", "int"]], ["2", ["2", "int"]], ["97", ["97", "int"]], ["98", ["98", "int"]], ["99", ["99", "int"]]], "227": {"2": true, "0": true, "4": true}, "165": {"3": ["[0, 1, 2, 3, 4, 5, ...]", "list", "len() = 194", ["0", ["0", "int"]], ["1", ["1", "int"]], ["2", ["2", "int"]], ["191", ["191", "int"]], ["192", ["192", "int"]], ["193", ["193", "int"]]], "2": ["[0, 1, 2, 3]", "list", "len() = 4", ["0", ["0", "int"]], ["1", ["1", "int"]], ["2", ["2", "int"]], ["3", ["3", "int"]]], "1": ["[0, 1]", "list", "len() = 2", ["0", ["0", "int"]], ["1", ["1", "int"]]], "0": ["[]", "list", "len() = 0"], "5": ["[0, 1, 2, 3, 4, 5, ...]", "list", "len() = 198", ["0", ["0", "int"]], ["1", ["1", "int"]], ["2", ["2", "int"]], ["195", ["195", "int"]], ["196", ["196", "int"]], ["197", ["197", "int"]]], "4": ["[0, 1, 2, 3, 4, 5, ...]", "list", "len() = 196", ["0", ["0", "int"]], ["1", ["1", "int"]], ["2", ["2", "int"]], ["193", ["193", "int"]], ["194", ["194", "int"]], ["195", ["195", "int"]]]}, "271": {"3": ["11.0", "float"], "1": ["11.0", "float"], "5": ["11.0", "float"]}, "171": {"3": true, "2": true, "1": true, "0": true, "5": true, "4": true}, "233": ["[0, 1, 2, 3, 4, 5, ...]", "list", "len() = 100", ["0", ["0", "int"]], ["1", ["1", "int"]], ["2", ["2", "int"]], ["97", ["97", "int"]], ["98", ["98", "int"]], ["99", ["99", "int"]]], "163": {"3": ["None", "NoneType"], "2": ["None", "NoneType"], "1": ["None", "NoneType"], "0": ["None", "NoneType"], "5": ["None", "NoneType"], "4": ["None", "NoneType"]}, "53": true}, "loop_iterations": {"46": [{"loops": {}, "index": 0}, {"loops": {"100": [{"loops": {}, "index": 0}, {"loops": {}, "index": 1}]}, "index": 1}, {"loops": {"100": [{"loops": {}, "index": 0}, {"loops": {}, "index": 1}, {"loops": {}, "index": 2}, {"loops": {}, "index": 3}]}, "index": 2}, {"loops": {"100": [{"loops": {}, "index": 0}, {"loops": {}, "index": 1}, {"loops": {}, "index": 2}, {"loops": {}, "index": 191}, {"loops": {}, "index": 192}, {"loops": {}, "index": 193}]}, "index": 97}, {"loops": {"100": [{"loops": {}, "index": 0}, {"loops": {}, "index": 1}, {"loops": {}, "index": 2}, {"loops": {}, "index": 193}, {"loops": {}, "index": 194}, {"loops": {}, "index": 195}]}, "index": 98}, {"loops": {"100": [{"loops": {}, "index": 0}, {"loops": {}, "index": 1}, {"loops": {}, "index": 2}, {"loops": {}, "index": 195}, {"loops": {}, "index": 196}, {"loops": {}, "index": 197}]}, "index": 99}], "178": [{"loops": {"231": [{"loops": {}, "index": 0}, {"loops": {}, "index": 1}, {"loops": {}, "index": 2}, {"loops": {}, "index": 97}, {"loops": {}, "index": 98}, {"loops": {}, "index": 99}]}, "index": 0}, {"loops": {"231": [{"loops": {}, "index": 0}, {"loops": {}, "index": 1}, {"loops": {}, "index": 2}, {"loops": {}, "index": 97}, {"loops": {}, "index": 98}, {"loops": {}, "index": 99}]}, "index": 1}, {"loops": {"231": [{"loops": {}, "index": 0}, {"loops": {}, "index": 1}, {"loops": {}, "index": 2}, {"loops": {}, "index": 97}, {"loops": {}, "index": 98}, {"loops": {}, "index": 99}]}, "index": 2}, {"loops": {"231": [{"loops": {}, "index": 0}, {"loops": {}, "index": 1}, {"loops": {}, "index": 2}, {"loops": {}, "index": 97}, {"loops": {}, "index": 98}, {"loops": {}, "index": 99}]}, "index": 97}, {"loops": {"231": [{"loops": {}, "index": 0}, {"loops": {}, "index": 1}, {"loops": {}, "index": 2}, {"loops": {}, "index": 97}, {"loops": {}, "index": 98}, {"loops": {}, "index": 99}]}, "index": 98}, {"loops": {"231": [{"loops": {}, "index": 0}, {"loops": {}, "index": 1}, {"loops": {}, "index": 2}, {"loops": {}, "index": 97}, {"loops": {}, "index": 98}, {"loops": {}, "index": 99}]}, "index": 99}], "47": [{"loops": {}, "index": 0}, {"loops": {}, "index": 1}, {"loops": {}, "index": 2}, {"loops": {}, "index": 3}, {"loops": {}, "index": 4}, {"loops": {}, "index": 5}]}, "type_names": ["MyClass", "NoneType", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "long", "set", "str", "tuple", "type", "unicode", "wrapper_descriptor"]}, "exception": null}, {"function": {"html_body": "<span data-index=\"4\" data-type=\"stmt\">@<span data-index=\"21\" data-type=\"expr\">eye</span>\ndef factorial(<span data-index=\"57\" data-type=\"expr\">n</span>):\n<span data-index=\"19\" data-type=\"stmt\">    if <span data-index=\"58\" data-type=\"expr\"><span data-index=\"117\" data-type=\"expr\">n</span> &lt;= 1</span>:\n        <span data-index=\"59\" data-type=\"stmt\">return 1</span></span>\n    <span data-index=\"20\" data-type=\"stmt\">return <span data-index=\"60\" data-type=\"expr\"><span data-index=\"121\" data-type=\"expr\">n</span> * <span data-index=\"123\" data-type=\"expr\"><span data-index=\"195\" data-type=\"expr\">factorial</span>(<span data-index=\"196\" data-type=\"expr\"><span data-index=\"247\" data-type=\"expr\">n</span> - 1</span>)</span></span></span></span>\n", "data": {"node_loops": {}}, "lineno": 7, "name": "factorial"}, "traceback": null, "arguments": [["n", "5"]], "return_value": "120", "data": {"num_special_types": 13, "node_values": {"196": ["4", "int"], "195": ["<function factorial at 0xABC>", "function"], "58": ["False", "bool"], "123": ["24", "int", {"inner_call": "test_id_3"}], "121": ["5", "int"], "247": ["5", "int"], "19": true, "117": ["5", "int"], "60": ["120", "int"], "20": true}, "loop_iterations": {}, "type_names": ["MyClass", "NoneType", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "long", "set", "str", "tuple", "type", "unicode", "wrapper_descriptor"]}, "exception": null}, {"function": {"html_body": "<span data-index=\"4\" data-type=\"stmt\">@<span data-index=\"21\" data-type=\"expr\">eye</span>\ndef factorial(<span data-index=\"57\" data-type=\"expr\">n</span>):\n<span data-index=\"19\" data-type=\"stmt\">    if <span data-index=\"58\" data-type=\"expr\"><span data-index=\"117\" data-type=\"expr\">n</span> &lt;= 1</span>:\n        <span data-index=\"59\" data-type=\"stmt\">return 1</span></span>\n    <span data-index=\"20\" data-type=\"stmt\">return <span data-index=\"60\" data-type=\"expr\"><span data-index=\"121\" data-type=\"expr\">n</span> * <span data-index=\"123\" data-type=\"expr\"><span data-index=\"195\" data-type=\"expr\">factorial</span>(<span data-index=\"196\" data-type=\"expr\"><span data-index=\"247\" data-type=\"expr\">n</span> - 1</span>)</span></span></span></span>\n", "data": {"node_loops": {}}, "lineno": 7, "name": "factorial"}, "traceback": null, "arguments": [["n", "4"]], "return_value": "24", "data": {"num_special_types": 13, "node_values": {"196": ["3", "int"], "195": ["<function factorial at 0xABC>", "function"], "58": ["False", "bool"], "123": ["6", "int", {"inner_call": "test_id_4"}], "121": ["4", "int"], "247": ["4", "int"], "19": true, "117": ["4", "int"], "60": ["24", "int"], "20": true}, "loop_iterations": {}, "type_names": ["MyClass", "NoneType", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "long", "set", "str", "tuple", "type", "unicode", "wrapper_descriptor"]}, "exception": null}, {"function": {"html_body": "<span data-index=\"4\" data-type=\"stmt\">@<span data-index=\"21\" data-type=\"expr\">eye</span>\ndef factorial(<span data-index=\"57\" data-type=\"expr\">n</span>):\n<span data-index=\"19\" data-type=\"stmt\">    if <span data-index=\"58\" data-type=\"expr\"><span data-index=\"117\" data-type=\"expr\">n</span> &lt;= 1</span>:\n        <span data-index=\"59\" data-type=\"stmt\">return 1</span></span>\n    <span data-index=\"20\" data-type=\"stmt\">return <span data-index=\"60\" data-type=\"expr\"><span data-index=\"121\" data-type=\"expr\">n</span> * <span data-index=\"123\" data-type=\"expr\"><span data-index=\"195\" data-type=\"expr\">factorial</span>(<span data-index=\"196\" data-type=\"expr\"><span data-index=\"247\" data-type=\"expr\">n</span> - 1</span>)</span></span></span></span>\n", "data": {"node_loops": {}}, "lineno": 7, "name": "factorial"}, "traceback": null, "arguments": [["n", "3"]], "return_value": "6", "data": {"num_special_types": 13, "node_values": {"196": ["2", "int"], "195": ["<function factorial at 0xABC>", "function"], "58": ["False", "bool"], "123": ["2", "int", {"inner_call": "test_id_5"}], "121": ["3", "int"], "247": ["3", "int"], "19": true, "117": ["3", "int"], "60": ["6", "int"], "20": true}, "loop_iterations": {}, "type_names": ["MyClass", "NoneType", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "long", "set", "str", "tuple", "type", "unicode", "wrapper_descriptor"]}, "exception": null}, {"function": {"html_body": "<span data-index=\"4\" data-type=\"stmt\">@<span data-index=\"21\" data-type=\"expr\">eye</span>\ndef factorial(<span data-index=\"57\" data-type=\"expr\">n</span>):\n<span data-index=\"19\" data-type=\"stmt\">    if <span data-index=\"58\" data-type=\"expr\"><span data-index=\"117\" data-type=\"expr\">n</span> &lt;= 1</span>:\n        <span data-index=\"59\" data-type=\"stmt\">return 1</span></span>\n    <span data-index=\"20\" data-type=\"stmt\">return <span data-index=\"60\" data-type=\"expr\"><span data-index=\"121\" data-type=\"expr\">n</span> * <span data-index=\"123\" data-type=\"expr\"><span data-index=\"195\" data-type=\"expr\">factorial</span>(<span data-index=\"196\" data-type=\"expr\"><span data-index=\"247\" data-type=\"expr\">n</span> - 1</span>)</span></span></span></span>\n", "data": {"node_loops": {}}, "lineno": 7, "name": "factorial"}, "traceback": null, "arguments": [["n", "2"]], "return_value": "2", "data": {"num_special_types": 13, "node_values": {"196": ["1", "int"], "195": ["<function factorial at 0xABC>", "function"], "58": ["False", "bool"], "123": ["1", "int", {"inner_call": "test_id_6"}], "121": ["2", "int"], "247": ["2", "int"], "19": true, "117": ["2", "int"], "60": ["2", "int"], "20": true}, "loop_iterations": {}, "type_names": ["MyClass", "NoneType", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "long", "set", "str", "tuple", "type", "unicode", "wrapper_descriptor"]}, "exception": null}, {"function": {"html_body": "<span data-index=\"4\" data-type=\"stmt\">@<span data-index=\"21\" data-type=\"expr\">eye</span>\ndef factorial(<span data-index=\"57\" data-type=\"expr\">n</span>):\n<span data-index=\"19\" data-type=\"stmt\">    if <span data-index=\"58\" data-type=\"expr\"><span data-index=\"117\" data-type=\"expr\">n</span> &lt;= 1</span>:\n        <span data-index=\"59\" data-type=\"stmt\">return 1</span></span>\n    <span data-index=\"20\" data-type=\"stmt\">return <span data-index=\"60\" data-type=\"expr\"><span data-index=\"121\" data-type=\"expr\">n</span> * <span data-index=\"123\" data-type=\"expr\"><span data-index=\"195\" data-type=\"expr\">factorial</span>(<span data-index=\"196\" data-type=\"expr\"><span data-index=\"247\" data-type=\"expr\">n</span> - 1</span>)</span></span></span></span>\n", "data": {"node_loops": {}}, "lineno": 7, "name": "factorial"}, "traceback": null, "arguments": [["n", "1"]], "return_value": "1", "data": {"num_special_types": 13, "node_values": {"59": true, "58": ["True", "bool"], "117": ["1", "int"], "19": true}, "loop_iterations": {}, "type_names": ["MyClass", "NoneType", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "long", "set", "str", "tuple", "type", "unicode", "wrapper_descriptor"]}, "exception": null}, {"function": {"html_body": "<span data-index=\"8\" data-type=\"stmt\">@<span data-index=\"31\" data-type=\"expr\">eye</span>\ndef complex_args(<span data-index=\"72\" data-type=\"expr\">pos1</span>, <span data-index=\"73\" data-type=\"expr\">pos2</span>, <span data-index=\"74\" data-type=\"expr\">key1</span>=3, <span data-index=\"75\" data-type=\"expr\">key2</span>=4, *args, **kwargs):\n    <span data-index=\"30\" data-type=\"stmt\">pass</span></span>\n", "data": {"node_loops": {}}, "lineno": 32, "name": "complex_args"}, "traceback": null, "arguments": [["pos1", "[0, 1, 2, 3, 4, 5, ...]"], ["pos2", "'hello'"], ["key1", "3"], ["key2", "8"], ["args", "()"], ["kwargs", "{'kwarg1': {}}"]], "return_value": "None", "data": {"num_special_types": 13, "node_values": {"30": true}, "loop_iterations": {}, "type_names": ["MyClass", "NoneType", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "long", "set", "str", "tuple", "type", "unicode", "wrapper_descriptor"]}, "exception": null}, {"function": {"html_body": "<span data-index=\"10\" data-type=\"stmt\">@<span data-index=\"37\" data-type=\"expr\">eye</span>\ndef use_gen_1(<span data-index=\"83\" data-type=\"expr\">g</span>):\n<span data-index=\"36\" data-type=\"loop\">    for x in <span data-index=\"85\" data-type=\"expr\"><span data-index=\"148\" data-type=\"expr\">islice</span>(<span data-index=\"149\" data-type=\"expr\">g</span>, 3)</span>:\n        <span data-index=\"86\" data-type=\"stmt\"><span data-index=\"151\" data-type=\"expr\"><span data-index=\"211\" data-type=\"expr\">dummy</span>(<span data-index=\"212\" data-type=\"expr\">x</span>)</span></span></span></span>\n", "data": {"node_loops": {"151": [36], "86": [36], "211": [36], "212": [36]}}, "lineno": 43, "name": "use_gen_1"}, "traceback": null, "arguments": [["g", "<generator object gen at 0xABC>"]], "return_value": "None", "data": {"num_special_types": 13, "node_values": {"151": {"2": ["None", "NoneType"], "1": ["None", "NoneType"], "0": ["None", "NoneType"]}, "148": ["<type 'itertools.islice'>", "type", ["__doc__", ["'islice(iterab...s an iterator.'", "str", "len() = 416"]], ["__getattribute__", ["<slot wrapper '__getattribut...f 'itertools.islice' objects>", "wrapper_descriptor"]], ["__iter__", ["<slot wrapper '__iter__' of 'itertools.islice' objects>", "wrapper_descriptor"]], ["__new__", ["<built-in method __new__ of type object at 0xABC>", "builtin_function_or_method"]], ["next", ["<slot wrapper 'next' of 'itertools.islice' objects>", "wrapper_descriptor"]]], "149": ["<generator object gen at 0xABC>", "generator"], "211": {"2": ["<function dummy at 0xABC>", "function"], "1": ["<function dummy at 0xABC>", "function"], "0": ["<function dummy at 0xABC>", "function"]}, "212": {"2": ["2", "int"], "1": ["1", "int"], "0": ["0", "int"]}, "86": {"2": true, "1": true, "0": true}, "36": true, "85": ["<itertools.islice object at 0xABC>", "islice"]}, "loop_iterations": {"36": [{"loops": {}, "index": 0}, {"loops": {}, "index": 1}, {"loops": {}, "index": 2}]}, "type_names": ["MyClass", "NoneType", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "long", "set", "str", "tuple", "type", "unicode", "wrapper_descriptor"]}, "exception": null}, {"function": {"html_body": "<span data-index=\"9\" data-type=\"stmt\">@<span data-index=\"34\" data-type=\"expr\">eye</span>\ndef gen():\n<span data-index=\"33\" data-type=\"loop\">    for i in <span data-index=\"80\" data-type=\"expr\"><span data-index=\"143\" data-type=\"expr\">range</span>(6)</span>:\n        <span data-index=\"81\" data-type=\"stmt\"><span data-index=\"145\" data-type=\"expr\">yield <span data-index=\"208\" data-type=\"expr\">i</span></span></span></span></span>\n", "data": {"node_loops": {"145": [33], "81": [33], "208": [33]}}, "lineno": 37, "name": "gen"}, "traceback": null, "arguments": [], "return_value": "None", "data": {"num_special_types": 13, "node_values": {"33": true, "145": {"3": ["None", "NoneType"], "2": ["None", "NoneType"], "1": ["None", "NoneType"], "0": ["None", "NoneType"], "5": ["None", "NoneType"], "4": ["None", "NoneType"]}, "80": ["[0, 1, 2, 3, 4, 5]", "list", "len() = 6", ["0", ["0", "int"]], ["1", ["1", "int"]], ["2", ["2", "int"]], ["3", ["3", "int"]], ["4", ["4", "int"]], ["5", ["5", "int"]]], "208": {"3": ["3", "int"], "2": ["2", "int"], "1": ["1", "int"], "0": ["0", "int"], "5": ["5", "int"], "4": ["4", "int"]}, "81": {"3": true, "2": true, "1": true, "0": true, "5": true, "4": true}}, "loop_iterations": {"33": [{"loops": {}, "index": 0}, {"loops": {}, "index": 1}, {"loops": {}, "index": 2}, {"loops": {}, "index": 3}, {"loops": {}, "index": 4}, {"loops": {}, "index": 5}]}, "type_names": ["MyClass", "NoneType", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "long", "set", "str", "tuple", "type", "unicode", "wrapper_descriptor"]}, "exception": null}, {"function": {"html_body": "<span data-index=\"11\" data-type=\"stmt\">@<span data-index=\"40\" data-type=\"expr\">eye</span>\ndef use_gen_2(<span data-index=\"88\" data-type=\"expr\">g</span>):\n<span data-index=\"39\" data-type=\"loop\">    for y in <span data-index=\"90\" data-type=\"expr\">g</span>:\n        <span data-index=\"91\" data-type=\"stmt\"><span data-index=\"155\" data-type=\"expr\"><span data-index=\"213\" data-type=\"expr\">dummy</span>(<span data-index=\"214\" data-type=\"expr\">y</span>)</span></span></span></span>\n", "data": {"node_loops": {"214": [39], "91": [39], "155": [39], "213": [39]}}, "lineno": 49, "name": "use_gen_2"}, "traceback": null, "arguments": [["g", "<generator object gen at 0xABC>"]], "return_value": "None", "data": {"num_special_types": 13, "node_values": {"91": {"2": true, "1": true, "0": true}, "90": ["<generator object gen at 0xABC>", "generator"], "155": {"2": ["None", "NoneType"], "1": ["None", "NoneType"], "0": ["None", "NoneType"]}, "214": {"2": ["5", "int"], "1": ["4", "int"], "0": ["3", "int"]}, "213": {"2": ["<function dummy at 0xABC>", "function"], "1": ["<function dummy at 0xABC>", "function"], "0": ["<function dummy at 0xABC>", "function"]}, "39": true}, "loop_iterations": {"39": [{"loops": {}, "index": 0}, {"loops": {}, "index": 1}, {"loops": {}, "index": 2}]}, "type_names": ["MyClass", "NoneType", "bool", "builtin_function_or_method", "complex", "dict", "float", "frozenset", "function", "generator", "getset_descriptor", "int", "islice", "list", "long", "set", "str", "tuple", "type", "unicode", "wrapper_descriptor"]}, "exception": null}]